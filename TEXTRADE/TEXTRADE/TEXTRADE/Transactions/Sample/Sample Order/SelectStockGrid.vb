
Imports BL

Public Class SelectStockGrid

    Dim USERADD, USEREDIT, USERVIEW, USERDELETE As Boolean      'USED FOR RIGHT MANAGEMAENT
    Public WHERECLAUSE As String = ""
    Public OTHERWHERECLAUSE As String = ""
    Public SOCLAUSE As String = ""
    Public BARCODECLAUSE As String = ""
    Public FRMSTRING As String = ""
    Public DT1 As New DataTable

    Private Sub SaleOrderVsStockGridReport_KeyDown(sender As Object, e As KeyEventArgs) Handles Me.KeyDown
        Try
            If e.KeyCode = Windows.Forms.Keys.Escape Then
                Me.Close()
            End If
        Catch ex As Exception
            If ErrHandle(ex.Message.GetHashCode) = False Then Throw ex
        End Try
    End Sub

    Private Sub cmdok_Click(sender As Object, e As EventArgs) Handles cmdok.Click

        Try
            DT1.Columns.Add("ITEMNAME")
            DT1.Columns.Add("DESIGNNO")
            DT1.Columns.Add("COLOR")

            For i As Integer = 0 To gridbill.RowCount - 1
                Dim dtrow As DataRow = gridbill.GetDataRow(i)
                If Convert.ToBoolean(dtrow("CHK")) = True Then
                    DT1.Rows.Add(dtrow("ITEMNAME"), dtrow("DESIGNNO"), dtrow("COLOR"))
                End If
            Next
            Me.Close()
        Catch ex As Exception
            If ErrHandle(ex.Message.GetHashCode) = False Then Throw ex
        End Try
    End Sub

    Private Sub CMDPHOTOVIEW_Click(sender As Object, e As EventArgs) Handles CMDPHOTOVIEW.Click
        Try

            'GET IMAGES FROM DESIGNMASTER
            PBIMAGE1.Image = Nothing
            Dim OBJCMN As New ClsCommon
            Dim DTIMG As DataTable = OBJCMN.SEARCH("ITEMDESIGNIMAGE.ITEMDESIGN_IMAGE1 AS PHOTO", "", " ITEMDESIGNIMAGE INNER JOIN ITEMMASTER ON ITEMDESIGNIMAGE.ITEMDESIGN_ITEMID = ITEMMASTER.ITEM_id INNER JOIN DESIGNMASTER ON ITEMDESIGNIMAGE.ITEMDESIGN_DESIGNID = DESIGNMASTER.DESIGN_id ", " AND ITEMMASTER.ITEM_NAME = '" & gridbill.GetFocusedRowCellValue("ITEMNAME") & "' AND DESIGNMASTER.DESIGN_NO = '" & gridbill.GetFocusedRowCellValue("DESIGNNO") & "' AND ITEMDESIGNIMAGE.ITEMDESIGN_YEARID = " & YearId)
            If DTIMG.Rows.Count > 0 Then
                If IsDBNull(DTIMG.Rows(0).Item("PHOTO")) = False Then
                    PBIMAGE1.Image = Image.FromStream(New IO.MemoryStream(DirectCast(DTIMG.Rows(0).Item("PHOTO"), Byte())))
                Else
                    PBIMAGE1.Image = Nothing
                End If
            End If


            Dim objVIEW As New ViewImage
            objVIEW.pbsoftcopy.Image = PBIMAGE1.Image
            objVIEW.ShowDialog()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub cmdexit_Click(sender As Object, e As EventArgs) Handles cmdexit.Click
        Me.Close()
    End Sub

    Private Sub SelectStockGrid_Load(sender As Object, e As EventArgs) Handles MyBase.Load

        Try
            Dim DTROW() As DataRow
            DTROW = USERRIGHTS.Select("FormName = 'SALE ORDER'")
            USERADD = DTROW(0).Item(1)
            USEREDIT = DTROW(0).Item(2)
            USERVIEW = DTROW(0).Item(3)
            USERDELETE = DTROW(0).Item(4)

            If USEREDIT = False And USERVIEW = False Then
                MsgBox("Insufficient Rights")
                Exit Sub
            End If

            FILLGRID()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub FILLGRID()
        Try
            Dim OBJCMN As New ClsCommon
            Dim DT As New DataTable

            Dim DTUNIT As DataTable = OBJCMN.SEARCH("UNIT_ABBR", "", "DEFAULTSTOCKUNIT", "")
            If DTUNIT.Rows.Count > 0 Then BARCODECLAUSE = BARCODECLAUSE & " AND UNIT IN (SELECT UNIT_ABBR FROM DEFAULTSTOCKUNIT)"

            If SALEORDERONMTRS = True Then SOCLAUSE = SOCLAUSE & " AND ISNULL(ALLSALEORDER_DESC.SO_MTRS - ALLSALEORDER_DESC.SO_RECDMTRS, 0) > 0 " Else SOCLAUSE = SOCLAUSE & " AND ISNULL(ALLSALEORDER_DESC.SO_QTY - ALLSALEORDER_DESC.SO_RECDQTY, 0) > 0 "

            'THIS IS DONE FOR STOCK VS ORDER REPORT
            If FRMSTRING = "ORDERVSSTOCK" Then
                DT = OBJCMN.SEARCH(" CAST(0 AS BIT) AS CHK, J.ITEMNAME, J.DESIGNNO, J.COLOR, J.YEARID, SUM(J.PCS) AS PCS, SUM(J.MTRS) AS MTRS, SUM(J.PENDINGPCS) AS PENDINGPCS, SUM(J.PENDINGMTRS) AS PENDINGMTRS, SUM(J.BALPCS) AS BALPCS, SUM(J.BALMTRS) AS BALMTRS, J.CMPID, J.YEARID, SUM(ISNULL(LOT_VIEW.BALMTRS, 0)) AS DYEINGMTRS, SUM(ISNULL(ISSUEPACKING_DESC.ISS_MTRS, 0) - ISNULL(ISSUEPACKING_DESC.ISS_OUTMTRS, 0)) AS PACKINGMTRS, SUM(ISNULL(PROGRAMMASTER_DESC.PRG_MTRS, 0) - ISNULL(PROGRAMMASTER_DESC.PRG_OUTMTRS, 0)) AS PROGRAMMTRS ", "", " (SELECT T.item_name AS ITEMNAME, T.DESIGN_NO AS DESIGNNO, T.COLOR_name AS COLOR, SUM(ISNULL(BARCODESTOCK.PCS, 0)) AS PCS, SUM(ISNULL(BARCODESTOCK.MTRS, 0)) AS MTRS, T.ORDERPCS AS PENDINGPCS, T.ORDERMTRS AS PENDINGMTRS, (SUM(ISNULL(BARCODESTOCK.PCS, 0)) - T.ORDERPCS) AS BALPCS, (SUM(ISNULL(BARCODESTOCK.MTRS, 0)) - T.ORDERMTRS) AS BALMTRS, T.CMPID AS CMPID, T.YEARID AS YEARID FROM (SELECT  ITEMMASTER.item_name, DESIGNMASTER.DESIGN_NO, COLORMASTER.COLOR_name, SUM(ISNULL(ALLSALEORDER_DESC.SO_QTY - ALLSALEORDER_DESC.SO_RECDQTY, 0)) AS ORDERPCS, SUM(ISNULL(ALLSALEORDER_DESC.SO_MTRS - ALLSALEORDER_DESC.SO_RECDMTRS, 0)) AS ORDERMTRS, ALLSALEORDER.SO_CMPID AS CMPID, ALLSALEORDER.SO_YEARID AS YEARID, ITEM_ID, DESIGN_ID, COLOR_ID FROM ALLSALEORDER INNER JOIN ALLSALEORDER_DESC ON ALLSALEORDER.so_no = ALLSALEORDER_DESC.SO_NO AND ALLSALEORDER.TYPE = ALLSALEORDER_DESC.TYPE AND ALLSALEORDER.SO_YEARID = ALLSALEORDER_DESC.SO_YEARID INNER JOIN LEDGERS ON ALLSALEORDER.so_ledgerid = LEDGERS.Acc_id INNER JOIN ITEMMASTER ON ALLSALEORDER_DESC.SO_ITEMID = ITEMMASTER.item_id  LEFT OUTER JOIN CATEGORYMASTER ON ITEMMASTER.ITEM_CATEGORYID = CATEGORYMASTER.CATEGORY_ID LEFT OUTER JOIN COLORMASTER ON ALLSALEORDER_DESC.SO_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON ALLSALEORDER_DESC.SO_DESIGNID = DESIGNMASTER.DESIGN_id WHERE ALLSALEORDER_DESC.SO_CLOSED = 'FALSE' " & SOCLAUSE & " AND ALLSALEORDER.SO_YEARID = " & YearId & " GROUP BY ITEMMASTER.item_name, DESIGNMASTER.DESIGN_NO, COLORMASTER.COLOR_name, ALLSALEORDER.SO_CMPID, ALLSALEORDER.SO_YEARID, ITEM_ID, DESIGN_ID, COLOR_ID ) AS T LEFT OUTER JOIN BARCODESTOCK ON T.ITEM_ID = BARCODESTOCK.ITEMID AND T.DESIGN_ID = BARCODESTOCK.DESIGNID AND  T.COLOR_ID = BARCODESTOCK.COLORID AND T.YEARID = BARCODESTOCK.YEARID " & BARCODECLAUSE & "  GROUP BY T.item_name, T.DESIGN_NO, T.COLOR_name,T.CMPID, T.YEARID, T.ORDERPCS, T.ORDERMTRS ) AS J LEFT OUTER JOIN (SELECT ITEMNAME, DESIGN, SHADE, YEARID, SUM(BALMTRS) AS BALMTRS FROM LOT_VIEW WHERE YEARID = " & YearId & " GROUP BY ITEMNAME, DESIGN, SHADE, YEARID) AS LOT_VIEW ON J.ITEMNAME = LOT_VIEW.ITEMNAME AND J.DESIGNNO = LOT_VIEW.DESIGN AND J.COLOR = LOT_VIEW.SHADE AND J.YEARID = LOT_VIEW.YEARID LEFT OUTER JOIN (SELECT ISS_ITEMID, ISS_DESIGNID, ISS_COLORID, ISS_YEARID, SUM(ISS_MTRS) AS ISS_MTRS, SUM(ISS_OUTMTRS) AS ISS_OUTMTRS FROM  ISSUEPACKING_DESC WHERE ROUND(ISNULL(ISS_MTRS - ISS_OUTMTRS,0),2) > 0 AND ISS_YEARID = " & YearId & " GROUP BY ISS_ITEMID, ISS_DESIGNID, ISS_COLORID, ISS_YEARID) AS ISSUEPACKING_DESC LEFT OUTER JOIN ITEMMASTER ON ISS_ITEMID = ITEM_ID LEFT OUTER JOIN DESIGNMASTER ON ISS_DESIGNID = DESIGN_ID LEFT OUTER JOIN COLORMASTER ON ISS_COLORID = COLOR_ID  ON J.ITEMNAME = ITEM_NAME AND J.DESIGNNO = DESIGN_NO AND J.COLOR = COLOR_NAME AND J.YEARID = ISSUEPACKING_DESC.ISS_YEARID LEFT OUTER JOIN (SELECT PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_COLORID, PROGRAM_YEARID, SUM(PROGRAM_PCS) AS PRG_MTRS, SUM(PROGRAM_RECDPCS) AS PRG_OUTMTRS FROM  PROGRAMMASTER_DESC WHERE ROUND(ISNULL(PROGRAM_PCS - PROGRAM_RECDPCS,0),2) > 0 AND PROGRAM_YEARID = " & YearId & " GROUP BY PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_COLORID, PROGRAM_YEARID ) AS PROGRAMMASTER_DESC LEFT OUTER JOIN ITEMMASTER AS PRGITEM ON PROGRAM_ITEMID = PRGITEM.ITEM_ID LEFT OUTER JOIN DESIGNMASTER AS PRGDESIGN ON PROGRAM_DESIGNID = PRGDESIGN.DESIGN_ID LEFT OUTER JOIN COLORMASTER AS PRGCOLOR ON PROGRAM_COLORID = PRGCOLOR.COLOR_ID  ON J.ITEMNAME = PRGITEM.ITEM_NAME AND J.DESIGNNO = PRGDESIGN.DESIGN_NO AND J.COLOR = PRGCOLOR.COLOR_NAME AND J.YEARID = PROGRAMMASTER_DESC.PROGRAM_YEARID ", " GROUP BY J.ITEMNAME, J.DESIGNNO, J.COLOR, J.YEARID, J.CMPID")
            Else
                DT = OBJCMN.SEARCH(" CAST(0 AS BIT) AS CHK, J.ITEMNAME, J.DESIGNNO, J.COLOR, J.YEARID, SUM(J.PCS) AS PCS, SUM(J.MTRS) AS MTRS, SUM(J.PENDINGPCS) AS PENDINGPCS, SUM(J.PENDINGMTRS) AS PENDINGMTRS, SUM(J.BALPCS) AS BALPCS, SUM(J.BALMTRS) AS BALMTRS, J.CMPID, J.YEARID, SUM(ISNULL(LOT_VIEW.BALMTRS, 0)) AS DYEINGMTRS, SUM(ISNULL(ISSUEPACKING_DESC.ISS_MTRS, 0) - ISNULL(ISSUEPACKING_DESC.ISS_OUTMTRS, 0)) AS PACKINGMTRS, SUM(ISNULL(PROGRAMMASTER_DESC.PRG_MTRS, 0) - ISNULL(PROGRAMMASTER_DESC.PRG_OUTMTRS, 0)) AS PROGRAMMTRS ", "", " (SELECT COALESCE(T.ITEMNAME, ASORDER.ITEMNAME) AS ITEMNAME, COALESCE(T.DESIGNNO,ASORDER.DESIGNNO) AS DESIGNNO, ISNULL(T.COLOR, ASORDER.COLOR) AS COLOR, ISNULL(T.PCS,0) AS PCS, ISNULL(T.MTRS,0) AS MTRS, ISNULL(ASORDER.ORDERPCS,0) AS PENDINGPCS, ISNULL(ASORDER.ORDERMTRS,0) AS PENDINGMTRS, (ISNULL(T.PCS,0) - ISNULL(ASORDER.ORDERPCS,0)) AS BALPCS, (ISNULL(T.MTRS,0) - ISNULL(ASORDER.ORDERMTRS,0)) AS BALMTRS, COALESCE(T.CMPID, ASORDER.CMPID) AS CMPID, COALESCE(T.YEARID,ASORDER.YEARID) AS YEARID FROM (SELECT ITEMNAME, DESIGNNO, COLOR, SUM(PCS) AS PCS, SUM(MTRS) AS MTRS, CMPID, YEARID, ITEMID, DESIGNID, COLORID FROM BARCODESTOCK WHERE BARCODESTOCK.YEARID = " & YearId & BARCODECLAUSE & " GROUP BY ITEMNAME, DESIGNNO, COLOR, CMPID, YEARID, ITEMID, DESIGNID, COLORID) AS T FULL OUTER JOIN (SELECT  ISNULL(ITEMMASTER.item_name,'') AS ITEMNAME, ISNULL(DESIGNMASTER.DESIGN_NO,0) AS DESIGNNO, ISNULL(COLORMASTER.COLOR_name,'') AS COLOR, ISNULL(SUM(ALLSALEORDER_DESC.SO_QTY - ALLSALEORDER_DESC.SO_RECDQTY),0) AS ORDERPCS, ISNULL(SUM(ALLSALEORDER_DESC.SO_MTRS - ALLSALEORDER_DESC.SO_RECDMTRS), 0) AS ORDERMTRS, ALLSALEORDER.SO_CMPID AS CMPID, ALLSALEORDER.SO_YEARID AS YEARID, ITEM_ID, DESIGN_ID, COLOR_ID FROM ALLSALEORDER INNER JOIN ALLSALEORDER_DESC ON ALLSALEORDER.so_no = ALLSALEORDER_DESC.SO_NO AND ALLSALEORDER.TYPE = ALLSALEORDER_DESC.TYPE AND ALLSALEORDER.SO_YEARID = ALLSALEORDER_DESC.SO_YEARID INNER JOIN LEDGERS ON ALLSALEORDER.so_ledgerid = LEDGERS.Acc_id INNER JOIN ITEMMASTER ON ALLSALEORDER_DESC.SO_ITEMID = ITEMMASTER.item_id LEFT OUTER JOIN CATEGORYMASTER ON ITEMMASTER.ITEM_CATEGORYID = CATEGORYMASTER.CATEGORY_ID LEFT OUTER JOIN COLORMASTER ON ALLSALEORDER_DESC.SO_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON ALLSALEORDER_DESC.SO_DESIGNID = DESIGNMASTER.DESIGN_id WHERE ALLSALEORDER_DESC.SO_CLOSED = 'FALSE' " & SOCLAUSE & " AND ALLSALEORDER.SO_YEARID = " & YearId & " GROUP BY ITEMMASTER.item_name, DESIGNMASTER.DESIGN_NO, COLORMASTER.COLOR_name, ALLSALEORDER.SO_CMPID, ALLSALEORDER.SO_YEARID, ITEM_ID, DESIGN_ID, COLOR_ID ) AS ASORDER ON T.ITEMID = ASORDER.item_id AND T.DESIGNID = ASORDER.DESIGN_ID  AND  T.COLORID = ASORDER.COLOR_ID AND T.YEARID = ASORDER.YEARID ) AS J LEFT OUTER JOIN (SELECT ITEMNAME, DESIGN, SHADE, YEARID, SUM(BALMTRS) AS BALMTRS FROM LOT_VIEW WHERE YEARID = " & YearId & " GROUP BY ITEMNAME, DESIGN, SHADE, YEARID) AS LOT_VIEW ON J.ITEMNAME = LOT_VIEW.ITEMNAME AND J.DESIGNNO = LOT_VIEW.DESIGN AND J.COLOR = LOT_VIEW.SHADE AND J.YEARID = LOT_VIEW.YEARID  LEFT OUTER JOIN (SELECT ISS_ITEMID, ISS_DESIGNID, ISS_COLORID, ISS_YEARID, SUM(ISS_MTRS) AS ISS_MTRS, SUM(ISS_OUTMTRS) AS ISS_OUTMTRS FROM  ISSUEPACKING_DESC WHERE ROUND(ISNULL(ISS_MTRS - ISS_OUTMTRS,0),2) > 0 AND ISS_YEARID = " & YearId & " GROUP BY ISS_ITEMID, ISS_DESIGNID, ISS_COLORID, ISS_YEARID) AS ISSUEPACKING_DESC LEFT OUTER JOIN ITEMMASTER ON ISS_ITEMID = ITEM_ID LEFT OUTER JOIN DESIGNMASTER ON ISS_DESIGNID = DESIGN_ID LEFT OUTER JOIN COLORMASTER ON ISS_COLORID = COLOR_ID  ON J.ITEMNAME = ITEM_NAME AND J.DESIGNNO = DESIGN_NO AND J.COLOR = COLOR_NAME AND J.YEARID = ISSUEPACKING_DESC.ISS_YEARID LEFT OUTER JOIN (SELECT PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_COLORID, PROGRAM_YEARID, SUM(PROGRAM_PCS) AS PRG_MTRS, SUM(PROGRAM_RECDPCS) AS PRG_OUTMTRS FROM PROGRAMMASTER_DESC WHERE ROUND(ISNULL(PROGRAM_PCS - PROGRAM_RECDPCS,0),2) > 0 AND PROGRAM_YEARID = " & YearId & " GROUP BY PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_COLORID, PROGRAM_YEARID) AS PROGRAMMASTER_DESC LEFT OUTER JOIN ITEMMASTER AS PRGITEM ON PROGRAM_ITEMID = PRGITEM.ITEM_ID LEFT OUTER JOIN DESIGNMASTER AS PRGDESIGN ON PROGRAM_DESIGNID = PRGDESIGN.DESIGN_ID LEFT OUTER JOIN COLORMASTER AS PRGCOLOR ON PROGRAM_COLORID = PRGCOLOR.COLOR_ID  ON J.ITEMNAME = PRGITEM.ITEM_NAME AND J.DESIGNNO = PRGDESIGN.DESIGN_NO AND J.COLOR = PRGCOLOR.COLOR_NAME AND J.YEARID = PROGRAMMASTER_DESC.PROGRAM_YEARID ", " GROUP BY J.ITEMNAME, J.DESIGNNO, J.COLOR, J.YEARID, J.CMPID")
            End If
            gridbilldetails.DataSource = DT
            If DT.Rows.Count > 0 Then
                gridbill.FocusedRowHandle = gridbill.RowCount - 1
                gridbill.TopRowIndex = gridbill.RowCount - 15
            End If
            TOTAL()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub TOTAL()
        For I As Integer = 0 To gridbill.RowCount - 1
            Dim DTROW As DataRow = gridbill.GetDataRow(I)

            'THEY DONT WANT TO ADD DYEING MTRS IN BALSTOCK
            If ClientName = "YASHVI" Then
                DTROW("BALMTRS") = (Val(DTROW("MTRS")) + Val(DTROW("PACKINGMTRS"))) - Val(DTROW("PENDINGMTRS"))
            Else
                DTROW("BALMTRS") = (Val(DTROW("MTRS")) + Val(DTROW("PACKINGMTRS")) + Val(DTROW("DYEINGMTRS"))) - Val(DTROW("PENDINGMTRS"))
            End If
        Next
    End Sub


End Class