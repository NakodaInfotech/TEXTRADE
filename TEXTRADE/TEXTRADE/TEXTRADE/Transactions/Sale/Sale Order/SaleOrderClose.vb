
Imports BL
Imports System.Windows.Forms
Imports DevExpress.XtraGrid.Views.Grid

Public Class SaleOrderClose

    Dim USERADD, USEREDIT, USERVIEW, USERDELETE As Boolean      'USED FOR RIGHT MANAGEMAENT

    Private Sub cmdexit_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdexit.Click
        Me.Close()
    End Sub

    Private Sub SaleOrderClose_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles Me.KeyDown
        Try
            If e.KeyCode = Windows.Forms.Keys.Escape Then
                Me.Close()
            ElseIf e.KeyCode = Keys.Space And e.Control = True Then
                'SELECT ALL DATA
                For i As Integer = 0 To gridbill.RowCount - 1
                    Dim dtrow As DataRow = gridbill.GetDataRow(i)
                    dtrow("CLOSED") = Not Convert.ToBoolean(dtrow("CLOSED"))
                Next
            End If
        Catch ex As Exception
            If ErrHandle(ex.Message.GetHashCode) = False Then Throw ex
        End Try
    End Sub

    Private Sub SaleOrderClose_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Try
            Dim DTROW() As DataRow
            DTROW = USERRIGHTS.Select("FormName = 'SALE ORDER'")
            USERADD = DTROW(0).Item(1)
            USEREDIT = DTROW(0).Item(2)
            USERVIEW = DTROW(0).Item(3)
            USERDELETE = DTROW(0).Item(4)

            If USEREDIT = False And USERVIEW = False Then
                MsgBox("Insufficient Rights")
                Exit Sub
            End If

            'GET REASON
            Dim OBJCMN As New ClsCommon
            Dim DT As DataTable = OBJCMN.search("ISNULL(REASON_NAME,'') AS REASON", "", "REASONMASTER", " AND REASON_YEARID = " & YearId)
            For Each ROW As DataRow In DT.Rows
                CMBREASON.Items.Add(ROW("REASON"))
                CMBMAINREASON.Items.Add(ROW("REASON"))
            Next


            fillgrid()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub FILLGRID()
        Try
            Dim OBJCMN As New ClsCommonMaster
            Dim dt As New DataTable
            If RBPENDING.Checked = True Then

                Dim TEMPCONDITION As String = " WHERE YEARID = " & YearId
                Dim DTUNIT As DataTable = OBJCMN.search("UNIT_ABBR", "", "DEFAULTSTOCKUNIT", "")
                If DTUNIT.Rows.Count > 0 Then TEMPCONDITION = TEMPCONDITION & " AND UNIT IN (SELECT UNIT_ABBR FROM DEFAULTSTOCKUNIT)"

                If SALEORDERONMTRS = True Then
                    dt = OBJCMN.search("T.*, '' AS CLOSEDDATE, '' AS REASON, ISNULL(SUM(BARCODESTOCK.MTRS),0) AS STOCKMTRS, ISNULL(SUM(BARCODESTOCK.PCS),0) AS STOCKPCS", "", " (SELECT SALEORDER.so_no AS SONO, SALEORDER_DESC.SO_GRIDSRNO AS GRIDSRNO, SALEORDER.so_date AS SODATE, LEDGERS.Acc_cmpname AS NAME, ISNULL(AGENTLEDGERS.Acc_cmpname,'') AS AGENTNAME, ISNULL(DISPATCHLEDGERS.Acc_cmpname,'') AS DISPATCHTO, SALEORDER.so_pono AS PARTYPONO, SALEORDER.SO_DUEDATE AS DELDATE, ITEMMASTER.item_name AS ITEMNAME, ISNULL(DESIGNMASTER.DESIGN_NO,'') AS DESIGNNO, ISNULL(COLORMASTER.COLOR_name,'') AS COLOR, ISNULL(SALEORDER_DESC.SO_PARTYPONO,'') AS GRIDPARTYPONO, SALEORDER_DESC.SO_QTY AS PCS, SALEORDER_DESC.SO_CUT AS CUT, SALEORDER_DESC.SO_MTRS AS MTRS, SALEORDER_DESC.SO_RATE AS RATE, SALEORDER_DESC.SO_RECDQTY AS OUTPCS, SALEORDER_DESC.SO_RECDMTRS AS OUTMTRS, (SALEORDER_DESC.SO_QTY - SALEORDER_DESC.SO_RECDQTY) AS BALPCS, ISNULL((SALEORDER_DESC.SO_MTRS - SALEORDER_DESC.SO_RECDMTRS),0) AS BALMTRS, SO_REMARKS AS REMARKS, ISNULL(SO_CLOSED,0) AS CLOSED ,ISNULL(CITYMASTER.city_name, '') AS CITY, ISNULL(QUALITYMASTER.QUALITY_name, '') AS QUALITY, 'SALEORDER' AS TYPE, ISNULL(SO_FORWARD,'') AS FORWARD, (ROUND((ISNULL((SALEORDER_DESC.SO_MTRS - SALEORDER_DESC.SO_RECDMTRS),0)/SALEORDER_DESC.SO_MTRS)*100,2)) AS BALPER, SALEORDER.SO_YEARID AS YEARID , ISNULL(SALEORDER.SO_REFNO,'') AS REFNO  FROM SALEORDER_DESC INNER JOIN SALEORDER ON SALEORDER_DESC.SO_NO = SALEORDER.so_no AND SALEORDER_DESC.SO_YEARID = SALEORDER.SO_YEARID INNER JOIN LEDGERS ON SALEORDER.so_ledgerid = LEDGERS.Acc_id LEFT OUTER JOIN LEDGERS AS DISPATCHLEDGERS ON SALEORDER.SO_PACKINGID = DISPATCHLEDGERS.ACC_ID INNER JOIN ITEMMASTER ON SALEORDER_DESC.SO_ITEMID = ITEMMASTER.item_id LEFT OUTER JOIN COLORMASTER ON SALEORDER_DESC.SO_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON SALEORDER_DESC.SO_DESIGNID = DESIGNMASTER.DESIGN_id LEFT OUTER JOIN LEDGERS AS AGENTLEDGERS ON SALEORDER.so_Agentid = AGENTLEDGERS.Acc_id LEFT OUTER JOIN QUALITYMASTER ON SALEORDER_DESC.SO_QUALITYID = QUALITYMASTER.QUALITY_id LEFT OUTER JOIN CITYMASTER ON LEDGERS.Acc_cityid = CITYMASTER.city_id WHERE SALEORDER_DESC.SO_CLOSED = 'FALSE' and (SALEORDER_DESC.SO_MTRS-SALEORDER_DESC.SO_RECDMTRS)>0 AND dbo.SALEORDER.SO_yearid=" & YearId & " UNION ALL  SELECT OPENINGSALEORDER.OPSO_no AS SONO, OPENINGSALEORDER_DESC.OPSO_GRIDSRNO AS GRIDSRNO, OPENINGSALEORDER.OPSO_date AS SODATE, LEDGERS.Acc_cmpname AS NAME, ISNULL(AGENTLEDGERS.Acc_cmpname,'') AS AGENTNAME, ISNULL(DISPATCHLEDGERS.Acc_cmpname,'') AS DISPATCHTO, OPENINGSALEORDER.OPSO_pono AS PARTYPONO, OPENINGSALEORDER.OPSO_DUEDATE AS DELDATE, ITEMMASTER.item_name AS ITEMNAME, ISNULL(DESIGNMASTER.DESIGN_NO,'') AS DESIGNNO, ISNULL(COLORMASTER.COLOR_name,'') AS COLOR, ISNULL(OPENINGSALEORDER_DESC.OPSO_PARTYPONO,'') AS GRIDPARTYPONO, OPENINGSALEORDER_DESC.OPSO_QTY AS PCS, OPENINGSALEORDER_DESC.OPSO_CUT AS CUT, OPENINGSALEORDER_DESC.OPSO_MTRS AS MTRS, OPENINGSALEORDER_DESC.OPSO_RATE AS RATE, OPENINGSALEORDER_DESC.OPSO_RECDQTY AS OUTPCS, OPENINGSALEORDER_DESC.OPSO_RECDMTRS AS OUTMTRS, (OPENINGSALEORDER_DESC.OPSO_QTY - OPENINGSALEORDER_DESC.OPSO_RECDQTY) AS BALPCS, ISNULL((OPENINGSALEORDER_DESC.OPSO_MTRS - OPENINGSALEORDER_DESC.OPSO_RECDMTRS),0) AS BALMTRS, OPSO_REMARKS AS REMARKS, ISNULL(OPSO_CLOSED,0) AS CLOSED ,ISNULL(CITYMASTER.city_name, '') AS CITY, ISNULL(QUALITYMASTER.QUALITY_name, '') AS QUALITY, 'OPENING' AS TYPE, ISNULL(OPSO_FORWARD,'') AS FORWARD, (ROUND((ISNULL((OPENINGSALEORDER_DESC.OPSO_MTRS - OPENINGSALEORDER_DESC.OPSO_RECDMTRS),0)/OPENINGSALEORDER_DESC.OPSO_MTRS)*100,2)) AS BALPER, OPENINGSALEORDER.OPSO_YEARID AS YEARID , ISNULL(OPENINGSALEORDER.OPSO_REFNO,'') AS REFNO FROM OPENINGSALEORDER_DESC INNER JOIN OPENINGSALEORDER ON OPENINGSALEORDER_DESC.OPSO_NO = OPENINGSALEORDER.OPSO_no AND OPENINGSALEORDER_DESC.OPSO_YEARID = OPENINGSALEORDER.OPSO_YEARID INNER JOIN LEDGERS ON OPENINGSALEORDER.OPSO_ledgerid = LEDGERS.Acc_id LEFT OUTER JOIN LEDGERS AS DISPATCHLEDGERS ON OPENINGSALEORDER.OPSO_PACKINGID = DISPATCHLEDGERS.ACC_ID  INNER JOIN ITEMMASTER ON OPENINGSALEORDER_DESC.OPSO_ITEMID = ITEMMASTER.item_id LEFT OUTER JOIN COLORMASTER ON OPENINGSALEORDER_DESC.OPSO_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON OPENINGSALEORDER_DESC.OPSO_DESIGNID = DESIGNMASTER.DESIGN_id LEFT OUTER JOIN LEDGERS AS AGENTLEDGERS ON OPENINGSALEORDER.OPSO_Agentid = AGENTLEDGERS.Acc_id LEFT OUTER JOIN QUALITYMASTER ON OPENINGSALEORDER_DESC.OPSO_QUALITYID = QUALITYMASTER.QUALITY_id LEFT OUTER JOIN CITYMASTER ON LEDGERS.Acc_cityid = CITYMASTER.city_id WHERE OPENINGSALEORDER_DESC.OPSO_CLOSED = 'FALSE' and (OPENINGSALEORDER_DESC.OPSO_MTRS-OPENINGSALEORDER_DESC.OPSO_RECDMTRS)>0 AND dbo.OPENINGSALEORDER.OPSO_yearid=" & YearId & ") AS T LEFT OUTER JOIN (SELECT * FROM BARCODESTOCK " & TEMPCONDITION & ") AS BARCODESTOCK ON T.ITEMNAME = BARCODESTOCK.ITEMNAME AND T.DESIGNNO = BARCODESTOCK.DESIGNNO AND T.COLOR = BARCODESTOCK.COLOR AND T.YEARID = BARCODESTOCK.YEARID ", " GROUP BY  T.SONO , T.REFNO ,T.GRIDSRNO, T.SODATE, T.NAME, T.AGENTNAME, T.DISPATCHTO, T.PARTYPONO, T.DELDATE, T.ITEMNAME, T.DESIGNNO, T.COLOR, T.GRIDPARTYPONO, T.PCS, T.CUT, T.MTRS, T.RATE, T.OUTPCS, T.OUTMTRS, T.BALPCS, T.BALMTRS, T.REMARKS, T.CLOSED, T.CITY, T.QUALITY, T.TYPE, T.FORWARD, T.BALPER, T.YEARID ORDER BY SONO, GRIDSRNO")
                Else
                    dt = OBJCMN.search("T.*, '' AS CLOSEDDATE, '' AS REASON, ISNULL(SUM(BARCODESTOCK.MTRS),0) AS STOCKMTRS, ISNULL(SUM(BARCODESTOCK.PCS),0) AS STOCKPCS", "", " (SELECT SALEORDER.so_no AS SONO, SALEORDER_DESC.SO_GRIDSRNO AS GRIDSRNO, SALEORDER.so_date AS SODATE, LEDGERS.Acc_cmpname AS NAME, ISNULL(AGENTLEDGERS.Acc_cmpname,'') AS AGENTNAME, ISNULL(DISPATCHLEDGERS.Acc_cmpname,'') AS DISPATCHTO, SALEORDER.so_pono AS PARTYPONO, SALEORDER.SO_DUEDATE AS DELDATE, ITEMMASTER.item_name AS ITEMNAME, ISNULL(DESIGNMASTER.DESIGN_NO,'') AS DESIGNNO, ISNULL(COLORMASTER.COLOR_name,'') AS COLOR, ISNULL(SALEORDER_DESC.SO_PARTYPONO,'') AS GRIDPARTYPONO, SALEORDER_DESC.SO_QTY AS PCS, SALEORDER_DESC.SO_CUT AS CUT, SALEORDER_DESC.SO_MTRS AS MTRS, SALEORDER_DESC.SO_RATE AS RATE, SALEORDER_DESC.SO_RECDQTY AS OUTPCS, SALEORDER_DESC.SO_RECDMTRS AS OUTMTRS, (SALEORDER_DESC.SO_QTY - SALEORDER_DESC.SO_RECDQTY) AS BALPCS, ISNULL((SALEORDER_DESC.SO_MTRS - SALEORDER_DESC.SO_RECDMTRS),0) AS BALMTRS, SO_REMARKS AS REMARKS, ISNULL(SO_CLOSED,0) AS CLOSED ,ISNULL(CITYMASTER.city_name, '') AS CITY, ISNULL(QUALITYMASTER.QUALITY_name, '') AS QUALITY, 'SALEORDER' AS TYPE, ISNULL(SO_FORWARD,'') AS FORWARD, (ROUND((ISNULL((SALEORDER_DESC.SO_QTY - SALEORDER_DESC.SO_RECDQTY),0)/SALEORDER_DESC.SO_QTY)*100,2)) AS BALPER, SALEORDER.SO_YEARID AS YEARID , ISNULL(SALEORDER.SO_REFNO,'') AS REFNO FROM SALEORDER_DESC INNER JOIN SALEORDER ON SALEORDER_DESC.SO_NO = SALEORDER.so_no AND SALEORDER_DESC.SO_YEARID = SALEORDER.SO_YEARID INNER JOIN LEDGERS ON SALEORDER.so_ledgerid = LEDGERS.Acc_id LEFT OUTER JOIN LEDGERS AS DISPATCHLEDGERS ON SALEORDER.SO_PACKINGID = DISPATCHLEDGERS.ACC_ID INNER JOIN ITEMMASTER ON SALEORDER_DESC.SO_ITEMID = ITEMMASTER.item_id LEFT OUTER JOIN COLORMASTER ON SALEORDER_DESC.SO_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON SALEORDER_DESC.SO_DESIGNID = DESIGNMASTER.DESIGN_id LEFT OUTER JOIN LEDGERS AS AGENTLEDGERS ON SALEORDER.so_Agentid = AGENTLEDGERS.Acc_id LEFT OUTER JOIN QUALITYMASTER ON SALEORDER_DESC.SO_QUALITYID = QUALITYMASTER.QUALITY_id LEFT OUTER JOIN CITYMASTER ON LEDGERS.Acc_cityid = CITYMASTER.city_id WHERE SALEORDER_DESC.SO_CLOSED = 'FALSE' and (SALEORDER_DESC.SO_QTY-SALEORDER_DESC.SO_RECDQTY)>0 AND dbo.SALEORDER.SO_yearid=" & YearId & " UNION ALL  SELECT OPENINGSALEORDER.OPSO_no AS SONO, OPENINGSALEORDER_DESC.OPSO_GRIDSRNO AS GRIDSRNO, OPENINGSALEORDER.OPSO_date AS SODATE, LEDGERS.Acc_cmpname AS NAME, ISNULL(AGENTLEDGERS.Acc_cmpname,'') AS AGENTNAME, ISNULL(DISPATCHLEDGERS.Acc_cmpname,'') AS DISPATCHTO, OPENINGSALEORDER.OPSO_pono AS PARTYPONO, OPENINGSALEORDER.OPSO_DUEDATE AS DELDATE, ITEMMASTER.item_name AS ITEMNAME, ISNULL(DESIGNMASTER.DESIGN_NO,'') AS DESIGNNO, ISNULL(COLORMASTER.COLOR_name,'') AS COLOR, ISNULL(OPENINGSALEORDER_DESC.OPSO_PARTYPONO,'') AS GRIDPARTYPONO, OPENINGSALEORDER_DESC.OPSO_QTY AS PCS, OPENINGSALEORDER_DESC.OPSO_CUT AS CUT, OPENINGSALEORDER_DESC.OPSO_MTRS AS MTRS, OPENINGSALEORDER_DESC.OPSO_RATE AS RATE, OPENINGSALEORDER_DESC.OPSO_RECDQTY AS OUTPCS, OPENINGSALEORDER_DESC.OPSO_RECDMTRS AS OUTMTRS, (OPENINGSALEORDER_DESC.OPSO_QTY - OPENINGSALEORDER_DESC.OPSO_RECDQTY) AS BALPCS, ISNULL((OPENINGSALEORDER_DESC.OPSO_MTRS - OPENINGSALEORDER_DESC.OPSO_RECDMTRS),0) AS BALMTRS, OPSO_REMARKS AS REMARKS, ISNULL(OPSO_CLOSED,0) AS CLOSED ,ISNULL(CITYMASTER.city_name, '') AS CITY, ISNULL(QUALITYMASTER.QUALITY_name, '') AS QUALITY, 'OPENING' AS TYPE, ISNULL(OPSO_FORWARD,'') AS FORWARD, (ROUND((ISNULL((OPENINGSALEORDER_DESC.OPSO_QTY - OPENINGSALEORDER_DESC.OPSO_RECDQTY),0)/OPENINGSALEORDER_DESC.OPSO_QTY)*100,2)) AS BALPER, OPENINGSALEORDER.OPSO_YEARID AS YEARID , ISNULL(OPENINGSALEORDER.OPSO_REFNO,'') AS REFNO FROM OPENINGSALEORDER_DESC INNER JOIN OPENINGSALEORDER ON OPENINGSALEORDER_DESC.OPSO_NO = OPENINGSALEORDER.OPSO_no AND OPENINGSALEORDER_DESC.OPSO_YEARID = OPENINGSALEORDER.OPSO_YEARID INNER JOIN LEDGERS ON OPENINGSALEORDER.OPSO_ledgerid = LEDGERS.Acc_id LEFT OUTER JOIN LEDGERS AS DISPATCHLEDGERS ON OPENINGSALEORDER.OPSO_PACKINGID = DISPATCHLEDGERS.ACC_ID  INNER JOIN ITEMMASTER ON OPENINGSALEORDER_DESC.OPSO_ITEMID = ITEMMASTER.item_id LEFT OUTER JOIN COLORMASTER ON OPENINGSALEORDER_DESC.OPSO_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON OPENINGSALEORDER_DESC.OPSO_DESIGNID = DESIGNMASTER.DESIGN_id LEFT OUTER JOIN LEDGERS AS AGENTLEDGERS ON OPENINGSALEORDER.OPSO_Agentid = AGENTLEDGERS.Acc_id LEFT OUTER JOIN QUALITYMASTER ON OPENINGSALEORDER_DESC.OPSO_QUALITYID = QUALITYMASTER.QUALITY_id LEFT OUTER JOIN CITYMASTER ON LEDGERS.Acc_cityid = CITYMASTER.city_id WHERE OPENINGSALEORDER_DESC.OPSO_CLOSED = 'FALSE' and (OPENINGSALEORDER_DESC.OPSO_QTY-OPENINGSALEORDER_DESC.OPSO_RECDQTY)>0 AND dbo.OPENINGSALEORDER.OPSO_yearid=" & YearId & ") AS T LEFT OUTER JOIN (SELECT * FROM BARCODESTOCK " & TEMPCONDITION & ") AS BARCODESTOCK ON T.ITEMNAME = BARCODESTOCK.ITEMNAME AND T.DESIGNNO = BARCODESTOCK.DESIGNNO AND T.COLOR = BARCODESTOCK.COLOR AND T.YEARID = BARCODESTOCK.YEARID ", " GROUP BY  T.SONO, T.REFNO , T.GRIDSRNO, T.SODATE, T.NAME, T.AGENTNAME, T.DISPATCHTO, T.PARTYPONO, T.DELDATE, T.ITEMNAME, T.DESIGNNO, T.COLOR, T.GRIDPARTYPONO, T.PCS, T.CUT, T.MTRS, T.RATE, T.OUTPCS, T.OUTMTRS, T.BALPCS, T.BALMTRS, T.REMARKS, T.CLOSED, T.CITY, T.QUALITY, T.TYPE, T.FORWARD, T.BALPER, T.YEARID ORDER BY SONO, GRIDSRNO")
                End If
            Else
                If SALEORDERONMTRS = True Then
                    dt = OBJCMN.search("*", "", " (SELECT SALEORDER.so_no AS SONO, SALEORDER_DESC.SO_GRIDSRNO AS GRIDSRNO, SALEORDER.so_date AS SODATE, LEDGERS.Acc_cmpname AS NAME, ISNULL(AGENTLEDGERS.Acc_cmpname,'') AS AGENTNAME, ISNULL(DISPATCHLEDGERS.Acc_cmpname,'') AS DISPATCHTO, SALEORDER.so_pono AS PARTYPONO, SALEORDER.SO_DUEDATE AS DELDATE, ITEMMASTER.item_name AS ITEMNAME, ISNULL(DESIGNMASTER.DESIGN_NO,'') AS DESIGNNO, ISNULL(COLORMASTER.COLOR_name,'') AS COLOR, ISNULL(SALEORDER_DESC.SO_PARTYPONO,'') AS GRIDPARTYPONO, SALEORDER_DESC.SO_QTY AS PCS, SALEORDER_DESC.SO_CUT AS CUT, SALEORDER_DESC.SO_MTRS AS MTRS, SALEORDER_DESC.SO_RATE AS RATE, SALEORDER_DESC.SO_RECDQTY AS OUTPCS, SALEORDER_DESC.SO_RECDMTRS AS OUTMTRS, (SALEORDER_DESC.SO_QTY - SALEORDER_DESC.SO_RECDQTY) AS BALPCS, ISNULL((SALEORDER_DESC.SO_MTRS - SALEORDER_DESC.SO_RECDMTRS),0) AS BALMTRS, SO_REMARKS AS REMARKS, cast(0 as BIT) AS CLOSED ,ISNULL(CITYMASTER.city_name, '') AS CITY, ISNULL(QUALITYMASTER.QUALITY_name, '') AS QUALITY, 'SALEORDER' AS TYPE, ISNULL(SO_FORWARD,'') AS FORWARD, (ROUND((ISNULL((SALEORDER_DESC.SO_MTRS - SALEORDER_DESC.SO_RECDMTRS),0)/SALEORDER_DESC.SO_MTRS)*100,2)) AS BALPER , ISNULL(SALEORDER.SO_REFNO,'') AS REFNO, ISNULL(SALEORDER_DESC.SO_CLOSEDDATE,'') AS CLOSEDDATE, ISNULL(SALEORDER_DESC.SO_CLOSEDREASON,'') AS REASON FROM SALEORDER_DESC INNER JOIN SALEORDER ON SALEORDER_DESC.SO_NO = SALEORDER.so_no AND SALEORDER_DESC.SO_YEARID = SALEORDER.SO_YEARID INNER JOIN LEDGERS ON SALEORDER.so_ledgerid = LEDGERS.Acc_id  LEFT OUTER JOIN LEDGERS AS DISPATCHLEDGERS ON SALEORDER.SO_PACKINGID = DISPATCHLEDGERS.ACC_ID INNER JOIN ITEMMASTER ON SALEORDER_DESC.SO_ITEMID = ITEMMASTER.item_id LEFT OUTER JOIN COLORMASTER ON SALEORDER_DESC.SO_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON SALEORDER_DESC.SO_DESIGNID = DESIGNMASTER.DESIGN_id LEFT OUTER JOIN LEDGERS AS AGENTLEDGERS ON SALEORDER.so_Agentid = AGENTLEDGERS.Acc_id LEFT OUTER JOIN QUALITYMASTER ON SALEORDER_DESC.SO_QUALITYID = QUALITYMASTER.QUALITY_id LEFT OUTER JOIN CITYMASTER ON LEDGERS.Acc_cityid = CITYMASTER.city_id WHERE SALEORDER_DESC.SO_CLOSED = 'TRUE' and (SALEORDER_DESC.SO_MTRS-SALEORDER_DESC.SO_RECDMTRS)>0 AND dbo.SALEORDER.SO_yearid=" & YearId & " UNION ALL  SELECT OPENINGSALEORDER.OPSO_no AS SONO, OPENINGSALEORDER_DESC.OPSO_GRIDSRNO AS GRIDSRNO, OPENINGSALEORDER.OPSO_date AS SODATE, LEDGERS.Acc_cmpname AS NAME, ISNULL(AGENTLEDGERS.Acc_cmpname,'') AS AGENTNAME, ISNULL(DISPATCHLEDGERS.Acc_cmpname,'') AS DISPATCHTO, OPENINGSALEORDER.OPSO_pono AS PARTYPONO, OPENINGSALEORDER.OPSO_DUEDATE AS DELDATE, ITEMMASTER.item_name AS ITEMNAME, ISNULL(DESIGNMASTER.DESIGN_NO,'') AS DESIGNNO, ISNULL(COLORMASTER.COLOR_name,'') AS COLOR, ISNULL(OPENINGSALEORDER_DESC.OPSO_PARTYPONO,'') AS GRIDPARTYPONO, OPENINGSALEORDER_DESC.OPSO_QTY AS PCS, OPENINGSALEORDER_DESC.OPSO_CUT AS CUT, OPENINGSALEORDER_DESC.OPSO_MTRS AS MTRS, OPENINGSALEORDER_DESC.OPSO_RATE AS RATE, OPENINGSALEORDER_DESC.OPSO_RECDQTY AS OUTPCS, OPENINGSALEORDER_DESC.OPSO_RECDMTRS AS OUTMTRS, (OPENINGSALEORDER_DESC.OPSO_QTY - OPENINGSALEORDER_DESC.OPSO_RECDQTY) AS BALPCS, ISNULL((OPENINGSALEORDER_DESC.OPSO_MTRS - OPENINGSALEORDER_DESC.OPSO_RECDMTRS),0) AS BALMTRS, OPSO_REMARKS AS REMARKS, cast(0 as BIT) AS CLOSED ,ISNULL(CITYMASTER.city_name, '') AS CITY, ISNULL(QUALITYMASTER.QUALITY_name, '') AS QUALITY, 'OPENING' AS TYPE, ISNULL(OPSO_FORWARD,'') AS FORWARD, (ROUND((ISNULL((OPENINGSALEORDER_DESC.OPSO_MTRS - OPENINGSALEORDER_DESC.OPSO_RECDMTRS),0)/OPENINGSALEORDER_DESC.OPSO_MTRS)*100,2)) AS BALPER , ISNULL(OPENINGSALEORDER.OPSO_REFNO,'') AS REFNO, ISNULL(OPENINGSALEORDER_DESC.OPSO_CLOSEDDATE,'') AS CLOSEDDATE, ISNULL(OPENINGSALEORDER_DESC.OPSO_CLOSEDREASON,'') AS REASON FROM OPENINGSALEORDER_DESC INNER JOIN OPENINGSALEORDER ON OPENINGSALEORDER_DESC.OPSO_NO = OPENINGSALEORDER.OPSO_no AND OPENINGSALEORDER_DESC.OPSO_YEARID = OPENINGSALEORDER.OPSO_YEARID INNER JOIN LEDGERS ON OPENINGSALEORDER.OPSO_ledgerid = LEDGERS.Acc_id LEFT OUTER JOIN LEDGERS AS DISPATCHLEDGERS ON OPENINGSALEORDER.OPSO_PACKINGID = DISPATCHLEDGERS.ACC_ID  INNER JOIN ITEMMASTER ON OPENINGSALEORDER_DESC.OPSO_ITEMID = ITEMMASTER.item_id LEFT OUTER JOIN COLORMASTER ON OPENINGSALEORDER_DESC.OPSO_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON OPENINGSALEORDER_DESC.OPSO_DESIGNID = DESIGNMASTER.DESIGN_id LEFT OUTER JOIN LEDGERS AS AGENTLEDGERS ON OPENINGSALEORDER.OPSO_Agentid = AGENTLEDGERS.Acc_id LEFT OUTER JOIN QUALITYMASTER ON OPENINGSALEORDER_DESC.OPSO_QUALITYID = QUALITYMASTER.QUALITY_id LEFT OUTER JOIN CITYMASTER ON LEDGERS.Acc_cityid = CITYMASTER.city_id WHERE OPENINGSALEORDER_DESC.OPSO_CLOSED = 'TRUE' and (OPENINGSALEORDER_DESC.OPSO_MTRS-OPENINGSALEORDER_DESC.OPSO_RECDMTRS)>0 AND dbo.OPENINGSALEORDER.OPSO_yearid=" & YearId & ") AS T", " ORDER BY SONO, GRIDSRNO")
                Else
                    dt = OBJCMN.search("*", "", " (SELECT SALEORDER.so_no AS SONO, SALEORDER_DESC.SO_GRIDSRNO AS GRIDSRNO, SALEORDER.so_date AS SODATE, LEDGERS.Acc_cmpname AS NAME, ISNULL(AGENTLEDGERS.Acc_cmpname,'') AS AGENTNAME, ISNULL(DISPATCHLEDGERS.Acc_cmpname,'') AS DISPATCHTO, SALEORDER.so_pono AS PARTYPONO, SALEORDER.SO_DUEDATE AS DELDATE, ITEMMASTER.item_name AS ITEMNAME, ISNULL(DESIGNMASTER.DESIGN_NO,'') AS DESIGNNO, ISNULL(COLORMASTER.COLOR_name,'') AS COLOR, ISNULL(SALEORDER_DESC.SO_PARTYPONO,'') AS GRIDPARTYPONO, SALEORDER_DESC.SO_QTY AS PCS, SALEORDER_DESC.SO_CUT AS CUT, SALEORDER_DESC.SO_MTRS AS MTRS, SALEORDER_DESC.SO_RATE AS RATE, SALEORDER_DESC.SO_RECDQTY AS OUTPCS, SALEORDER_DESC.SO_RECDMTRS AS OUTMTRS, (SALEORDER_DESC.SO_QTY - SALEORDER_DESC.SO_RECDQTY) AS BALPCS, ISNULL((SALEORDER_DESC.SO_MTRS - SALEORDER_DESC.SO_RECDMTRS),0) AS BALMTRS, SO_REMARKS AS REMARKS, cast(0 as BIT) AS CLOSED ,ISNULL(CITYMASTER.city_name, '') AS CITY, ISNULL(QUALITYMASTER.QUALITY_name, '') AS QUALITY, 'SALEORDER' AS TYPE, ISNULL(SO_FORWARD,'') AS FORWARD, (ROUND((ISNULL((SALEORDER_DESC.SO_QTY - SALEORDER_DESC.SO_RECDQTY),0)/SALEORDER_DESC.SO_QTY)*100,2)) AS BALPER , ISNULL(SALEORDER.SO_REFNO,'') AS REFNO, ISNULL(SALEORDER_DESC.SO_CLOSEDDATE,'') AS CLOSEDDATE, ISNULL(SALEORDER_DESC.SO_CLOSEDREASON,'') AS REASON FROM SALEORDER_DESC INNER JOIN SALEORDER ON SALEORDER_DESC.SO_NO = SALEORDER.so_no AND SALEORDER_DESC.SO_YEARID = SALEORDER.SO_YEARID INNER JOIN LEDGERS ON SALEORDER.so_ledgerid = LEDGERS.Acc_id  LEFT OUTER JOIN LEDGERS AS DISPATCHLEDGERS ON SALEORDER.SO_PACKINGID = DISPATCHLEDGERS.ACC_ID INNER JOIN ITEMMASTER ON SALEORDER_DESC.SO_ITEMID = ITEMMASTER.item_id LEFT OUTER JOIN COLORMASTER ON SALEORDER_DESC.SO_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON SALEORDER_DESC.SO_DESIGNID = DESIGNMASTER.DESIGN_id LEFT OUTER JOIN LEDGERS AS AGENTLEDGERS ON SALEORDER.so_Agentid = AGENTLEDGERS.Acc_id LEFT OUTER JOIN QUALITYMASTER ON SALEORDER_DESC.SO_QUALITYID = QUALITYMASTER.QUALITY_id LEFT OUTER JOIN CITYMASTER ON LEDGERS.Acc_cityid = CITYMASTER.city_id WHERE SALEORDER_DESC.SO_CLOSED = 'TRUE' and (SALEORDER_DESC.SO_QTY-SALEORDER_DESC.SO_RECDQTY)>0 AND dbo.SALEORDER.SO_yearid=" & YearId & " UNION ALL  SELECT OPENINGSALEORDER.OPSO_no AS SONO, OPENINGSALEORDER_DESC.OPSO_GRIDSRNO AS GRIDSRNO, OPENINGSALEORDER.OPSO_date AS SODATE, LEDGERS.Acc_cmpname AS NAME, ISNULL(AGENTLEDGERS.Acc_cmpname,'') AS AGENTNAME, ISNULL(DISPATCHLEDGERS.Acc_cmpname,'') AS DISPATCHTO, OPENINGSALEORDER.OPSO_pono AS PARTYPONO, OPENINGSALEORDER.OPSO_DUEDATE AS DELDATE, ITEMMASTER.item_name AS ITEMNAME, ISNULL(DESIGNMASTER.DESIGN_NO,'') AS DESIGNNO, ISNULL(COLORMASTER.COLOR_name,'') AS COLOR, ISNULL(OPENINGSALEORDER_DESC.OPSO_PARTYPONO,'') AS GRIDPARTYPONO, OPENINGSALEORDER_DESC.OPSO_QTY AS PCS, OPENINGSALEORDER_DESC.OPSO_CUT AS CUT, OPENINGSALEORDER_DESC.OPSO_MTRS AS MTRS, OPENINGSALEORDER_DESC.OPSO_RATE AS RATE, OPENINGSALEORDER_DESC.OPSO_RECDQTY AS OUTPCS, OPENINGSALEORDER_DESC.OPSO_RECDMTRS AS OUTMTRS, (OPENINGSALEORDER_DESC.OPSO_QTY - OPENINGSALEORDER_DESC.OPSO_RECDQTY) AS BALPCS, ISNULL((OPENINGSALEORDER_DESC.OPSO_MTRS - OPENINGSALEORDER_DESC.OPSO_RECDMTRS),0) AS BALMTRS, OPSO_REMARKS AS REMARKS, cast(0 as BIT) AS CLOSED ,ISNULL(CITYMASTER.city_name, '') AS CITY, ISNULL(QUALITYMASTER.QUALITY_name, '') AS QUALITY, 'OPENING' AS TYPE, ISNULL(OPSO_FORWARD,'') AS FORWARD, (ROUND((ISNULL((OPENINGSALEORDER_DESC.OPSO_QTY - OPENINGSALEORDER_DESC.OPSO_RECDQTY),0)/OPENINGSALEORDER_DESC.OPSO_QTY)*100,2)) AS BALPER , ISNULL(OPENINGSALEORDER.OPSO_REFNO,'') AS REFNO, ISNULL(OPENINGSALEORDER_DESC.OPSO_CLOSEDDATE,'') AS CLOSEDDATE, ISNULL(OPENINGSALEORDER_DESC.OPSO_CLOSEDREASON,'') AS REASON  FROM OPENINGSALEORDER_DESC INNER JOIN OPENINGSALEORDER ON OPENINGSALEORDER_DESC.OPSO_NO = OPENINGSALEORDER.OPSO_no AND OPENINGSALEORDER_DESC.OPSO_YEARID = OPENINGSALEORDER.OPSO_YEARID INNER JOIN LEDGERS ON OPENINGSALEORDER.OPSO_ledgerid = LEDGERS.Acc_id LEFT OUTER JOIN LEDGERS AS DISPATCHLEDGERS ON OPENINGSALEORDER.OPSO_PACKINGID = DISPATCHLEDGERS.ACC_ID  INNER JOIN ITEMMASTER ON OPENINGSALEORDER_DESC.OPSO_ITEMID = ITEMMASTER.item_id LEFT OUTER JOIN COLORMASTER ON OPENINGSALEORDER_DESC.OPSO_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON OPENINGSALEORDER_DESC.OPSO_DESIGNID = DESIGNMASTER.DESIGN_id LEFT OUTER JOIN LEDGERS AS AGENTLEDGERS ON OPENINGSALEORDER.OPSO_Agentid = AGENTLEDGERS.Acc_id LEFT OUTER JOIN QUALITYMASTER ON OPENINGSALEORDER_DESC.OPSO_QUALITYID = QUALITYMASTER.QUALITY_id LEFT OUTER JOIN CITYMASTER ON LEDGERS.Acc_cityid = CITYMASTER.city_id WHERE OPENINGSALEORDER_DESC.OPSO_CLOSED = 'TRUE' and (OPENINGSALEORDER_DESC.OPSO_QTY-OPENINGSALEORDER_DESC.OPSO_RECDQTY)>0 AND dbo.OPENINGSALEORDER.OPSO_yearid=" & YearId & ") AS T", " ORDER BY SONO, GRIDSRNO")
                End If
            End If

            gridbilldetails.DataSource = dt
            If dt.Rows.Count > 0 Then
                gridbill.FocusedRowHandle = gridbill.RowCount - 1
                gridbill.TopRowIndex = gridbill.RowCount - 15
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub cmdok_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdok.Click
        Try
            If RBPENDING.Checked = True Then
                For I As Integer = 0 To gridbill.RowCount - 1
                    Dim DTROW As DataRow = gridbill.GetDataRow(I)
                    If Convert.ToBoolean(DTROW("CLOSED")) = True Then
                        If IsDBNull(DTROW("CLOSEDDATE")) = False AndAlso DTROW("CLOSEDDATE") = "" Then
                            MsgBox("Enter Closed Date", MsgBoxStyle.Critical)
                            Exit Sub
                        End If
                    End If
                Next
            Else
                If MsgBox("You have trying to Re-Open Closed Orders, Wish to Proceed?", MsgBoxStyle.YesNo) = MsgBoxResult.No Then Exit Sub
            End If



            Dim OBJCMN As New ClsCommon
            For I As Integer = 0 To gridbill.RowCount - 1
                Dim DTROW As DataRow = gridbill.GetDataRow(I)
                If RBPENDING.Checked = True Then
                    If Convert.ToBoolean(DTROW("CLOSED")) = True AndAlso IsDBNull(DTROW("CLOSEDDATE")) = False AndAlso DTROW("CLOSEDDATE") <> "" Then
                        Dim TEMP As DateTime
                        DateTime.TryParse(DTROW("CLOSEDDATE"), TEMP)
                        If DTROW("TYPE") = "SALEORDER" Then Dim DT As DataTable = OBJCMN.Execute_Any_String("UPDATE SALEORDER_DESC SET SO_CLOSED = 1, SO_CLOSEDDATE = '" & Format(TEMP, "MM/dd/yyyy") & "', SO_CLOSEDREASON = '" & DTROW("REASON") & "' WHERE SO_NO = " & Val(DTROW("SONO")) & " AND SO_GRIDSRNO = " & Val(DTROW("GRIDSRNO")) & " AND SO_YEARID = " & YearId, "", "") Else Dim DT As DataTable = OBJCMN.Execute_Any_String("UPDATE OPENINGSALEORDER_DESC SET OPSO_CLOSED = 1, OPSO_CLOSEDDATE = '" & Format(TEMP, "MM/dd/yyyy") & "', OPSO_CLOSEDREASON = '" & DTROW("REASON") & "' WHERE OPSO_NO = " & Val(DTROW("SONO")) & " AND OPSO_GRIDSRNO = " & Val(DTROW("GRIDSRNO")) & " AND OPSO_YEARID = " & YearId, "", "")
                    End If
                Else
                    If Convert.ToBoolean(DTROW("CLOSED")) = True Then
                        If DTROW("TYPE") = "SALEORDER" Then Dim DT As DataTable = OBJCMN.Execute_Any_String("UPDATE SALEORDER_DESC SET SO_CLOSED = 0, SO_CLOSEDREASON = '' WHERE SO_NO = " & Val(DTROW("SONO")) & " AND SO_GRIDSRNO = " & Val(DTROW("GRIDSRNO")) & " AND SO_YEARID = " & YearId, "", "") Else Dim DT As DataTable = OBJCMN.Execute_Any_String("UPDATE OPENINGSALEORDER_DESC SET OPSO_CLOSED = 0, OPSO_CLOSEDREASON = '' WHERE OPSO_NO = " & Val(DTROW("SONO")) & " AND OPSO_GRIDSRNO = " & Val(DTROW("GRIDSRNO")) & " AND OPSO_YEARID = " & YearId, "", "")
                    End If
                End If
            Next
            fillgrid()
            gridbill.Focus()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub CMDREFRESH_Click(sender As Object, e As EventArgs) Handles CMDREFRESH.Click
        Try
            fillgrid()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub gridbill_RowStyle(ByVal sender As Object, ByVal e As DevExpress.XtraGrid.Views.Grid.RowStyleEventArgs) Handles gridbill.RowStyle
        Try
            If e.RowHandle >= 0 Then
                Dim View As GridView = sender
                If View.GetRowCellDisplayText(e.RowHandle, View.Columns("CLOSED")) = "Checked" Then
                    e.Appearance.Font = New System.Drawing.Font("CALIBRI", 9.0F, System.Drawing.FontStyle.Bold)
                    e.Appearance.BackColor = Color.Yellow
                End If
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub CMDAPPLY_Click(sender As Object, e As EventArgs) Handles CMDAPPLY.Click
        Try
            For I As Integer = 0 To gridbill.RowCount - 1
                Dim DTROW As DataRow = gridbill.GetDataRow(I)
                If Convert.ToBoolean(DTROW("CLOSED")) = True Then
                    If IsDBNull(DTROW("CLOSEDDATE")) = False AndAlso DTROW("CLOSEDDATE") = "" Then
                        DTROW("CLOSEDDATE") = DTCLOSEDATE.Value.Date.ToString
                        DTROW("REASON") = CMBMAINREASON.Text.Trim
                    End If
                End If
            Next
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub gridbill_ValidateRow(ByVal sender As Object, ByVal e As DevExpress.XtraGrid.Views.Base.ValidateRowEventArgs) Handles gridbill.ValidateRow
        Try
            If IsDBNull(gridbill.GetRowCellValue(e.RowHandle, "CLOSEDDATE")) = False Then

                If gridbill.GetRowCellValue(e.RowHandle, "CLOSEDDATE").ToString <> "" Then
                    'PARSING DATE FORMATS WHETHER THEY ARE CLOSEDDATE OR NOT
                    Dim TEMP As DateTime
                    If Not DateTime.TryParse(gridbill.GetRowCellValue(e.RowHandle, "CLOSEDDATE"), TEMP) Then
                        e.Valid = False
                        gridbill.SetColumnError(GCLOSEDDATE, "Invalid Date")
                        Exit Sub
                    Else
                        If gridbill.GetRowCellValue(e.RowHandle, "CLOSEDDATE") < Convert.ToDateTime(gridbill.GetRowCellValue(e.RowHandle, "DATE")).Date Then
                            e.Valid = False
                            gridbill.SetColumnError(GCLOSEDDATE, "Date must be After Order Date")
                            Exit Sub
                        End If
                    End If
                End If

            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub PrintToolStripButton_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles PrintToolStripButton.Click
        Try

            Dim PATH As String = Application.StartupPath & "\Sale Order Details.XLS"
            Dim opti As New DevExpress.XtraPrinting.XlsExportOptions
            opti.ShowGridLines = True
            opti.SheetName = "Sale Order Details"
            gridbill.ExportToXls(PATH, opti)
            EXCELCMPHEADER(PATH, "Sale Order Details", gridbill.VisibleColumns.Count + gridbill.GroupCount)
        Catch ex As Exception
            MsgBox("Sale Order Details Excel File is Open, Please Close the File first then try to Export", MsgBoxStyle.Critical)
        End Try
    End Sub

    Private Sub CHKSELECTALL_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CHKSELECTALL.CheckedChanged
        Try
            If gridbilldetails.Visible = True Then
                For i As Integer = 0 To gridbill.RowCount - 1
                    Dim dtrow As DataRow = gridbill.GetDataRow(i)
                    dtrow("CLOSED") = CHKSELECTALL.Checked
                Next
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub SaleOrderClose_Shown(sender As Object, e As EventArgs) Handles Me.Shown
        Try
            If ClientName = "INDRANI" Then
                GSONO.Caption = "Sr No."
                GREFNO.Caption = "SO No"
            End If


            If ClientName = "SOFTAS" Then
                GAGENTNAME.Visible = False
                GCITY.Visible = False
                GDESIGNNO.Visible = False
                GQUALITY.Visible = False
                GBALMTRS.VisibleIndex = GCOLOR.VisibleIndex + 1
            End If

        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub gridbill_KeyDown(sender As Object, e As KeyEventArgs) Handles gridbill.KeyDown
        Try
            If e.KeyCode = Keys.Space Then
                Dim dtrow As DataRow = gridbill.GetFocusedDataRow()
                dtrow("CLOSED") = Not dtrow("CLOSED")
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub
End Class