
Imports BL

Public Class DesignHistory

    Public WHERECLAUSE As String = ""
    Public DESIGNNO As String = ""

    Private Sub cmdexit_Click(sender As Object, e As EventArgs) Handles cmdexit.Click
        Me.Close()
    End Sub

    Sub FILLGRID()
        Try
            GRIDDESIGN.ColumnCount = 1
            GRIDDESIGN.RowCount = 0

            Dim OBJCMN As New ClsCommon
            Dim DT As New DataTable
            Dim TEMPCONDITION As String = ""
            Dim DTUNIT As New DataTable


            'FIRST WE WILL GET THE NO OF SHADES PRESENT IN THAT DESIGNNO
            DT = OBJCMN.search(" DISTINCT COLOR_NAME AS COLOR", "", " COLORMASTER INNER JOIN DESIGNMASTER_COLOR ON DESIGNMASTER_COLOR.DESIGN_COLORID = COLORMASTER.COLOR_id INNER JOIN DESIGNMASTER ON DESIGNMASTER.DESIGN_id = DESIGNMASTER_COLOR.DESIGN_ID ", " AND ISNULL(DESIGNMASTER.DESIGN_NO,'')='" & DESIGNNO & "' and COLOR_yearid = " & YearId)
            If DT.Rows.Count > 0 Then
                For Each DR As DataRow In DT.Rows
                    GRIDDESIGN.Columns.Add(DR("COLOR"), DR("COLOR"))
                    GRIDDESIGN.Columns(GRIDDESIGN.ColumnCount - 1).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                Next
            End If


            Dim OBJ(GRIDDESIGN.Columns.Count - 1) As Object
            Dim OBJTOTAL(GRIDDESIGN.Columns.Count - 1) As Object

            'GET MTRS FROM OPENINGSTOCK
            For J As Integer = 1 To GRIDDESIGN.Columns.Count - 1
                DT = OBJCMN.search(" ISNULL(SUM(SM_MTRS),0) AS SMMTRS", "", " STOCKMASTER  INNER JOIN DESIGNMASTER ON SM_DESIGNID = DESIGN_ID INNER JOIN COLORMASTER ON SM_COLORID = COLOR_ID ", " AND ISNULL(DESIGNMASTER.DESIGN_NO,'')='" & DESIGNNO & "' AND COLORMASTER.COLOR_NAME = '" & GRIDDESIGN.Columns(J).HeaderText & "' and SM_yearid = " & YearId)
                OBJ(0) = "OPENING STOCK"
                If DT.Rows.Count > 0 Then OBJ(J) = Format(Val(DT.Rows(0).Item("SMMTRS")), "0.00") Else OBJ(J) = 0.00
            Next
            GRIDDESIGN.Rows.Add(OBJ)


            'GET MTRS FROM DYEING RECEIPT
            For J As Integer = 1 To GRIDDESIGN.Columns.Count - 1
                DT = OBJCMN.search(" ISNULL(SUM(MATREC_RECDMTRS),0) AS RECDMTRS", "", " MATERIALRECEIPT_DESC INNER JOIN DESIGNMASTER ON MATREC_DESIGNID = DESIGN_ID INNER JOIN COLORMASTER ON MATREC_COLORID = COLOR_ID ", " AND ISNULL(DESIGNMASTER.DESIGN_NO,'')='" & DESIGNNO & "' AND COLORMASTER.COLOR_NAME = '" & GRIDDESIGN.Columns(J).HeaderText & "' and MATREC_yearid = " & YearId)
                OBJ(0) = "DYEING RECEIPT"
                If DT.Rows.Count > 0 Then OBJ(J) = Format(Val(DT.Rows(0).Item("RECDMTRS")), "0.00") Else OBJ(J) = 0.00
            Next
            GRIDDESIGN.Rows.Add(OBJ)


            'GET RATE FROM PURCHASE INVOICE (JOB CHARGES)
            For J As Integer = 1 To GRIDDESIGN.Columns.Count - 1
                DT = OBJCMN.search(" TOP 1 ISNULL(PURCHASEMASTER_DESC.BILL_RATE,0) AS BILLRATE", "", " PURCHASEMASTER INNER JOIN PURCHASEMASTER_DESC ON PURCHASEMASTER.BILL_NO = PURCHASEMASTER_DESC.BILL_NO AND PURCHASEMASTER.BILL_REGISTERID = PURCHASEMASTER_DESC.BILL_REGISTERID AND PURCHASEMASTER.BILL_YEARID = PURCHASEMASTER_DESC.BILL_YEARID INNER JOIN DESIGNMASTER ON BILL_DESIGNID = DESIGN_ID INNER JOIN COLORMASTER ON BILL_COLORID = COLOR_ID ", " AND ISNULL(DESIGNMASTER.DESIGN_NO,'')='" & DESIGNNO & "' AND COLORMASTER.COLOR_NAME = '" & GRIDDESIGN.Columns(J).HeaderText & "' and PURCHASEMASTER.BILL_PURTYPE  ='JOB CHARGES' AND PURCHASEMASTER.BILL_yearid = " & YearId & " ORDER BY PURCHASEMASTER.BILL_NO DESC")
                OBJ(0) = "DYEING BILL RATE"
                If DT.Rows.Count > 0 Then OBJ(J) = Format(Val(DT.Rows(0).Item("BILLRATE")), "0.00") Else OBJ(J) = 0.00
            Next
            GRIDDESIGN.Rows.Add(OBJ)
            GRIDDESIGN.Rows(GRIDDESIGN.RowCount - 1).DefaultCellStyle.BackColor = Color.LemonChiffon


            'GET RATE FROM DYEING PROGRAM
            For J As Integer = 1 To GRIDDESIGN.Columns.Count - 1
                DT = OBJCMN.search(" TOP 1 ISNULL(PROGRAMMASTER_DESC.PROGRAM_RATE,0) AS PROGRATE", "", " PROGRAMMASTER INNER JOIN PROGRAMMASTER_DESC ON PROGRAMMASTER.PROGRAM_NO = PROGRAMMASTER_DESC.PROGRAM_NO AND PROGRAMMASTER.PROGRAM_YEARID = PROGRAMMASTER_DESC.PROGRAM_YEARID INNER JOIN DESIGNMASTER ON PROGRAM_DESIGNID = DESIGN_ID INNER JOIN COLORMASTER ON PROGRAM_COLORID = COLOR_ID ", " AND ISNULL(DESIGNMASTER.DESIGN_NO,'')='" & DESIGNNO & "' AND COLORMASTER.COLOR_NAME = '" & GRIDDESIGN.Columns(J).HeaderText & "' and PROGRAMMASTER.PROGRAM_yearid = " & YearId & " ORDER BY PROGRAMMASTER.PROGRAM_NO DESC")
                OBJ(0) = "PROGRAM RATE"
                If DT.Rows.Count > 0 Then OBJ(J) = Format(Val(DT.Rows(0).Item("PROGRATE")), "0.00") Else OBJ(J) = 0.00
            Next
            GRIDDESIGN.Rows.Add(OBJ)
            GRIDDESIGN.Rows(GRIDDESIGN.RowCount - 1).DefaultCellStyle.BackColor = Color.LemonChiffon


            'GET MTRS FROM JOBOUT
            For J As Integer = 1 To GRIDDESIGN.Columns.Count - 1
                DT = OBJCMN.search(" ISNULL(SUM(JO_MTRS),0)*-1 AS JOMTRS", "", " JOBOUT_DESC INNER JOIN DESIGNMASTER ON JO_DESIGNID = DESIGN_ID INNER JOIN COLORMASTER ON JO_COLORID = COLOR_ID ", " AND ISNULL(DESIGNMASTER.DESIGN_NO,'')='" & DESIGNNO & "' AND COLORMASTER.COLOR_NAME = '" & GRIDDESIGN.Columns(J).HeaderText & "' and JOBOUT_DESC.JO_yearid = " & YearId)
                OBJ(0) = "JOB OUT"
                If DT.Rows.Count > 0 Then OBJ(J) = Format(Val(DT.Rows(0).Item("JOMTRS")), "0.00") Else OBJ(J) = 0.00
            Next
            GRIDDESIGN.Rows.Add(OBJ)


            'GET MTRS FROM JOBIN
            For J As Integer = 1 To GRIDDESIGN.Columns.Count - 1
                DT = OBJCMN.search(" ISNULL(SUM(JI_MTRS),0) AS JIMTRS", "", " JOBIN_DESC INNER JOIN DESIGNMASTER ON JI_DESIGNID = DESIGN_ID INNER JOIN COLORMASTER ON JI_COLORID = COLOR_ID ", " AND ISNULL(DESIGNMASTER.DESIGN_NO,'')='" & DESIGNNO & "' AND COLORMASTER.COLOR_NAME = '" & GRIDDESIGN.Columns(J).HeaderText & "' and JOBIN_DESC.JI_yearid = " & YearId)
                OBJ(0) = "JOB IN"
                If DT.Rows.Count > 0 Then OBJ(J) = Format(Val(DT.Rows(0).Item("JIMTRS")), "0.00") Else OBJ(J) = 0.00
            Next
            GRIDDESIGN.Rows.Add(OBJ)



            'GET MTRS FROM STOCKADJUSTMENT (SHOW ONLY IF OUTMTRS IS PRESENT AND INMTRS = 0)
            For J As Integer = 1 To GRIDDESIGN.Columns.Count - 1
                DT = OBJCMN.search(" ISNULL(SUM(SA_MTRS),0)*-1 AS SAMTRS", "", " STOCKADJUSTMENT INNER JOIN STOCKADJUSTMENT_DESC ON STOCKADJUSTMENT.SA_NO = STOCKADJUSTMENT_DESC.SA_NO AND STOCKADJUSTMENT.SA_yearid = STOCKADJUSTMENT_DESC.SA_YEARID INNER JOIN DESIGNMASTER ON SA_DESIGNID = DESIGN_ID INNER JOIN COLORMASTER ON SA_COLORID = COLOR_ID ", " AND ISNULL(DESIGNMASTER.DESIGN_NO,'')='" & DESIGNNO & "' AND COLORMASTER.COLOR_NAME = '" & GRIDDESIGN.Columns(J).HeaderText & "' AND STOCKADJUSTMENT.SA_TOTALINMTRS = 0 and STOCKADJUSTMENT.SA_yearid = " & YearId)
                OBJ(0) = "STOCK ADJUSTMENT"
                If DT.Rows.Count > 0 Then OBJ(J) = Format(Val(DT.Rows(0).Item("SAMTRS")), "0.00") Else OBJ(J) = 0.00
            Next
            GRIDDESIGN.Rows.Add(OBJ)


            'GET MTRS FROM GDN
            For J As Integer = 1 To GRIDDESIGN.Columns.Count - 1
                DT = OBJCMN.search(" ISNULL(SUM(GDN_MTRS),0)*-1 AS GDNMTRS", "", " GDN_DESC INNER JOIN DESIGNMASTER ON GDN_DESIGNID = DESIGN_ID INNER JOIN COLORMASTER ON GDN_COLORID = COLOR_ID ", " AND ISNULL(DESIGNMASTER.DESIGN_NO,'')='" & DESIGNNO & "' AND COLORMASTER.COLOR_NAME = '" & GRIDDESIGN.Columns(J).HeaderText & "' and GDN_DESC.GDN_yearid = " & YearId)
                OBJ(0) = "CHALLAN MADE"
                If DT.Rows.Count > 0 Then OBJ(J) = Format(Val(DT.Rows(0).Item("GDNMTRS")), "0.00") Else OBJ(J) = 0.00
            Next
            GRIDDESIGN.Rows.Add(OBJ)


            'GET MTRS FROM SALERETURN CHALLAN
            For J As Integer = 1 To GRIDDESIGN.Columns.Count - 1
                DT = OBJCMN.search(" ISNULL(SUM(SRCH_MTRS),0) AS SRCHMTRS", "", " SALERETURNCHALLAN_DESC  INNER JOIN DESIGNMASTER ON SRCH_DESIGNID = DESIGN_ID INNER JOIN COLORMASTER ON SRCH_COLORID = COLOR_ID ", " AND ISNULL(DESIGNMASTER.DESIGN_NO,'')='" & DESIGNNO & "' AND COLORMASTER.COLOR_NAME = '" & GRIDDESIGN.Columns(J).HeaderText & "' and SRCH_yearid = " & YearId)
                OBJ(0) = "SALE RETURN CHALLAN"
                If DT.Rows.Count > 0 Then OBJ(J) = Format(Val(DT.Rows(0).Item("SRCHMTRS")), "0.00") Else OBJ(J) = 0.00
            Next
            GRIDDESIGN.Rows.Add(OBJ)


            'GET MTRS FROM PURCHASE RETURN CHALLAN
            For J As Integer = 1 To GRIDDESIGN.Columns.Count - 1
                DT = OBJCMN.search(" ISNULL(SUM(PRCH_MTRS),0)*-1 AS PRCHMTRS", "", " PURCHASERETURNCHALLAN_DESC INNER JOIN DESIGNMASTER ON PRCH_DESIGNID = DESIGN_ID INNER JOIN COLORMASTER ON PRCH_COLORID = COLOR_ID ", " AND ISNULL(DESIGNMASTER.DESIGN_NO,'')='" & DESIGNNO & "' AND COLORMASTER.COLOR_NAME = '" & GRIDDESIGN.Columns(J).HeaderText & "' and PRCH_yearid = " & YearId)
                OBJ(0) = "PURCHASE RETURN CHALLAN"
                If DT.Rows.Count > 0 Then OBJ(J) = Format(Val(DT.Rows(0).Item("PRCHMTRS")), "0.00") Else OBJ(J) = 0.00
            Next
            GRIDDESIGN.Rows.Add(OBJ)



            'CALCULATE BALANCE
            For Each ROW As DataGridViewRow In GRIDDESIGN.Rows
                If ROW.Cells(0).Value <> "DYEING BILL RATE" And ROW.Cells(0).Value <> "PROGRAM RATE" Then
                    For J As Integer = 1 To GRIDDESIGN.Columns.Count - 1
                        OBJTOTAL(0) = "BALANCE AS PER ABOVE RECORD"
                        OBJTOTAL(J) = Format(Val(OBJTOTAL(J)) + Val(ROW.Cells(J).Value), "0.00")
                    Next
                End If
            Next
            GRIDDESIGN.Rows.Add(OBJTOTAL)
            GRIDDESIGN.Rows(GRIDDESIGN.RowCount - 1).DefaultCellStyle.BackColor = Color.Yellow


            'GET MTRS FROM BARCODESTOCK AND IN HOUSE PACKING
            For J As Integer = 1 To GRIDDESIGN.Columns.Count - 1
                TEMPCONDITION = " AND DESIGNNO = '" & DESIGNNO & "' AND COLOR = '" & GRIDDESIGN.Columns(J).HeaderText & "'"
                DTUNIT = OBJCMN.search("UNIT_ABBR", "", "DEFAULTSTOCKUNIT", "")
                If DTUNIT.Rows.Count > 0 Then TEMPCONDITION = TEMPCONDITION & " AND UNIT IN (SELECT UNIT_ABBR FROM DEFAULTSTOCKUNIT)"
                DT = OBJCMN.Execute_Any_String("SELECT * FROM (SELECT ISNULL(SUM(MTRS),0) AS TOTALMTRS FROM  BARCODESTOCK WHERE 1 = 1 " & TEMPCONDITION & " AND YEARID = " & YearId & " UNION ALL SELECT ISNULL(ROUND(ISSUEPACKING_DESC.ISS_MTRS - ISNULL(ISSUEPACKING_DESC.ISS_OUTMTRS, 0), 2),0)  AS BALMTRS FROM ITEMMASTER INNER JOIN ISSUEPACKING_DESC ON ITEMMASTER.item_id = ISSUEPACKING_DESC.ISS_ITEMID INNER JOIN ISSUEPACKING ON ISSUEPACKING_DESC.ISS_NO = ISSUEPACKING.ISS_no AND ISSUEPACKING_DESC.ISS_YEARID = ISSUEPACKING.ISS_yearid INNER JOIN GODOWNMASTER ON ISSUEPACKING.ISS_GODOWNID = GODOWNMASTER.GODOWN_id INNER JOIN COLORMASTER ON ISSUEPACKING_DESC.ISS_COLORID = COLORMASTER.COLOR_id INNER JOIN DESIGNMASTER ON ISSUEPACKING_DESC.ISS_DESIGNID = DESIGNMASTER.DESIGN_id WHERE (ROUND(ISSUEPACKING_DESC.ISS_MTRS - ISNULL(ISSUEPACKING_DESC.ISS_OUTMTRS, 0), 2) > 0) AND ISNULL(DESIGNMASTER.DESIGN_NO,'')='" & DESIGNNO & "' AND COLORMASTER.COLOR_NAME = '" & GRIDDESIGN.Columns(J).HeaderText & "' AND ISSUEPACKING.ISS_YEARID = " & YearId & ") AS T WHERE 1=1  ", "", "")
                OBJ(0) = "STOCK IN HAND"
                If DT.Rows.Count > 0 Then OBJ(J) = Format(Val(DT.Rows(0).Item("TOTALMTRS")), "0.00") Else OBJ(J) = 0.00
            Next
            GRIDDESIGN.Rows.Add(OBJ)
            GRIDDESIGN.Rows(GRIDDESIGN.RowCount - 1).DefaultCellStyle.BackColor = Color.LightGreen


            'ADD DIFF
            For J As Integer = 1 To GRIDDESIGN.Columns.Count - 1
                OBJ(0) = "DIFF"
                OBJ(J) = Format(Val(GRIDDESIGN.Rows(GRIDDESIGN.RowCount - 2).Cells(J).Value) - Val(GRIDDESIGN.Rows(GRIDDESIGN.RowCount - 1).Cells(J).Value), "0.00")
            Next
            GRIDDESIGN.Rows.Add(OBJ)
            GRIDDESIGN.Rows(GRIDDESIGN.RowCount - 1).DefaultCellStyle.BackColor = Color.LightBlue



            'GET MTRS FROM PENDING SALE ORDER
            For J As Integer = 1 To GRIDDESIGN.Columns.Count - 1
                If SALEORDERONMTRS = True Then DT = OBJCMN.SEARCH(" ISNULL(SUM(SO_MTRS-SO_RECDMTRS),0) AS SOMTRS", "", " ALLSALEORDER_DESC INNER JOIN DESIGNMASTER ON SO_DESIGNID = DESIGN_ID INNER JOIN COLORMASTER ON SO_COLORID = COLOR_ID ", " AND ISNULL(DESIGNMASTER.DESIGN_NO,'')='" & DESIGNNO & "' AND COLORMASTER.COLOR_NAME = '" & GRIDDESIGN.Columns(J).HeaderText & "' AND SO_CLOSED = 0 and SO_yearid = " & YearId) Else DT = OBJCMN.SEARCH(" ISNULL(SUM(SO_MTRS-SO_RECDMTRS),0) AS SOMTRS", "", " ALLSALEORDER_DESC INNER JOIN DESIGNMASTER ON SO_DESIGNID = DESIGN_ID INNER JOIN COLORMASTER ON SO_COLORID = COLOR_ID ", " AND ISNULL(DESIGNMASTER.DESIGN_NO,'')='" & DESIGNNO & "' AND COLORMASTER.COLOR_NAME = '" & GRIDDESIGN.Columns(J).HeaderText & "' AND SO_QTY-SO_RECDQTY > 0 AND SO_CLOSED = 0 and SO_yearid = " & YearId)
                OBJ(0) = "PENDING SALE ORDER"
                If DT.Rows.Count > 0 Then OBJ(J) = Format(Val(DT.Rows(0).Item("SOMTRS")), "0.00") Else OBJ(J) = 0.00
            Next
            GRIDDESIGN.Rows.Add(OBJ)


            'ADD BALANCE STOCK
            For J As Integer = 1 To GRIDDESIGN.Columns.Count - 1
                OBJ(0) = "BALANCE STOCK"
                OBJ(J) = Format(Val(GRIDDESIGN.Rows(GRIDDESIGN.RowCount - 3).Cells(J).Value) - Val(GRIDDESIGN.Rows(GRIDDESIGN.RowCount - 1).Cells(J).Value), "0.00")
            Next
            GRIDDESIGN.Rows.Add(OBJ)
            GRIDDESIGN.Rows(GRIDDESIGN.RowCount - 1).DefaultCellStyle.BackColor = Color.Linen


            'GET MTRS FROM PENDING SALE ORDER
            For J As Integer = 1 To GRIDDESIGN.Columns.Count - 1
                DT = OBJCMN.search(" ISNULL(SUM(PROGRAM_PCS-PROGRAM_RECDPCS),0) AS PROGMTRS ", "", " ALLPROGRAMMASTER_DESC INNER JOIN DESIGNMASTER ON PROGRAM_DESIGNID = DESIGN_ID INNER JOIN COLORMASTER ON PROGRAM_COLORID = COLOR_ID ", " AND ISNULL(DESIGNMASTER.DESIGN_NO,'')='" & DESIGNNO & "' AND COLORMASTER.COLOR_NAME = '" & GRIDDESIGN.Columns(J).HeaderText & "' AND PROGRAM_STATUS <> 'CANCEL' and PROGRAM_yearid = " & YearId)
                OBJ(0) = "PENDING DYEING PROGRAM"
                If DT.Rows.Count > 0 Then OBJ(J) = Format(Val(DT.Rows(0).Item("PROGMTRS")), "0.00") Else OBJ(J) = 0.00
            Next
            GRIDDESIGN.Rows.Add(OBJ)




            GRIDDESIGN.ClearSelection()




            'FILLSTOCKGRID
            TEMPCONDITION = " AND DESIGNNO = '" & DESIGNNO & "'"
            DTUNIT = OBJCMN.search("UNIT_ABBR", "", "DEFAULTSTOCKUNIT", "")
            If DTUNIT.Rows.Count > 0 Then TEMPCONDITION = TEMPCONDITION & " AND UNIT IN (SELECT UNIT_ABBR FROM DEFAULTSTOCKUNIT)"
            Dim DTSTOCK As DataTable = OBJCMN.Execute_Any_String("SELECT * FROM (SELECT ISNULL(SUM(PCS),0) AS PCS, ISNULL(SUM(MTRS),0) AS MTRS, PIECETYPE, UNIT FROM  BARCODESTOCK WHERE 1 = 1 " & TEMPCONDITION & " AND YEARID = " & YearId & " GROUP BY PIECETYPE, UNIT UNION ALL SELECT ISNULL(SUM(ROUND(ISSUEPACKING_DESC.ISS_PCS - ISNULL(ISSUEPACKING_DESC.ISS_OUTPCS, 0), 2)),0) AS BALPCS, ISNULL(SUM(ROUND(ISSUEPACKING_DESC.ISS_MTRS - ISNULL(ISSUEPACKING_DESC.ISS_OUTMTRS, 0), 2)),0)  AS BALMTRS, ISNULL(PIECETYPEMASTER.PIECETYPE_name, '')  AS PIECETYPE, 'ISSUETOPACK' AS UNIT FROM ITEMMASTER INNER JOIN ISSUEPACKING_DESC ON ITEMMASTER.item_id = ISSUEPACKING_DESC.ISS_ITEMID INNER JOIN ISSUEPACKING ON ISSUEPACKING_DESC.ISS_NO = ISSUEPACKING.ISS_no AND ISSUEPACKING_DESC.ISS_YEARID = ISSUEPACKING.ISS_yearid INNER JOIN GODOWNMASTER ON ISSUEPACKING.ISS_GODOWNID = GODOWNMASTER.GODOWN_id INNER JOIN COLORMASTER ON ISSUEPACKING_DESC.ISS_COLORID = COLORMASTER.COLOR_id INNER JOIN DESIGNMASTER ON ISSUEPACKING_DESC.ISS_DESIGNID = DESIGNMASTER.DESIGN_id LEFT OUTER JOIN PIECETYPEMASTER ON ISSUEPACKING_DESC.ISS_PIECETYPEID = PIECETYPEMASTER.PIECETYPE_id WHERE (ROUND(ISSUEPACKING_DESC.ISS_MTRS - ISNULL(ISSUEPACKING_DESC.ISS_OUTMTRS, 0), 2) > 0) AND ISNULL(DESIGNMASTER.DESIGN_NO,'')='" & DESIGNNO & "' AND ISSUEPACKING.ISS_YEARID = " & YearId & " GROUP BY ISNULL(PIECETYPEMASTER.PIECETYPE_name, '') ) AS T WHERE 1=1  ", "", "")
            GRIDSTOCKDETAILS.DataSource = DTSTOCK



            'FILLSALEORDER GRID
            Dim HAVINGCLAUSE As String = ""
            If SALEORDERONMTRS = True Then HAVINGCLAUSE = HAVINGCLAUSE & " HAVING ROUND(SUM(PENDINGMTRS)+SUM(OLDPENDINGMTRS),2) > 0 " Else HAVINGCLAUSE = HAVINGCLAUSE & " HAVING ROUND(SUM(PENDINGPCS)+SUM(OLDPENDINGPCS),0) > 0"
            Dim DTSO As DataTable = OBJCMN.search("NAME, ORDERNO, DUEDATE, UNIT, SUM(PENDINGPCS)+SUM(OLDPENDINGPCS) AS PCS, ROUND(SUM(PENDINGMTRS)+SUM(OLDPENDINGMTRS),2) AS MTRS ", "", " PENDINGSALEORDER ", " AND DESIGNNO = '" & DESIGNNO & "' AND YEARID = " & YearId & " GROUP BY NAME, ORDERNO, DUEDATE, UNIT " & HAVINGCLAUSE)
            GRIDORDERDETAILS.DataSource = DTSO



            'FILLCHALLAN GRID
            Dim DTCHALLAN As DataTable = OBJCMN.search("LEDGERS.ACC_CMPNAME AS NAME, SUM(GDN_DESC.GDN_MTRS) AS MTRS, GDN.GDN_NO AS CHALLANNO, GDN.GDN_DATE AS GDNDATE, GDN.GDN_INVOICEINITIALS AS INVNO", "", " GDN INNER JOIN GDN_DESC ON GDN.GDN_NO = GDN_DESC.GDN_NO AND GDN.GDN_YEARID = GDN_DESC.GDN_YEARID INNER JOIN LEDGERS ON GDN_ledgerid = LEDGERS.ACC_ID INNER JOIN DESIGNMASTER ON GDN_DESIGNID = DESIGNMASTER.DESIGN_id ", " AND DESIGNMASTER.DESIGN_NO = '" & DESIGNNO & "' AND GDN.GDN_YEARID = " & YearId & " GROUP BY LEDGERS.ACC_CMPNAME , GDN.GDN_NO , GDN.GDN_DATE , GDN.GDN_INVOICEINITIALS ORDER BY GDN.GDN_NO ")
            GRIDGDNDETAILS.DataSource = DTCHALLAN



        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub CMDREFRESH_Click(sender As Object, e As EventArgs) Handles CMDREFRESH.Click
        Try
            FILLGRID()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub DesignHistory_Load(sender As Object, e As EventArgs) Handles Me.Load
        Try
            GRIDDESIGN.Columns(0).HeaderText = "DESIGN NO - " & DESIGNNO
            FILLGRID()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub
End Class