
Imports BL
Imports System.IO
Imports System.ComponentModel
Imports DevExpress.XtraGrid.Columns

Public Class SaleOrderVsStockGridReport

    Dim USERADD, USEREDIT, USERVIEW, USERDELETE As Boolean      'USED FOR RIGHT MANAGEMAENT
    Public WHERECLAUSE As String = ""
    Public OTHERWHERECLAUSE As String = ""
    Public SOCLAUSE As String = ""
    Public BARCODECLAUSE As String = ""
    Public FRMSTRING As String = ""
    Public PATH As New ArrayList
    Public FILENAME As New ArrayList
    Public PARTYNAME As String = ""

    Private Sub cmdexit_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdexit.Click
        Me.Close()
    End Sub

    Private Sub ExcelExport_Click(sender As Object, e As EventArgs) Handles ExcelExport.Click
        Try
            Try

                Dim PATH As String = Application.StartupPath & "\Order Details.XLS"
                Dim opti As New DevExpress.XtraPrinting.XlsExportOptions
                opti.ShowGridLines = True
                opti.SheetName = "Order Details"
                GRIDBILL.ExportToXls(PATH, opti)
                EXCELCMPHEADER(PATH, "Order Details", GRIDBILL.VisibleColumns.Count + GRIDBILL.GroupCount)
            Catch ex As Exception
                Throw ex
            End Try
        Catch ex As Exception
            MsgBox("Order Details Excel File is Open, Please Close the File first then try to Export", MsgBoxStyle.Critical)
        End Try
    End Sub

    Private Sub SaleOrderVsStockGridReport_KeyDown(sender As Object, e As KeyEventArgs) Handles Me.KeyDown
        Try
            If e.KeyCode = Windows.Forms.Keys.Escape Then
                Me.Close()
            ElseIf e.KeyCode = Keys.Enter Then
                SendKeys.Send("{Tab}")
            End If
        Catch ex As Exception
            If ErrHandle(ex.Message.GetHashCode) = False Then Throw ex
        End Try
    End Sub

    Private Sub SaleOrderVsStockGridReport_Load(sender As Object, e As EventArgs) Handles Me.Load
        Try
            Dim DTROW() As DataRow
            DTROW = USERRIGHTS.Select("FormName = 'SALE ORDER'")
            USERADD = DTROW(0).Item(1)
            USEREDIT = DTROW(0).Item(2)
            USERVIEW = DTROW(0).Item(3)
            USERDELETE = DTROW(0).Item(4)

            If USEREDIT = False And USERVIEW = False Then
                MsgBox("Insufficient Rights")
                Exit Sub
            End If

            If ClientName <> "AVIS" Then
                GMILLNAME.Visible = False
            Else
                GDYEINGMTRS.Visible = False
            End If
            If ClientName <> "YASHVI" Then GCATEGORY.Visible = False

            If ALLOWBARCODEPRINT = True Then FILLGRID() Else FILLGRIDWITHOUTBARCODE()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub FILLGRIDWITHOUTBARCODE()
        Try
            Dim OBJCMN As New ClsCommon
            'Dim DT As DataTable = OBJCMN.SEARCH(" CAST(0 AS BIT) AS CHK, ITEMNAME, '' AS CATEGORY, DESIGNNO, COLOR, YEARID, 0 AS PCS, ROUND(SUM(MTRS) - SUM(ISSMTRS),2) AS MTRS, 0 AS PENDINGPCS, ROUND(ISNULL(SUM(ALLSALEORDER_DESC.SO_MTRS)-SUM(SO_RECDMTRS),0),2) AS PENDINGMTRS, 0 AS BALPCS, 0 AS BALMTRS, CMPID, 0 AS DYEINGMTRS, 0 AS PACKINGMTRS, 0 AS PROGRAMMTRS, 0 AS PENDINGPOMTRS ", "", " STOCKREGISTER LEFT OUTER JOIN ALLSALEORDER_DESC ON STOCKREGISTER.ITEMID = ALLSALEORDER_DESC.SO_ITEMID AND STOCKREGISTER.DESIGNID = ISNULL(ALLSALEORDER_DESC.SO_DESIGNID,0) AND STOCKREGISTER.COLORID = ISNULL(ALLSALEORDER_DESC.SO_COLORID,0) AND STOCKREGISTER.YEARID = ALLSALEORDER_DESC.SO_YEARID  ", " AND STOCKREGISTER.YEARID = " & YearId & " GROUP BY ITEMNAME, DESIGNNO, COLOR, CMPID, YEARID")
            Dim DT As DataTable = OBJCMN.SEARCH("CAST(0 AS BIT) AS CHK, ITEMNAME, '' AS CATEGORY, DESIGNNO, COLOR, YEARID, 0 AS PCS, ROUND(MTRS,2) AS MTRS, 0 AS PENDINGPCS, ROUND(ISNULL(SUM(ALLSALEORDER_DESC.SO_MTRS)-SUM(ALLSALEORDER_DESC.SO_RECDMTRS),0),2) AS PENDINGMTRS, 0 AS BALPCS, 0 AS BALMTRS, CMPID, 0 AS DYEINGMTRS, 0 AS PACKINGMTRS, 0 AS PROGRAMMTRS, 0 AS PENDINGPOMTRS ", "", " (SELECT ITEMNAME, DESIGNNO, COLOR, CMPID, YEARID, ITEMID, DESIGNID, COLORID, SUM(MTRS) - SUM(ISSMTRS) AS MTRS FROM STOCKREGISTER WHERE YEARID = " & YearId & " GROUP BY ITEMNAME, DESIGNNO, COLOR, CMPID, YEARID, ITEMID, DESIGNID, COLORID) AS STOCKREGISTER LEFT OUTER JOIN ALLSALEORDER_DESC ON STOCKREGISTER.ITEMID = ALLSALEORDER_DESC.SO_ITEMID AND STOCKREGISTER.DESIGNID = ISNULL(ALLSALEORDER_DESC.SO_DESIGNID,0) AND STOCKREGISTER.COLORID = ISNULL(ALLSALEORDER_DESC.SO_COLORID,0) AND STOCKREGISTER.YEARID = ALLSALEORDER_DESC.SO_YEARID AND ALLSALEORDER_DESC.SO_CLOSED = 0 ", " AND STOCKREGISTER.YEARID = " & YearId & " GROUP BY ITEMNAME, DESIGNNO, COLOR, CMPID, YEARID, MTRS")
            GRIDBILLDETAILS.DataSource = DT
            If DT.Rows.Count > 0 Then
                GRIDBILL.FocusedRowHandle = GRIDBILL.RowCount - 1
                GRIDBILL.TopRowIndex = GRIDBILL.RowCount - 15
            End If
            TOTAL()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub


    Sub FILLGRID()
        Try
            Dim OBJCMN As New ClsCommon
            Dim DT As New DataTable

            'If ClientName = "AVIS" Then
            '    'WITH THIS QUERY WE ARE NOT GETTING THOSE ITEMS WHOSE STOCK IS NOT THERE BUT ORDER IS PRESENT
            '    'Dim DT As DataTable = OBJCMN.search(" BARCODESTOCK.ITEMNAME, BARCODESTOCK.DESIGNNO, BARCODESTOCK.COLOR AS SHADE, ISNULL(T.ORDERPCS,0) AS ORDERPCS, ISNULL(T.ORDERMTRS,0) AS ORDERMTRS, ISNULL(T.RECDPCS,0) AS RECDPCS, ISNULL(T.RECDMTRS,0) AS RECDMTRS, ISNULL(T.PENDINGPCS,0) AS PENDINGPCS, ISNULL(T.PENDINGMTRS,0) AS PENDINGMTRS, SUM(BARCODESTOCK.PCS) AS PCS, SUM(BARCODESTOCK.MTRS) AS MTRS, ISNULL(SUM(BARCODESTOCK.PCS) - T.PENDINGPCS,0)  AS BALPCS, ISNULL(ROUND(SUM(BARCODESTOCK.MTRS) - T.PENDINGMTRS, 2),0) AS BALMTRS, BARCODESTOCK.YEARID ", "", " BARCODESTOCK LEFT OUTER JOIN  (SELECT ITEMNAME, DESIGNNO, SHADE, SUM(PCS) AS ORDERPCS, SUM(MTRS) AS ORDERMTRS, SUM(RECDPCS) AS RECDPCS, SUM(RECDMTRS) AS RECDMTRS, SUM(PENDINGPCS) AS PENDINGPCS,  SUM(PENDINGMTRS) AS PENDINGMTRS, YEARID FROM PENDINGSALEORDER  GROUP BY ITEMNAME, DESIGNNO, SHADE, YEARID) AS T ON BARCODESTOCK.YEARID = T.YEARID AND BARCODESTOCK.COLOR = T.SHADE AND BARCODESTOCK.DESIGNNO = T.DESIGNNO AND  BARCODESTOCK.ITEMNAME = T.ITEMNAME ", WHERECLAUSE & " AND BARCODESTOCK.YEARID = " & YearId & " GROUP BY BARCODESTOCK.ITEMNAME, BARCODESTOCK.DESIGNNO, BARCODESTOCK.COLOR, T.ORDERPCS, T.ORDERMTRS, T.RECDPCS, T.RECDMTRS, T.PENDINGPCS, T.PENDINGMTRS, BARCODESTOCK.YEARID ")
            '    'WE WANT TO ADD PROGRAM MTRS
            '    'DT = OBJCMN.SEARCH("  CAST(0 AS BIT) AS CHK,ALLITEM.ITEMNAME, ALLITEM.CATEGORY, ALLITEM.DESIGNNO, ALLITEM.MILLNAME, ALLITEM.COLOR, ISNULL(T.ORDERPCS, 0) AS ORDERPCS, ISNULL(T.ORDERMTRS, 0) AS ORDERMTRS, ISNULL(T.RECDPCS, 0)  AS RECDPCS, ISNULL(T.RECDMTRS, 0) AS RECDMTRS, ISNULL(T.PENDINGPCS, 0) AS PENDINGPCS, ISNULL(T.PENDINGMTRS, 0) AS PENDINGMTRS, ISNULL(SUM(BSTOCK.PCS),0) AS PCS,  ISNULL(SUM(BSTOCK.MTRS),0) AS MTRS, (ISNULL(SUM(BSTOCK.PCS),0) - ISNULL(T.PENDINGPCS,0)) AS BALPCS, (ROUND(ISNULL(SUM(BSTOCK.MTRS),0) - ISNULL(T.PENDINGMTRS,0), 2)) AS BALMTRS,  ALLITEM.YEARID, ALLITEM.CADNO, 0 AS PACKINGMTRS, 0 as DYEINGMTRS ", "", " (SELECT DISTINCT ITEMMASTER.item_name AS ITEMNAME, ISNULL(CATEGORYMASTER.CATEGORY_NAME,'') AS CATEGORY, ISNULL(DESIGNMASTER.DESIGN_NO, '') AS DESIGNNO, ISNULL(MILLMASTER.MILL_NAME,'') AS MILLNAME, ISNULL(COLORMASTER.COLOR_name, '') AS COLOR, ITEMMASTER.item_yearid AS YEARID, ISNULL(DESIGNMASTER.DESIGN_CADNO,'') AS CADNO FROM COLORMASTER RIGHT OUTER JOIN DESIGNMASTER_COLOR ON COLORMASTER.COLOR_id = DESIGNMASTER_COLOR.DESIGN_COLORID RIGHT OUTER JOIN ITEMMASTER LEFT OUTER JOIN DESIGNMASTER ON ITEMMASTER.item_id = DESIGNMASTER.DESIGN_ITEMID ON DESIGNMASTER_COLOR.DESIGN_ID = DESIGNMASTER.DESIGN_id LEFT OUTER JOIN MILLMASTER ON DESIGNMASTER.DESIGN_MILLID = MILLMASTER.MILL_ID LEFT OUTER JOIN CATEGORYMASTER ON ITEMMASTER.ITEM_CATEGORYID = CATEGORYMASTER.CATEGORY_ID WHERE ITEM_YEARID = " & YearId & ")  AS ALLITEM LEFT OUTER JOIN ( SELECT * FROM  BARCODESTOCK WHERE (BARCODESTOCK.YEARID = " & YearId & ")  " & WHERECLAUSE & ") AS BSTOCK ON ALLITEM.ITEMNAME = BSTOCK.ITEMNAME AND ALLITEM.DESIGNNO = BSTOCK.DESIGNNO AND ALLITEM.COLOR = BSTOCK.COLOR LEFT OUTER JOIN  (SELECT ITEMNAME, DESIGNNO, SHADE, SUM(PCS) AS ORDERPCS, SUM(MTRS) AS ORDERMTRS, SUM(RECDPCS) AS RECDPCS, SUM(RECDMTRS) AS RECDMTRS, SUM(PENDINGPCS)+SUM(OLDPENDINGPCS) AS PENDINGPCS, SUM(PENDINGMTRS)+SUM(OLDPENDINGMTRS) AS PENDINGMTRS, YEARID FROM PENDINGSALEORDER WHERE YEARID = " & YearId & SOCLAUSE & " GROUP BY ITEMNAME, DESIGNNO, SHADE, YEARID) AS T ON ALLITEM.YEARID = T.YEARID AND ALLITEM.COLOR = T.SHADE AND ALLITEM.DESIGNNO = T.DESIGNNO AND ALLITEM.ITEMNAME = T.ITEMNAME  ", " AND ALLITEM.YEARID = " & YearId & " GROUP BY ALLITEM.ITEMNAME, ALLITEM.CATEGORY, ALLITEM.DESIGNNO, ALLITEM.MILLNAME, ALLITEM.COLOR, T.ORDERPCS, T.ORDERMTRS, T.RECDPCS, T.RECDMTRS, T.PENDINGPCS, T.PENDINGMTRS, ALLITEM.YEARID, ALLITEM.CADNO")
            '    DT = OBJCMN.SEARCH("  CAST(0 AS BIT) AS CHK,ALLITEM.ITEMNAME, ALLITEM.CATEGORY, ALLITEM.DESIGNNO, ALLITEM.MILLNAME, ALLITEM.COLOR, ISNULL(T.ORDERPCS, 0) AS ORDERPCS, ISNULL(T.ORDERMTRS, 0) AS ORDERMTRS, ISNULL(T.RECDPCS, 0)  AS RECDPCS, ISNULL(T.RECDMTRS, 0) AS RECDMTRS, ISNULL(T.PENDINGPCS, 0) AS PENDINGPCS, ISNULL(T.PENDINGMTRS, 0) AS PENDINGMTRS, ISNULL(SUM(BSTOCK.PCS),0) AS PCS,  ISNULL(SUM(BSTOCK.MTRS),0) AS MTRS, (ISNULL(SUM(BSTOCK.PCS),0) - ISNULL(T.PENDINGPCS,0)) AS BALPCS, (ROUND(ISNULL(SUM(BSTOCK.MTRS),0) - ISNULL(T.PENDINGMTRS,0), 2)) AS BALMTRS,  ALLITEM.YEARID, ALLITEM.CADNO, 0 AS PACKINGMTRS, 0 as DYEINGMTRS, SUM(ISNULL(ALLPROGRAMMASTER_DESC.PRG_MTRS, 0) - ISNULL(ALLPROGRAMMASTER_DESC.PRG_OUTMTRS, 0)) AS PROGRAMMTRS ", "", " (SELECT DISTINCT ITEMMASTER.item_name AS ITEMNAME, ISNULL(CATEGORYMASTER.CATEGORY_NAME,'') AS CATEGORY, ISNULL(DESIGNMASTER.DESIGN_NO, '') AS DESIGNNO, ISNULL(MILLMASTER.MILL_NAME,'') AS MILLNAME, ISNULL(COLORMASTER.COLOR_name, '') AS COLOR, ITEMMASTER.item_yearid AS YEARID, ISNULL(DESIGNMASTER.DESIGN_CADNO,'') AS CADNO FROM COLORMASTER RIGHT OUTER JOIN DESIGNMASTER_COLOR ON COLORMASTER.COLOR_id = DESIGNMASTER_COLOR.DESIGN_COLORID RIGHT OUTER JOIN ITEMMASTER LEFT OUTER JOIN DESIGNMASTER ON ITEMMASTER.item_id = DESIGNMASTER.DESIGN_ITEMID ON DESIGNMASTER_COLOR.DESIGN_ID = DESIGNMASTER.DESIGN_id LEFT OUTER JOIN MILLMASTER ON DESIGNMASTER.DESIGN_MILLID = MILLMASTER.MILL_ID LEFT OUTER JOIN CATEGORYMASTER ON ITEMMASTER.ITEM_CATEGORYID = CATEGORYMASTER.CATEGORY_ID WHERE ITEM_YEARID = " & YearId & ")  AS ALLITEM LEFT OUTER JOIN ( SELECT * FROM  BARCODESTOCK WHERE (BARCODESTOCK.YEARID = " & YearId & ")  " & WHERECLAUSE & ") AS BSTOCK ON ALLITEM.ITEMNAME = BSTOCK.ITEMNAME AND ALLITEM.DESIGNNO = BSTOCK.DESIGNNO AND ALLITEM.COLOR = BSTOCK.COLOR LEFT OUTER JOIN  (SELECT ITEMNAME, DESIGNNO, SHADE, SUM(PCS) AS ORDERPCS, SUM(MTRS) AS ORDERMTRS, SUM(RECDPCS) AS RECDPCS, SUM(RECDMTRS) AS RECDMTRS, SUM(PENDINGPCS)+SUM(OLDPENDINGPCS) AS PENDINGPCS, SUM(PENDINGMTRS)+SUM(OLDPENDINGMTRS) AS PENDINGMTRS, YEARID FROM PENDINGSALEORDER WHERE YEARID = " & YearId & SOCLAUSE & " GROUP BY ITEMNAME, DESIGNNO, SHADE, YEARID) AS T ON ALLITEM.YEARID = T.YEARID AND ALLITEM.COLOR = T.SHADE AND ALLITEM.DESIGNNO = T.DESIGNNO AND ALLITEM.ITEMNAME = T.ITEMNAME LEFT OUTER JOIN (SELECT PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_YEARID, SUM(PROGRAM_PCS) AS PRG_MTRS, SUM(PROGRAM_RECDPCS) AS PRG_OUTMTRS FROM  ALLPROGRAMMASTER_DESC WHERE ROUND(ISNULL(PROGRAM_PCS - PROGRAM_RECDPCS,0),2) > 0 AND PROGRAM_STATUS <> 'CANCEL' AND PROGRAM_YEARID = " & YearId & " GROUP BY PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_YEARID ) AS ALLPROGRAMMASTER_DESC LEFT OUTER JOIN ITEMMASTER AS PRGITEM ON PROGRAM_ITEMID = PRGITEM.ITEM_ID LEFT OUTER JOIN DESIGNMASTER AS PRGDESIGN ON PROGRAM_DESIGNID = PRGDESIGN.DESIGN_ID ON ALLITEM.ITEMNAME = PRGITEM.ITEM_NAME AND ALLITEM.DESIGNNO = ISNULL(PRGDESIGN.DESIGN_NO,'') AND ALLITEM.YEARID = ALLPROGRAMMASTER_DESC.PROGRAM_YEARID ", " AND ALLITEM.YEARID = " & YearId & " GROUP BY ALLITEM.ITEMNAME, ALLITEM.CATEGORY, ALLITEM.DESIGNNO, ALLITEM.MILLNAME, ALLITEM.COLOR, T.ORDERPCS, T.ORDERMTRS, T.RECDPCS, T.RECDMTRS, T.PENDINGPCS, T.PENDINGMTRS, ALLITEM.YEARID, ALLITEM.CADNO")


            '    'WITH THE ABOVE CODE WE WILL GET ALL THE ITEMS | DESIGN | SHADE PRESENT IN THE MASTERS
            '    'BUT WE WANT TO REMOVE ALL THOSE DESIGNS WHICH ARE NOT PRESENT IN STOCK (WITH RESPECT TO SHADE)
            '    'MEANS IF ANY DESIGN HAVE 3 SHADES AND ALL THE 3 SHADES ARE NOT PRESENT IN STOCK, AND WE DONT HAVE ORDER FOR THESE SHADES THEN REMOVE THAT WHOLE DESIGN
            '    'FOR THIS WE WILL LOOP FOR ALL DESIGN AND SHADES AND CHECK THE ABOVE DATATABLE
            '    Dim DTDESIGN As DataTable = OBJCMN.SEARCH(" DISTINCT ALLITEM.DESIGNNO", "", " (SELECT DISTINCT ITEMMASTER.item_name AS ITEMNAME, ISNULL(CATEGORYMASTER.CATEGORY_NAME,'') AS CATEGORY, ISNULL(DESIGNMASTER.DESIGN_NO, '') AS DESIGNNO, ISNULL(MILLMASTER.MILL_NAME,'') AS MILLNAME, ISNULL(COLORMASTER.COLOR_name, '') AS COLOR, ITEMMASTER.item_yearid AS YEARID FROM COLORMASTER RIGHT OUTER JOIN DESIGNMASTER_COLOR ON COLORMASTER.COLOR_id = DESIGNMASTER_COLOR.DESIGN_COLORID RIGHT OUTER JOIN ITEMMASTER LEFT OUTER JOIN DESIGNMASTER ON ITEMMASTER.item_id = DESIGNMASTER.DESIGN_ITEMID ON DESIGNMASTER_COLOR.DESIGN_ID = DESIGNMASTER.DESIGN_id LEFT OUTER JOIN MILLMASTER ON DESIGNMASTER.DESIGN_MILLID = MILLMASTER.MILL_ID LEFT OUTER JOIN CATEGORYMASTER ON ITEMMASTER.ITEM_CATEGORYID = CATEGORYMASTER.CATEGORY_ID WHERE ITEM_YEARID = " & YearId & ")  AS ALLITEM LEFT OUTER JOIN ( SELECT * FROM  BARCODESTOCK WHERE (BARCODESTOCK.YEARID = " & YearId & ")  " & WHERECLAUSE & ") AS BSTOCK ON ALLITEM.ITEMNAME = BSTOCK.ITEMNAME AND ALLITEM.DESIGNNO = BSTOCK.DESIGNNO AND ALLITEM.COLOR = BSTOCK.COLOR LEFT OUTER JOIN  (SELECT ITEMNAME, DESIGNNO, SHADE, SUM(PCS) AS ORDERPCS, SUM(MTRS) AS ORDERMTRS, SUM(RECDPCS) AS RECDPCS, SUM(RECDMTRS) AS RECDMTRS, SUM(PENDINGPCS)+SUM(OLDPENDINGPCS) AS PENDINGPCS, SUM(PENDINGMTRS)+SUM(OLDPENDINGMTRS) AS PENDINGMTRS, YEARID FROM PENDINGSALEORDER WHERE YEARID = " & YearId & SOCLAUSE & " GROUP BY ITEMNAME, DESIGNNO, SHADE, YEARID) AS T ON ALLITEM.YEARID = T.YEARID AND ALLITEM.COLOR = T.SHADE AND ALLITEM.DESIGNNO = T.DESIGNNO AND ALLITEM.ITEMNAME = T.ITEMNAME  ", " AND ALLITEM.YEARID = " & YearId & " GROUP BY ALLITEM.DESIGNNO HAVING ISNULL(SUM(BSTOCK.MTRS),0) = 0 AND ISNULL(SUM(T.ORDERMTRS), 0) = 0 ")
            '    For Each DESIGNROW As DataRow In DTDESIGN.Rows
            '        For Each DR As DataRow In DT.Select("DESIGNNO = '" & DESIGNROW("DESIGNNO") & "'")
            '            DR.Delete()
            '        Next
            '    Next

            'Else



            Dim DTUNIT As DataTable = OBJCMN.SEARCH("UNIT_ABBR", "", "DEFAULTSTOCKUNIT", "")
                If DTUNIT.Rows.Count > 0 Then BARCODECLAUSE = BARCODECLAUSE & " AND UNIT IN (SELECT UNIT_ABBR FROM DEFAULTSTOCKUNIT)"

                If SALEORDERONMTRS = True Then SOCLAUSE = SOCLAUSE & " AND ISNULL(ALLSALEORDER_DESC.SO_MTRS - ALLSALEORDER_DESC.SO_RECDMTRS, 0) > 0 " Else SOCLAUSE = SOCLAUSE & " AND ISNULL(ALLSALEORDER_DESC.SO_QTY - ALLSALEORDER_DESC.SO_RECDQTY, 0) > 0 "

                'THIS IS DONE FOR STOCK VS ORDER REPORT
                If FRMSTRING = "ORDERVSSTOCK" Then

                    'THIS CODE IS WITHOUT SHADE LINKING WITH ORDER
                    If ClientName = "SNCM" Then
                        DT = OBJCMN.SEARCH(" CAST(0 AS BIT) AS CHK, J.ITEMNAME, J.CATEGORY, J.DESIGNNO, '' AS COLOR, J.YEARID, SUM(J.PCS) AS PCS, SUM(J.MTRS) AS MTRS, SUM(J.PENDINGPCS) AS PENDINGPCS, SUM(J.PENDINGMTRS) AS PENDINGMTRS, SUM(J.BALPCS) AS BALPCS, SUM(J.BALMTRS) AS BALMTRS, J.CMPID, J.YEARID, SUM(ISNULL(LOT_VIEW.BALMTRS, 0)) AS DYEINGMTRS, SUM(ISNULL(ISSUEPACKING_DESC.ISS_MTRS, 0) - ISNULL(ISSUEPACKING_DESC.ISS_OUTMTRS, 0)) AS PACKINGMTRS, SUM(ISNULL(ALLPROGRAMMASTER_DESC.PRG_MTRS, 0) - ISNULL(ALLPROGRAMMASTER_DESC.PRG_OUTMTRS, 0)) AS PROGRAMMTRS, SUM(ISNULL(ALLPURCHASEORDER_DESC.PO_MTRS, 0) - ISNULL(ALLPURCHASEORDER_DESC.PO_OUTMTRS, 0)) AS PENDINGPOMTRS ", "", " (SELECT T.item_name AS ITEMNAME, T.CATEGORY, T.DESIGN_NO AS DESIGNNO, '' AS COLOR, SUM(ISNULL(BARCODESTOCK.PCS, 0)) AS PCS, SUM(ISNULL(BARCODESTOCK.MTRS, 0)) AS MTRS, T.ORDERPCS AS PENDINGPCS, T.ORDERMTRS AS PENDINGMTRS, (SUM(ISNULL(BARCODESTOCK.PCS, 0)) - T.ORDERPCS) AS BALPCS, (SUM(ISNULL(BARCODESTOCK.MTRS, 0)) - T.ORDERMTRS) AS BALMTRS, T.CMPID AS CMPID, T.YEARID AS YEARID FROM (SELECT  ITEMMASTER.item_name, ISNULL(CATEGORYMASTER.CATEGORY_NAME,'') AS CATEGORY, DESIGNMASTER.DESIGN_NO, SUM(ISNULL(ALLSALEORDER_DESC.SO_QTY - ALLSALEORDER_DESC.SO_RECDQTY, 0)) AS ORDERPCS, SUM(ISNULL(ALLSALEORDER_DESC.SO_MTRS - ALLSALEORDER_DESC.SO_RECDMTRS, 0)) AS ORDERMTRS, ALLSALEORDER.SO_CMPID AS CMPID, ALLSALEORDER.SO_YEARID AS YEARID, ITEM_ID, DESIGN_ID FROM ALLSALEORDER INNER JOIN ALLSALEORDER_DESC ON ALLSALEORDER.so_no = ALLSALEORDER_DESC.SO_NO AND ALLSALEORDER.TYPE = ALLSALEORDER_DESC.TYPE AND ALLSALEORDER.SO_YEARID = ALLSALEORDER_DESC.SO_YEARID INNER JOIN LEDGERS ON ALLSALEORDER.so_ledgerid = LEDGERS.Acc_id INNER JOIN ITEMMASTER ON ALLSALEORDER_DESC.SO_ITEMID = ITEMMASTER.item_id  LEFT OUTER JOIN CATEGORYMASTER ON ITEMMASTER.ITEM_CATEGORYID = CATEGORYMASTER.CATEGORY_ID LEFT OUTER JOIN DESIGNMASTER ON ALLSALEORDER_DESC.SO_DESIGNID = DESIGNMASTER.DESIGN_id WHERE ALLSALEORDER_DESC.SO_CLOSED = 'FALSE' " & SOCLAUSE & " AND ALLSALEORDER.SO_YEARID = " & YearId & " GROUP BY ITEMMASTER.item_name, ISNULL(CATEGORYMASTER.CATEGORY_NAME,''), DESIGNMASTER.DESIGN_NO, ALLSALEORDER.SO_CMPID, ALLSALEORDER.SO_YEARID, ITEM_ID, DESIGN_ID) AS T LEFT OUTER JOIN BARCODESTOCK ON T.ITEM_ID = BARCODESTOCK.ITEMID AND T.DESIGN_ID = BARCODESTOCK.DESIGNID AND T.YEARID = BARCODESTOCK.YEARID " & BARCODECLAUSE & "  GROUP BY T.item_name, T.CATEGORY, T.DESIGN_NO, T.CMPID, T.YEARID, T.ORDERPCS, T.ORDERMTRS ) AS J LEFT OUTER JOIN (SELECT ITEMNAME, DESIGN, YEARID, SUM(BALMTRS) AS BALMTRS FROM LOT_VIEW WHERE YEARID = " & YearId & " GROUP BY ITEMNAME, DESIGN, YEARID) AS LOT_VIEW ON J.ITEMNAME = LOT_VIEW.ITEMNAME AND J.DESIGNNO = LOT_VIEW.DESIGN AND J.YEARID = LOT_VIEW.YEARID LEFT OUTER JOIN (SELECT ISS_ITEMID, ISS_DESIGNID, ISS_YEARID, SUM(ISS_MTRS) AS ISS_MTRS, SUM(ISS_OUTMTRS) AS ISS_OUTMTRS FROM  ISSUEPACKING_DESC WHERE ROUND(ISNULL(ISS_MTRS - ISS_OUTMTRS,0),2) > 0 AND ISS_YEARID = " & YearId & " GROUP BY ISS_ITEMID, ISS_DESIGNID, ISS_YEARID) AS ISSUEPACKING_DESC LEFT OUTER JOIN ITEMMASTER ON ISS_ITEMID = ITEM_ID LEFT OUTER JOIN DESIGNMASTER ON ISS_DESIGNID = DESIGN_ID ON J.ITEMNAME = ITEM_NAME AND J.DESIGNNO = ISNULL(DESIGN_NO,'') AND J.YEARID = ISSUEPACKING_DESC.ISS_YEARID LEFT OUTER JOIN (SELECT PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_YEARID, SUM(PROGRAM_PCS) AS PRG_MTRS, SUM(PROGRAM_RECDPCS) AS PRG_OUTMTRS FROM  ALLPROGRAMMASTER_DESC WHERE ROUND(ISNULL(PROGRAM_PCS - PROGRAM_RECDPCS,0),2) > 0 AND PROGRAM_STATUS <> 'CANCEL' AND PROGRAM_YEARID = " & YearId & " GROUP BY PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_YEARID ) AS ALLPROGRAMMASTER_DESC LEFT OUTER JOIN ITEMMASTER AS PRGITEM ON PROGRAM_ITEMID = PRGITEM.ITEM_ID LEFT OUTER JOIN DESIGNMASTER AS PRGDESIGN ON PROGRAM_DESIGNID = PRGDESIGN.DESIGN_ID ON J.ITEMNAME = PRGITEM.ITEM_NAME AND J.DESIGNNO = ISNULL(PRGDESIGN.DESIGN_NO,'') AND J.YEARID = ALLPROGRAMMASTER_DESC.PROGRAM_YEARID  LEFT OUTER JOIN (SELECT PO_ITEMID, PO_DESIGNID, PO_YEARID, SUM(PO_MTRS) AS PO_MTRS, SUM(PO_RECDMTRS) AS PO_OUTMTRS FROM ALLPURCHASEORDER_DESC WHERE ROUND(ISNULL(PO_MTRS - PO_RECDMTRS,0),2) > 0 AND PO_CLOSED = 0 AND PO_YEARID = " & YearId & " GROUP BY PO_ITEMID, PO_DESIGNID, PO_YEARID) AS ALLPURCHASEORDER_DESC LEFT OUTER JOIN ITEMMASTER AS POITEM ON PO_ITEMID = POITEM.ITEM_ID LEFT OUTER JOIN DESIGNMASTER AS PODESIGN ON PO_DESIGNID = PODESIGN.DESIGN_ID ON J.ITEMNAME = POITEM.ITEM_NAME AND J.DESIGNNO = ISNULL(PODESIGN.DESIGN_NO,'') AND J.YEARID = ALLPURCHASEORDER_DESC.PO_YEARID ", OTHERWHERECLAUSE & " GROUP BY J.ITEMNAME, J.CATEGORY, J.DESIGNNO, J.YEARID, J.CMPID")
                    Else
                        DT = OBJCMN.SEARCH(" CAST(0 AS BIT) AS CHK, J.ITEMNAME, J.CATEGORY, J.DESIGNNO, J.COLOR, J.YEARID, SUM(J.PCS) AS PCS, SUM(J.MTRS) AS MTRS, SUM(J.PENDINGPCS) AS PENDINGPCS, SUM(J.PENDINGMTRS) AS PENDINGMTRS, SUM(J.BALPCS) AS BALPCS, SUM(J.BALMTRS) AS BALMTRS, J.CMPID, J.YEARID, SUM(ISNULL(LOT_VIEW.BALMTRS, 0)) AS DYEINGMTRS, SUM(ISNULL(ISSUEPACKING_DESC.ISS_MTRS, 0) - ISNULL(ISSUEPACKING_DESC.ISS_OUTMTRS, 0)) AS PACKINGMTRS, SUM(ISNULL(ALLPROGRAMMASTER_DESC.PRG_MTRS, 0) - ISNULL(ALLPROGRAMMASTER_DESC.PRG_OUTMTRS, 0)) AS PROGRAMMTRS, SUM(ISNULL(ALLPURCHASEORDER_DESC.PO_MTRS, 0) - ISNULL(ALLPURCHASEORDER_DESC.PO_OUTMTRS, 0)) AS PENDINGPOMTRS ", "", " (SELECT T.item_name AS ITEMNAME, T.CATEGORY, T.DESIGN_NO AS DESIGNNO, T.COLOR_name AS COLOR, SUM(ISNULL(BARCODESTOCK.PCS, 0)) AS PCS, SUM(ISNULL(BARCODESTOCK.MTRS, 0)) AS MTRS, T.ORDERPCS AS PENDINGPCS, T.ORDERMTRS AS PENDINGMTRS, (SUM(ISNULL(BARCODESTOCK.PCS, 0)) - T.ORDERPCS) AS BALPCS, (SUM(ISNULL(BARCODESTOCK.MTRS, 0)) - T.ORDERMTRS) AS BALMTRS, T.CMPID AS CMPID, T.YEARID AS YEARID FROM (SELECT  ITEMMASTER.item_name, ISNULL(CATEGORYMASTER.CATEGORY_NAME,'') AS CATEGORY, DESIGNMASTER.DESIGN_NO, COLORMASTER.COLOR_name, SUM(ISNULL(ALLSALEORDER_DESC.SO_QTY - ALLSALEORDER_DESC.SO_RECDQTY, 0)) AS ORDERPCS, SUM(ISNULL(ALLSALEORDER_DESC.SO_MTRS - ALLSALEORDER_DESC.SO_RECDMTRS, 0)) AS ORDERMTRS, ALLSALEORDER.SO_CMPID AS CMPID, ALLSALEORDER.SO_YEARID AS YEARID, ITEM_ID, DESIGN_ID, COLOR_ID FROM ALLSALEORDER INNER JOIN ALLSALEORDER_DESC ON ALLSALEORDER.so_no = ALLSALEORDER_DESC.SO_NO AND ALLSALEORDER.TYPE = ALLSALEORDER_DESC.TYPE AND ALLSALEORDER.SO_YEARID = ALLSALEORDER_DESC.SO_YEARID INNER JOIN LEDGERS ON ALLSALEORDER.so_ledgerid = LEDGERS.Acc_id INNER JOIN ITEMMASTER ON ALLSALEORDER_DESC.SO_ITEMID = ITEMMASTER.item_id  LEFT OUTER JOIN CATEGORYMASTER ON ITEMMASTER.ITEM_CATEGORYID = CATEGORYMASTER.CATEGORY_ID LEFT OUTER JOIN COLORMASTER ON ALLSALEORDER_DESC.SO_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON ALLSALEORDER_DESC.SO_DESIGNID = DESIGNMASTER.DESIGN_id WHERE ALLSALEORDER_DESC.SO_CLOSED = 'FALSE' " & SOCLAUSE & " AND ALLSALEORDER.SO_YEARID = " & YearId & " GROUP BY ITEMMASTER.item_name, ISNULL(CATEGORYMASTER.CATEGORY_NAME,''), DESIGNMASTER.DESIGN_NO, COLORMASTER.COLOR_name, ALLSALEORDER.SO_CMPID, ALLSALEORDER.SO_YEARID, ITEM_ID, DESIGN_ID, COLOR_ID ) AS T LEFT OUTER JOIN BARCODESTOCK ON T.ITEM_ID = BARCODESTOCK.ITEMID AND T.DESIGN_ID = BARCODESTOCK.DESIGNID AND  T.COLOR_ID = BARCODESTOCK.COLORID AND T.YEARID = BARCODESTOCK.YEARID " & BARCODECLAUSE & "  GROUP BY T.item_name, T.CATEGORY, T.DESIGN_NO, T.COLOR_name,T.CMPID, T.YEARID, T.ORDERPCS, T.ORDERMTRS ) AS J LEFT OUTER JOIN (SELECT ITEMNAME, DESIGN, SHADE, YEARID, SUM(BALMTRS) AS BALMTRS FROM LOT_VIEW WHERE YEARID = " & YearId & " GROUP BY ITEMNAME, DESIGN, SHADE, YEARID) AS LOT_VIEW ON J.ITEMNAME = LOT_VIEW.ITEMNAME AND J.DESIGNNO = LOT_VIEW.DESIGN AND J.COLOR = LOT_VIEW.SHADE AND J.YEARID = LOT_VIEW.YEARID LEFT OUTER JOIN (SELECT ISS_ITEMID, ISS_DESIGNID, ISS_COLORID, ISS_YEARID, SUM(ISS_MTRS) AS ISS_MTRS, SUM(ISS_OUTMTRS) AS ISS_OUTMTRS FROM  ISSUEPACKING_DESC WHERE ROUND(ISNULL(ISS_MTRS - ISS_OUTMTRS,0),2) > 0 AND ISS_YEARID = " & YearId & " GROUP BY ISS_ITEMID, ISS_DESIGNID, ISS_COLORID, ISS_YEARID) AS ISSUEPACKING_DESC LEFT OUTER JOIN ITEMMASTER ON ISS_ITEMID = ITEM_ID LEFT OUTER JOIN DESIGNMASTER ON ISS_DESIGNID = DESIGN_ID LEFT OUTER JOIN COLORMASTER ON ISS_COLORID = COLOR_ID  ON J.ITEMNAME = ITEM_NAME AND J.DESIGNNO = ISNULL(DESIGN_NO,'') AND J.COLOR = ISNULL(COLOR_NAME,'') AND J.YEARID = ISSUEPACKING_DESC.ISS_YEARID LEFT OUTER JOIN (SELECT PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_COLORID, PROGRAM_YEARID, SUM(PROGRAM_PCS) AS PRG_MTRS, SUM(PROGRAM_RECDPCS) AS PRG_OUTMTRS FROM  ALLPROGRAMMASTER_DESC WHERE ROUND(ISNULL(PROGRAM_PCS - PROGRAM_RECDPCS,0),2) > 0 AND PROGRAM_STATUS <> 'CANCEL' AND PROGRAM_YEARID = " & YearId & " GROUP BY PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_COLORID, PROGRAM_YEARID ) AS ALLPROGRAMMASTER_DESC LEFT OUTER JOIN ITEMMASTER AS PRGITEM ON PROGRAM_ITEMID = PRGITEM.ITEM_ID LEFT OUTER JOIN DESIGNMASTER AS PRGDESIGN ON PROGRAM_DESIGNID = PRGDESIGN.DESIGN_ID LEFT OUTER JOIN COLORMASTER AS PRGCOLOR ON PROGRAM_COLORID = PRGCOLOR.COLOR_ID  ON J.ITEMNAME = PRGITEM.ITEM_NAME AND J.DESIGNNO = ISNULL(PRGDESIGN.DESIGN_NO,'') AND J.COLOR = ISNULL(PRGCOLOR.COLOR_NAME,'') AND J.YEARID = ALLPROGRAMMASTER_DESC.PROGRAM_YEARID  LEFT OUTER JOIN (SELECT PO_ITEMID, PO_DESIGNID, PO_COLORID, PO_YEARID, SUM(PO_MTRS) AS PO_MTRS, SUM(PO_RECDMTRS) AS PO_OUTMTRS FROM ALLPURCHASEORDER_DESC WHERE ROUND(ISNULL(PO_MTRS - PO_RECDMTRS,0),2) > 0 AND PO_CLOSED = 0 AND PO_YEARID = " & YearId & " GROUP BY PO_ITEMID, PO_DESIGNID, PO_COLORID, PO_YEARID) AS ALLPURCHASEORDER_DESC LEFT OUTER JOIN ITEMMASTER AS POITEM ON PO_ITEMID = POITEM.ITEM_ID LEFT OUTER JOIN DESIGNMASTER AS PODESIGN ON PO_DESIGNID = PODESIGN.DESIGN_ID LEFT OUTER JOIN COLORMASTER AS POCOLOR ON PO_COLORID = POCOLOR.COLOR_ID  ON J.ITEMNAME = POITEM.ITEM_NAME AND J.DESIGNNO = ISNULL(PODESIGN.DESIGN_NO,'') AND J.COLOR = ISNULL(POCOLOR.COLOR_NAME,'') AND J.YEARID = ALLPURCHASEORDER_DESC.PO_YEARID ", OTHERWHERECLAUSE & " GROUP BY J.ITEMNAME, J.CATEGORY, J.DESIGNNO, J.COLOR, J.YEARID, J.CMPID")
                    End If
                Else

                    'THIS CODE IS WITHOUT SHADE LINKING WITH ORDER
                    If ClientName = "SNCM" Then
                        DT = OBJCMN.SEARCH(" CAST(0 AS BIT) AS CHK, J.ITEMNAME, J.CATEGORY, J.DESIGNNO, '' AS COLOR, J.YEARID, SUM(J.PCS) AS PCS, SUM(J.MTRS) AS MTRS, SUM(J.PENDINGPCS) AS PENDINGPCS, SUM(J.PENDINGMTRS) AS PENDINGMTRS, SUM(J.BALPCS) AS BALPCS, SUM(J.BALMTRS) AS BALMTRS, J.CMPID, J.YEARID, SUM(ISNULL(LOT_VIEW.BALMTRS, 0)) AS DYEINGMTRS, SUM(ISNULL(ISSUEPACKING_DESC.ISS_MTRS, 0) - ISNULL(ISSUEPACKING_DESC.ISS_OUTMTRS, 0)) AS PACKINGMTRS, SUM(ISNULL(ALLPROGRAMMASTER_DESC.PRG_MTRS, 0) - ISNULL(ALLPROGRAMMASTER_DESC.PRG_OUTMTRS, 0)) AS PROGRAMMTRS, SUM(ISNULL(ALLPURCHASEORDER_DESC.PO_MTRS, 0) - ISNULL(ALLPURCHASEORDER_DESC.PO_OUTMTRS, 0)) AS PENDINGPOMTRS ", "", " (SELECT COALESCE(T.ITEMNAME, ASORDER.ITEMNAME) AS ITEMNAME, COALESCE(T.CATEGORY, ASORDER.CATEGORY) AS CATEGORY, COALESCE(T.DESIGNNO,ASORDER.DESIGNNO) AS DESIGNNO, '' AS COLOR, ISNULL(T.PCS,0) AS PCS, ISNULL(T.MTRS,0) AS MTRS, ISNULL(ASORDER.ORDERPCS,0) AS PENDINGPCS, ISNULL(ASORDER.ORDERMTRS,0) AS PENDINGMTRS, (ISNULL(T.PCS,0) - ISNULL(ASORDER.ORDERPCS,0)) AS BALPCS, (ISNULL(T.MTRS,0) - ISNULL(ASORDER.ORDERMTRS,0)) AS BALMTRS, COALESCE(T.CMPID, ASORDER.CMPID) AS CMPID, COALESCE(T.YEARID,ASORDER.YEARID) AS YEARID FROM (SELECT ITEMNAME, CATEGORY, DESIGNNO, SUM(PCS) AS PCS, SUM(MTRS) AS MTRS, CMPID, YEARID, ITEMID, DESIGNID FROM BARCODESTOCK WHERE BARCODESTOCK.YEARID = " & YearId & BARCODECLAUSE & " GROUP BY ITEMNAME, CATEGORY, DESIGNNO, CMPID, YEARID, ITEMID, DESIGNID) AS T FULL OUTER JOIN (SELECT  ISNULL(ITEMMASTER.item_name,'') AS ITEMNAME, ISNULL(CATEGORYMASTER.CATEGORY_NAME,'') AS CATEGORY, ISNULL(DESIGNMASTER.DESIGN_NO,'') AS DESIGNNO, '' AS COLOR, ISNULL(SUM(ALLSALEORDER_DESC.SO_QTY - ALLSALEORDER_DESC.SO_RECDQTY),0) AS ORDERPCS, ISNULL(SUM(ALLSALEORDER_DESC.SO_MTRS - ALLSALEORDER_DESC.SO_RECDMTRS), 0) AS ORDERMTRS, ALLSALEORDER.SO_CMPID AS CMPID, ALLSALEORDER.SO_YEARID AS YEARID, ITEM_ID, DESIGN_ID FROM ALLSALEORDER INNER JOIN ALLSALEORDER_DESC ON ALLSALEORDER.so_no = ALLSALEORDER_DESC.SO_NO AND ALLSALEORDER.TYPE = ALLSALEORDER_DESC.TYPE AND ALLSALEORDER.SO_YEARID = ALLSALEORDER_DESC.SO_YEARID INNER JOIN LEDGERS ON ALLSALEORDER.so_ledgerid = LEDGERS.Acc_id INNER JOIN ITEMMASTER ON ALLSALEORDER_DESC.SO_ITEMID = ITEMMASTER.item_id LEFT OUTER JOIN CATEGORYMASTER ON ITEMMASTER.ITEM_CATEGORYID = CATEGORYMASTER.CATEGORY_ID LEFT OUTER JOIN DESIGNMASTER ON ALLSALEORDER_DESC.SO_DESIGNID = DESIGNMASTER.DESIGN_id WHERE ALLSALEORDER_DESC.SO_CLOSED = 'FALSE' " & SOCLAUSE & " AND ALLSALEORDER.SO_YEARID = " & YearId & " GROUP BY ITEMMASTER.item_name, ISNULL(CATEGORYMASTER.CATEGORY_NAME,''), DESIGNMASTER.DESIGN_NO, ALLSALEORDER.SO_CMPID, ALLSALEORDER.SO_YEARID, ITEM_ID, DESIGN_ID) AS ASORDER ON T.ITEMID = ASORDER.item_id AND T.DESIGNID = ASORDER.DESIGN_ID  AND T.YEARID = ASORDER.YEARID ) AS J LEFT OUTER JOIN (SELECT ITEMNAME, DESIGN, YEARID, SUM(BALMTRS) AS BALMTRS FROM LOT_VIEW WHERE YEARID = " & YearId & " GROUP BY ITEMNAME, DESIGN, YEARID) AS LOT_VIEW ON J.ITEMNAME = LOT_VIEW.ITEMNAME AND J.DESIGNNO = LOT_VIEW.DESIGN AND J.YEARID = LOT_VIEW.YEARID  LEFT OUTER JOIN (SELECT ISS_ITEMID, ISS_DESIGNID,  ISS_YEARID, SUM(ISS_MTRS) AS ISS_MTRS, SUM(ISS_OUTMTRS) AS ISS_OUTMTRS FROM  ISSUEPACKING_DESC WHERE ROUND(ISNULL(ISS_MTRS - ISS_OUTMTRS,0),2) > 0 AND ISS_YEARID = " & YearId & " GROUP BY ISS_ITEMID, ISS_DESIGNID, ISS_YEARID) AS ISSUEPACKING_DESC LEFT OUTER JOIN ITEMMASTER ON ISS_ITEMID = ITEM_ID LEFT OUTER JOIN DESIGNMASTER ON ISS_DESIGNID = DESIGN_ID ON J.ITEMNAME = ITEM_NAME AND J.DESIGNNO = ISNULL(DESIGN_NO,'') AND J.YEARID = ISSUEPACKING_DESC.ISS_YEARID LEFT OUTER JOIN (SELECT PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_YEARID, SUM(PROGRAM_PCS) AS PRG_MTRS, SUM(PROGRAM_RECDPCS) AS PRG_OUTMTRS FROM ALLPROGRAMMASTER_DESC WHERE ROUND(ISNULL(PROGRAM_PCS - PROGRAM_RECDPCS,0),2) > 0 AND PROGRAM_STATUS <> 'CANCEL' AND PROGRAM_YEARID = " & YearId & " GROUP BY PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_YEARID) AS ALLPROGRAMMASTER_DESC LEFT OUTER JOIN ITEMMASTER AS PRGITEM ON PROGRAM_ITEMID = PRGITEM.ITEM_ID LEFT OUTER JOIN DESIGNMASTER AS PRGDESIGN ON PROGRAM_DESIGNID = PRGDESIGN.DESIGN_ID ON J.ITEMNAME = PRGITEM.ITEM_NAME AND J.DESIGNNO = ISNULL(PRGDESIGN.DESIGN_NO,'') AND J.YEARID = ALLPROGRAMMASTER_DESC.PROGRAM_YEARID LEFT OUTER JOIN (SELECT PO_ITEMID, PO_DESIGNID, PO_YEARID, SUM(PO_MTRS) AS PO_MTRS, SUM(PO_RECDMTRS) AS PO_OUTMTRS FROM ALLPURCHASEORDER_DESC WHERE ROUND(ISNULL(PO_MTRS - PO_RECDMTRS,0),2) > 0 AND PO_CLOSED = 0 AND PO_YEARID = " & YearId & " GROUP BY PO_ITEMID, PO_DESIGNID, PO_YEARID) AS ALLPURCHASEORDER_DESC LEFT OUTER JOIN ITEMMASTER AS POITEM ON PO_ITEMID = POITEM.ITEM_ID LEFT OUTER JOIN DESIGNMASTER AS PODESIGN ON PO_DESIGNID = PODESIGN.DESIGN_ID ON J.ITEMNAME = POITEM.ITEM_NAME AND J.DESIGNNO = ISNULL(PODESIGN.DESIGN_NO,'') AND J.YEARID = ALLPURCHASEORDER_DESC.PO_YEARID ", OTHERWHERECLAUSE & " GROUP BY J.ITEMNAME, J.CATEGORY, J.DESIGNNO, J.YEARID, J.CMPID")
                    Else
                        DT = OBJCMN.SEARCH(" CAST(0 AS BIT) AS CHK, J.ITEMNAME, J.CATEGORY, J.DESIGNNO, J.COLOR, J.YEARID, SUM(J.PCS) AS PCS, SUM(J.MTRS) AS MTRS, SUM(J.PENDINGPCS) AS PENDINGPCS, SUM(J.PENDINGMTRS) AS PENDINGMTRS, SUM(J.BALPCS) AS BALPCS, SUM(J.BALMTRS) AS BALMTRS, J.CMPID, J.YEARID, SUM(ISNULL(LOT_VIEW.BALMTRS, 0)) AS DYEINGMTRS, SUM(ISNULL(ISSUEPACKING_DESC.ISS_MTRS, 0) - ISNULL(ISSUEPACKING_DESC.ISS_OUTMTRS, 0)) AS PACKINGMTRS, SUM(ISNULL(ALLPROGRAMMASTER_DESC.PRG_MTRS, 0) - ISNULL(ALLPROGRAMMASTER_DESC.PRG_OUTMTRS, 0)) AS PROGRAMMTRS, SUM(ISNULL(ALLPURCHASEORDER_DESC.PO_MTRS, 0) - ISNULL(ALLPURCHASEORDER_DESC.PO_OUTMTRS, 0)) AS PENDINGPOMTRS ", "", " (SELECT COALESCE(T.ITEMNAME, ASORDER.ITEMNAME) AS ITEMNAME, COALESCE(T.CATEGORY, ASORDER.CATEGORY) AS CATEGORY, COALESCE(T.DESIGNNO,ASORDER.DESIGNNO) AS DESIGNNO, ISNULL(T.COLOR, ASORDER.COLOR) AS COLOR, ISNULL(T.PCS,0) AS PCS, ISNULL(T.MTRS,0) AS MTRS, ISNULL(ASORDER.ORDERPCS,0) AS PENDINGPCS, ISNULL(ASORDER.ORDERMTRS,0) AS PENDINGMTRS, (ISNULL(T.PCS,0) - ISNULL(ASORDER.ORDERPCS,0)) AS BALPCS, (ISNULL(T.MTRS,0) - ISNULL(ASORDER.ORDERMTRS,0)) AS BALMTRS, COALESCE(T.CMPID, ASORDER.CMPID) AS CMPID, COALESCE(T.YEARID,ASORDER.YEARID) AS YEARID FROM (SELECT ITEMNAME, CATEGORY, DESIGNNO, COLOR, SUM(PCS) AS PCS, SUM(MTRS) AS MTRS, CMPID, YEARID, ITEMID, DESIGNID, COLORID FROM BARCODESTOCK WHERE BARCODESTOCK.YEARID = " & YearId & BARCODECLAUSE & " GROUP BY ITEMNAME, CATEGORY, DESIGNNO, COLOR, CMPID, YEARID, ITEMID, DESIGNID, COLORID) AS T FULL OUTER JOIN (SELECT  ISNULL(ITEMMASTER.item_name,'') AS ITEMNAME, ISNULL(CATEGORYMASTER.CATEGORY_NAME,'') AS CATEGORY, ISNULL(DESIGNMASTER.DESIGN_NO,'') AS DESIGNNO, ISNULL(COLORMASTER.COLOR_name,'') AS COLOR, ISNULL(SUM(ALLSALEORDER_DESC.SO_QTY - ALLSALEORDER_DESC.SO_RECDQTY),0) AS ORDERPCS, ISNULL(SUM(ALLSALEORDER_DESC.SO_MTRS - ALLSALEORDER_DESC.SO_RECDMTRS), 0) AS ORDERMTRS, ALLSALEORDER.SO_CMPID AS CMPID, ALLSALEORDER.SO_YEARID AS YEARID, ITEM_ID, DESIGN_ID, COLOR_ID FROM ALLSALEORDER INNER JOIN ALLSALEORDER_DESC ON ALLSALEORDER.so_no = ALLSALEORDER_DESC.SO_NO AND ALLSALEORDER.TYPE = ALLSALEORDER_DESC.TYPE AND ALLSALEORDER.SO_YEARID = ALLSALEORDER_DESC.SO_YEARID INNER JOIN LEDGERS ON ALLSALEORDER.so_ledgerid = LEDGERS.Acc_id INNER JOIN ITEMMASTER ON ALLSALEORDER_DESC.SO_ITEMID = ITEMMASTER.item_id LEFT OUTER JOIN CATEGORYMASTER ON ITEMMASTER.ITEM_CATEGORYID = CATEGORYMASTER.CATEGORY_ID LEFT OUTER JOIN COLORMASTER ON ALLSALEORDER_DESC.SO_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON ALLSALEORDER_DESC.SO_DESIGNID = DESIGNMASTER.DESIGN_id WHERE ALLSALEORDER_DESC.SO_CLOSED = 'FALSE' " & SOCLAUSE & " AND ALLSALEORDER.SO_YEARID = " & YearId & " GROUP BY ITEMMASTER.item_name, ISNULL(CATEGORYMASTER.CATEGORY_NAME,''), DESIGNMASTER.DESIGN_NO, COLORMASTER.COLOR_name, ALLSALEORDER.SO_CMPID, ALLSALEORDER.SO_YEARID, ITEM_ID, DESIGN_ID, COLOR_ID ) AS ASORDER ON T.ITEMID = ASORDER.item_id AND T.DESIGNID = ASORDER.DESIGN_ID  AND  T.COLORID = ASORDER.COLOR_ID AND T.YEARID = ASORDER.YEARID ) AS J LEFT OUTER JOIN (SELECT ITEMNAME, DESIGN, SHADE, YEARID, SUM(BALMTRS) AS BALMTRS FROM LOT_VIEW WHERE YEARID = " & YearId & " GROUP BY ITEMNAME, DESIGN, SHADE, YEARID) AS LOT_VIEW ON J.ITEMNAME = LOT_VIEW.ITEMNAME AND J.DESIGNNO = LOT_VIEW.DESIGN AND J.COLOR = LOT_VIEW.SHADE AND J.YEARID = LOT_VIEW.YEARID  LEFT OUTER JOIN (SELECT ISS_ITEMID, ISS_DESIGNID, ISS_COLORID, ISS_YEARID, SUM(ISS_MTRS) AS ISS_MTRS, SUM(ISS_OUTMTRS) AS ISS_OUTMTRS FROM  ISSUEPACKING_DESC WHERE ROUND(ISNULL(ISS_MTRS - ISS_OUTMTRS,0),2) > 0 AND ISS_YEARID = " & YearId & " GROUP BY ISS_ITEMID, ISS_DESIGNID, ISS_COLORID, ISS_YEARID) AS ISSUEPACKING_DESC LEFT OUTER JOIN ITEMMASTER ON ISS_ITEMID = ITEM_ID LEFT OUTER JOIN DESIGNMASTER ON ISS_DESIGNID = DESIGN_ID LEFT OUTER JOIN COLORMASTER ON ISS_COLORID = COLOR_ID  ON J.ITEMNAME = ITEM_NAME AND J.DESIGNNO = ISNULL(DESIGN_NO,'') AND J.COLOR = ISNULL(COLOR_NAME,'') AND J.YEARID = ISSUEPACKING_DESC.ISS_YEARID LEFT OUTER JOIN (SELECT PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_COLORID, PROGRAM_YEARID, SUM(PROGRAM_PCS) AS PRG_MTRS, SUM(PROGRAM_RECDPCS) AS PRG_OUTMTRS FROM ALLPROGRAMMASTER_DESC WHERE ROUND(ISNULL(PROGRAM_PCS - PROGRAM_RECDPCS,0),2) > 0 AND PROGRAM_STATUS <> 'CANCEL' AND PROGRAM_YEARID = " & YearId & " GROUP BY PROGRAM_ITEMID, PROGRAM_DESIGNID, PROGRAM_COLORID, PROGRAM_YEARID) AS ALLPROGRAMMASTER_DESC LEFT OUTER JOIN ITEMMASTER AS PRGITEM ON PROGRAM_ITEMID = PRGITEM.ITEM_ID LEFT OUTER JOIN DESIGNMASTER AS PRGDESIGN ON PROGRAM_DESIGNID = PRGDESIGN.DESIGN_ID LEFT OUTER JOIN COLORMASTER AS PRGCOLOR ON PROGRAM_COLORID = PRGCOLOR.COLOR_ID  ON J.ITEMNAME = PRGITEM.ITEM_NAME AND J.DESIGNNO = ISNULL(PRGDESIGN.DESIGN_NO,'') AND J.COLOR = ISNULL(PRGCOLOR.COLOR_NAME,'') AND J.YEARID = ALLPROGRAMMASTER_DESC.PROGRAM_YEARID LEFT OUTER JOIN (SELECT PO_ITEMID, PO_DESIGNID, PO_COLORID, PO_YEARID, SUM(PO_MTRS) AS PO_MTRS, SUM(PO_RECDMTRS) AS PO_OUTMTRS FROM ALLPURCHASEORDER_DESC WHERE ROUND(ISNULL(PO_MTRS - PO_RECDMTRS,0),2) > 0 AND PO_CLOSED = 0 AND PO_YEARID = " & YearId & " GROUP BY PO_ITEMID, PO_DESIGNID, PO_COLORID, PO_YEARID) AS ALLPURCHASEORDER_DESC LEFT OUTER JOIN ITEMMASTER AS POITEM ON PO_ITEMID = POITEM.ITEM_ID LEFT OUTER JOIN DESIGNMASTER AS PODESIGN ON PO_DESIGNID = PODESIGN.DESIGN_ID LEFT OUTER JOIN COLORMASTER AS POCOLOR ON PO_COLORID = POCOLOR.COLOR_ID  ON J.ITEMNAME = POITEM.ITEM_NAME AND J.DESIGNNO = ISNULL(PODESIGN.DESIGN_NO,'') AND J.COLOR = ISNULL(POCOLOR.COLOR_NAME,'') AND J.YEARID = ALLPURCHASEORDER_DESC.PO_YEARID ", OTHERWHERECLAUSE & " GROUP BY J.ITEMNAME, J.CATEGORY, J.DESIGNNO, J.COLOR, J.YEARID, J.CMPID")
                    End If
                End If
            'End If


            GRIDBILLDETAILS.DataSource = DT
            If DT.Rows.Count > 0 Then
                GRIDBILL.FocusedRowHandle = GRIDBILL.RowCount - 1
                GRIDBILL.TopRowIndex = GRIDBILL.RowCount - 15
            End If
            TOTAL()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub TOTAL()
        For I As Integer = 0 To GRIDBILL.RowCount - 1
            Dim DTROW As DataRow = GRIDBILL.GetDataRow(I)

            'THEY DONT WANT TO ADD DYEING MTRS IN BALSTOCK
            If ClientName = "YASHVI" Then
                DTROW("BALMTRS") = (Val(DTROW("MTRS")) + Val(DTROW("PACKINGMTRS"))) - Val(DTROW("PENDINGMTRS"))
            Else
                DTROW("BALMTRS") = (Val(DTROW("MTRS")) + Val(DTROW("PACKINGMTRS")) + Val(DTROW("DYEINGMTRS"))) - Val(DTROW("PENDINGMTRS"))
            End If
        Next
    End Sub

    Private Sub GRIDBILLDETAILS_Click(sender As Object, e As EventArgs) Handles GRIDBILLDETAILS.Click
        Try
            GRIDSTOCKDETAILS.DataSource = Nothing
            GRIDORDERDETAILS.DataSource = Nothing
            If Val(GRIDBILL.GetFocusedRowCellValue("MTRS")) > 0 Then FILLSTOCKGRID()
            If Val(GRIDBILL.GetFocusedRowCellValue("PROGRAMMTRS")) > 0 Then FILLPRGGRID()
            If Val(GRIDBILL.GetFocusedRowCellValue("PENDINGMTRS")) > 0 Then FILLORDERGRID()
            If Val(GRIDBILL.GetFocusedRowCellValue("PENDINGPOMTRS")) > 0 Then FILLPENIDNGPOGRID()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub TOOLREFRESH_Click(sender As Object, e As EventArgs) Handles TOOLREFRESH.Click
        Try
            If ALLOWBARCODEPRINT = True Then FILLGRID() Else FILLGRIDWITHOUTBARCODE()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub FILLSTOCKGRID()
        Try
            Dim OBJCMN As New ClsCommon
            Dim DT As New DataTable
            If ALLOWBARCODEPRINT = True Then
                'THIS CODE IS WITHOUT SHADE
                If ClientName = "SNCM" Then
                    DT = OBJCMN.SEARCH("GODOWN, PIECETYPE, UNIT, SUM(PCS) AS PCS, ROUND(SUM(MTRS),2) AS MTRS ", "", " BARCODESTOCK ", WHERECLAUSE & BARCODECLAUSE & " AND ITEMNAME = '" & GRIDBILL.GetFocusedRowCellValue("ITEMNAME") & "' AND DESIGNNO = '" & GRIDBILL.GetFocusedRowCellValue("DESIGNNO") & "' AND YEARID = " & YearId & " GROUP BY GODOWN, PIECETYPE, UNIT")
                Else
                    DT = OBJCMN.SEARCH("GODOWN, PIECETYPE, UNIT, SUM(PCS) AS PCS, ROUND(SUM(MTRS),2) AS MTRS ", "", " BARCODESTOCK ", WHERECLAUSE & BARCODECLAUSE & " AND ITEMNAME = '" & GRIDBILL.GetFocusedRowCellValue("ITEMNAME") & "' AND DESIGNNO = '" & GRIDBILL.GetFocusedRowCellValue("DESIGNNO") & "' AND COLOR = '" & GRIDBILL.GetFocusedRowCellValue("COLOR") & "' AND YEARID = " & YearId & " GROUP BY GODOWN, PIECETYPE, UNIT")
                End If
            Else
                DT = OBJCMN.SEARCH("GODOWN, PIECETYPE, UNIT, ROUND(SUM(PCS) - SUM(ISSPCS),2) AS PCS, ROUND(SUM(MTRS) - SUM(ISSMTRS),2) AS MTRS ", "", " STOCKREGISTER ", " AND ITEMNAME = '" & GRIDBILL.GetFocusedRowCellValue("ITEMNAME") & "' AND DESIGNNO = '" & GRIDBILL.GetFocusedRowCellValue("DESIGNNO") & "' AND COLOR = '" & GRIDBILL.GetFocusedRowCellValue("COLOR") & "' AND YEARID = " & YearId & " GROUP BY GODOWN, PIECETYPE, UNIT")
            End If
            GRIDSTOCKDETAILS.DataSource = DT
            If DT.Rows.Count > 0 Then
                GRIDSTOCK.FocusedRowHandle = GRIDSTOCK.RowCount - 1
                GRIDSTOCK.TopRowIndex = GRIDSTOCK.RowCount - 15
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub CMDPHOTOVIEW_Click(sender As Object, e As EventArgs) Handles CMDPHOTOVIEW.Click
        Try

            'GET IMAGES FROM DESIGNMASTER
            PBIMAGE1.Image = Nothing
            Dim OBJCMN As New ClsCommon
            Dim DTIMG As DataTable = OBJCMN.SEARCH("ITEMDESIGNIMAGE.ITEMDESIGN_IMAGE1 AS PHOTO", "", " ITEMDESIGNIMAGE INNER JOIN ITEMMASTER ON ITEMDESIGNIMAGE.ITEMDESIGN_ITEMID = ITEMMASTER.ITEM_id INNER JOIN DESIGNMASTER ON ITEMDESIGNIMAGE.ITEMDESIGN_DESIGNID = DESIGNMASTER.DESIGN_id ", " AND ITEMMASTER.ITEM_NAME = '" & GRIDBILL.GetFocusedRowCellValue("ITEMNAME") & "' AND DESIGNMASTER.DESIGN_NO = '" & GRIDBILL.GetFocusedRowCellValue("DESIGNNO") & "' AND ITEMDESIGNIMAGE.ITEMDESIGN_YEARID = " & YearId)
            If DTIMG.Rows.Count > 0 Then
                If IsDBNull(DTIMG.Rows(0).Item("PHOTO")) = False Then
                    PBIMAGE1.Image = Image.FromStream(New IO.MemoryStream(DirectCast(DTIMG.Rows(0).Item("PHOTO"), Byte())))
                Else
                    PBIMAGE1.Image = Nothing
                End If
            End If


            Dim objVIEW As New ViewImage
            objVIEW.pbsoftcopy.Image = PBIMAGE1.Image
            objVIEW.ShowDialog()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub FILLORDERGRID()
        Try
            Dim OBJCMN As New ClsCommon
            Dim HAVINGCLAUSE As String = ""
            If SALEORDERONMTRS = True Then HAVINGCLAUSE = HAVINGCLAUSE & " HAVING ROUND(SUM(PENDINGMTRS)+SUM(OLDPENDINGMTRS),2) > 0 " Else HAVINGCLAUSE = HAVINGCLAUSE & " HAVING ROUND(SUM(PENDINGPCS)+SUM(OLDPENDINGPCS),0) > 0"
            'If ClientName <> "AVIS" Then SOCLAUSE = ""
            SOCLAUSE = ""

            Dim DT As New DataTable
            'THIS IS WITHOUT COLOR
            If ClientName = "SNCM" Then
                DT = OBJCMN.SEARCH("NAME, ORDERNO, DUEDATE, UNIT, SUM(PENDINGPCS)+SUM(OLDPENDINGPCS) AS PCS, ROUND(SUM(PENDINGMTRS)+SUM(OLDPENDINGMTRS),2) AS MTRS ", "", " PENDINGSALEORDER ", " AND ITEMNAME = '" & GRIDBILL.GetFocusedRowCellValue("ITEMNAME") & "' AND DESIGNNO = '" & GRIDBILL.GetFocusedRowCellValue("DESIGNNO") & "' AND YEARID = " & YearId & SOCLAUSE & " GROUP BY NAME, ORDERNO, DUEDATE, UNIT " & HAVINGCLAUSE)
            Else
                DT = OBJCMN.SEARCH("NAME, ORDERNO, DUEDATE, UNIT, SUM(PENDINGPCS)+SUM(OLDPENDINGPCS) AS PCS, ROUND(SUM(PENDINGMTRS)+SUM(OLDPENDINGMTRS),2) AS MTRS ", "", " PENDINGSALEORDER ", " AND ITEMNAME = '" & GRIDBILL.GetFocusedRowCellValue("ITEMNAME") & "' AND DESIGNNO = '" & GRIDBILL.GetFocusedRowCellValue("DESIGNNO") & "' AND SHADE = '" & GRIDBILL.GetFocusedRowCellValue("COLOR") & "' AND YEARID = " & YearId & SOCLAUSE & " GROUP BY NAME, ORDERNO, DUEDATE, UNIT " & HAVINGCLAUSE)
            End If
            GRIDORDERDETAILS.DataSource = DT
            If DT.Rows.Count > 0 Then
                GRIDORDER.FocusedRowHandle = GRIDORDER.RowCount - 1
                GRIDORDER.TopRowIndex = GRIDORDER.RowCount - 15
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub FILLPRGGRID()
        Try
            Dim OBJCMN As New ClsCommon
            Dim DT As DataTable = OBJCMN.SEARCH("LEDGERS.Acc_cmpname AS NAME, ALLPROGRAMMASTER.PROGRAM_NO AS PRGNO, ALLPROGRAMMASTER.PROGRAM_DATE AS DATE, ALLPROGRAMMASTER_DESC.PROGRAM_LOTNO AS LOTNO, (ISNULL(SUM(ALLPROGRAMMASTER_DESC.PROGRAM_PCS),0)-ISNULL(SUM(ALLPROGRAMMASTER_DESC.PROGRAM_RECDPCS),0)) AS MTRS ", "", " ALLPROGRAMMASTER INNER JOIN ALLPROGRAMMASTER_DESC ON ALLPROGRAMMASTER.PROGRAM_NO = ALLPROGRAMMASTER_DESC.PROGRAM_NO AND ALLPROGRAMMASTER.PROGRAM_TYPE = ALLPROGRAMMASTER_DESC.PROGRAM_TYPE AND ALLPROGRAMMASTER.PROGRAM_YEARID = ALLPROGRAMMASTER_DESC.PROGRAM_YEARID INNER JOIN LEDGERS ON ALLPROGRAMMASTER.PROGRAM_LEDGERID = LEDGERS.ACC_ID INNER JOIN ITEMMASTER ON ALLPROGRAMMASTER_DESC.PROGRAM_ITEMID = ITEMMASTER.ITEM_ID INNER JOIN DESIGNMASTER ON ALLPROGRAMMASTER_DESC.PROGRAM_DESIGNID = DESIGNMASTER.DESIGN_ID INNER JOIN COLORMASTER ON ALLPROGRAMMASTER_DESC.PROGRAM_COLORID = COLORMASTER.COLOR_ID ", " AND ITEMMASTER.ITEM_NAME = '" & GRIDBILL.GetFocusedRowCellValue("ITEMNAME") & "' AND DESIGNMASTER.DESIGN_NO = '" & GRIDBILL.GetFocusedRowCellValue("DESIGNNO") & "' AND COLORMASTER.COLOR_NAME = '" & GRIDBILL.GetFocusedRowCellValue("COLOR") & "' AND ROUND(ISNULL(ALLPROGRAMMASTER_DESC.PROGRAM_PCS - ALLPROGRAMMASTER_DESC.PROGRAM_RECDPCS,0),2) > 0 AND ALLPROGRAMMASTER_DESC.PROGRAM_STATUS <> 'CANCEL' AND ALLPROGRAMMASTER.PROGRAM_YEARID = " & YearId & " GROUP BY LEDGERS.Acc_cmpname, ALLPROGRAMMASTER.PROGRAM_NO, ALLPROGRAMMASTER.PROGRAM_DATE, ALLPROGRAMMASTER_DESC.PROGRAM_LOTNO")
            GRIDPRGDETAILS.DataSource = DT
            If DT.Rows.Count > 0 Then
                GRIDPRG.FocusedRowHandle = GRIDPRG.RowCount - 1
                GRIDPRG.TopRowIndex = GRIDPRG.RowCount - 15
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub FILLPENIDNGPOGRID()
        Try
            Dim OBJCMN As New ClsCommon
            Dim HAVINGCLAUSE As String = ""
            If SALEORDERONMTRS = True Then HAVINGCLAUSE = HAVINGCLAUSE & " HAVING ROUND(SUM(PENDINGMTRS)+SUM(OLDPENDINGMTRS),2) > 0 " Else HAVINGCLAUSE = HAVINGCLAUSE & " HAVING ROUND(SUM(PENDINGPCS)+SUM(OLDPENDINGPCS),0) > 0"
            'If ClientName <> "AVIS" Then SOCLAUSE = ""
            SOCLAUSE = ""

            Dim DT As DataTable = OBJCMN.SEARCH("NAME, ORDERNO, DUEDATE, UNIT, SUM(PENDINGPCS)+SUM(OLDPENDINGPCS) AS PCS, ROUND(SUM(PENDINGMTRS)+SUM(OLDPENDINGMTRS),2) AS MTRS ", "", " PENDINGPURCHASEORDER ", " AND ITEMNAME = '" & GRIDBILL.GetFocusedRowCellValue("ITEMNAME") & "' AND DESIGNNO = '" & GRIDBILL.GetFocusedRowCellValue("DESIGNNO") & "' AND SHADE = '" & GRIDBILL.GetFocusedRowCellValue("COLOR") & "' AND YEARID = " & YearId & SOCLAUSE & " GROUP BY NAME, ORDERNO, DUEDATE, UNIT " & HAVINGCLAUSE)
            GRIDPODETAILS.DataSource = DT
            If DT.Rows.Count > 0 Then
                GRIDPO.FocusedRowHandle = GRIDPO.RowCount - 1
                GRIDPO.TopRowIndex = GRIDPO.RowCount - 15
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub TOOLWHATSAPP_Click(sender As Object, e As EventArgs) Handles TOOLWHATSAPP.Click

        Try
            For I As Integer = 0 To GRIDBILL.RowCount - 1

                Dim ROW As DataRow = GRIDBILL.GetDataRow(I)
                If ROW("CHK") = True Then
                    Dim OBJCMN As New ClsCommon
                    Dim DTIMG As DataTable = OBJCMN.SEARCH("ITEMDESIGNIMAGE.ITEMDESIGN_IMAGE1 AS PHOTO", "", "  ITEMDESIGNIMAGE LEFT OUTER JOIN ITEMMASTER ON ITEMDESIGNIMAGE.ITEMDESIGN_ITEMID = ITEMMASTER.item_id LEFT OUTER JOIN DESIGNMASTER ON ITEMDESIGNIMAGE.ITEMDESIGN_DESIGNID = DESIGNMASTER.DESIGN_id ", " AND DESIGNMASTER.DESIGN_NO = '" & ROW("DESIGNNO") & "'  AND ITEMDESIGN_YEARID = " & YearId)
                    ' Dim DTIMG As DataTable = OBJCMN.SEARCH("ITEMDESIGNIMAGE.ITEMDESIGN_IMAGE1 AS PHOTO", "", " ITEMDESIGNIMAGE ", " AND ITEMDESIGN_NO = " & ROW("DESIGNNO") & "  AND ITEMDESIGN_YEARID = " & YearId)

                    For Each DR As DataRow In DTIMG.Rows
                        Dim _MemoryStream As New System.IO.MemoryStream()
                        Dim _BinaryFormatter As New System.Runtime.Serialization.Formatters.Binary.BinaryFormatter()
                        _BinaryFormatter.Serialize(_MemoryStream, DR("PHOTO"))
                        _MemoryStream.ToArray()
                        File.WriteAllBytes(Application.StartupPath & “\" & ROW("ITEMNAME") & ROW("DESIGNNO") & YearId & ".jpeg”, DirectCast(DR("PHOTO"), Byte()))
                        PATH.Add(Application.StartupPath & “\" & ROW("ITEMNAME") & ROW("DESIGNNO") & YearId & ".jpeg”)
                        FILENAME.Add(ROW("ITEMNAME") & ROW("DESIGNNO") & YearId & ".jpeg”)
                    Next

                End If
            Next
            'If ALLOWWHATSAPP = True Then FRMSTRING = "DIRECTWHATSAPP"
            'If FRMSTRING = "DIRECTWHATSAPP" Then

            Dim OBJWHATSAPP As New SendWhatsapp
                OBJWHATSAPP.FRMSTRING = "DIRECTWHATSAPP"
                OBJWHATSAPP.PATH = PATH
                OBJWHATSAPP.FILENAME = FILENAME
                OBJWHATSAPP.ShowDialog()
            ' End If

        Catch ex As Exception
            Throw ex
        End Try


    End Sub

    Private Sub SaleOrderVsStockGridReport_Shown(sender As Object, e As EventArgs) Handles Me.Shown
        Try
            If ClientName <> "AVIS" Then GCADNO.Visible = False
            If ClientName = "AVIS" Then GPO.Visible = False
            If ClientName <> "MAHAVIRPOLYCOT" Then
                GPCS.Visible = False
                GPENDINGPCS.Visible = False
                GDYEINGMTRS.Visible = False
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub GRIDSTOCKDETAILS_DoubleClick(sender As Object, e As EventArgs) Handles GRIDSTOCKDETAILS.DoubleClick
        Try
            If Val(GRIDSTOCK.GetFocusedRowCellValue("MTRS")) > 0 Then
                Dim OBJSTOCK As New GodownwiseDetails
                OBJSTOCK.TEMPITEMNAME = GRIDBILL.GetFocusedRowCellValue("ITEMNAME")
                OBJSTOCK.TEMPDESIGNNO = GRIDBILL.GetFocusedRowCellValue("DESIGNNO")
                OBJSTOCK.TEMPCOLOR = GRIDBILL.GetFocusedRowCellValue("COLOR")
                OBJSTOCK.MdiParent = MDIMain
                OBJSTOCK.Show()
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub TXTBARCODE_Validated(sender As Object, e As EventArgs) Handles TXTBARCODE.Validated
        Try
            If TXTBARCODE.Text.Trim.Length > 0 Then
                Dim OBJCMN As New ClsCommon
                Dim DT As New DataTable
                'GET DATA FROM SAMPLE BARCODE
                'no need for yearid clause here as we need to fetch this barcode in all acccouting year
                DT = OBJCMN.SEARCH(" SAMPLEBARCODE.SB_NO AS SBNO, SAMPLEBARCODE.SB_GRIDSRNO AS GRIDSRNO, ISNULL(ITEMMASTER.item_name, '') AS ITEMNAME, ISNULL(QUALITYMASTER.QUALITY_NAME,'') AS QUALITY, ISNULL(DESIGN_NO, '') AS DESIGNNO, ISNULL(COLORMASTER.COLOR_name, '') AS COLOR, ISNULL(SAMPLEBARCODE.SB_REMARKS, '') AS REMARKS, SAMPLEBARCODE.SB_BARCODE AS BARCODE", "", " SAMPLEBARCODE INNER JOIN ITEMMASTER ON SAMPLEBARCODE.SB_ITEMID = ITEMMASTER.item_id LEFT OUTER JOIN QUALITYMASTER ON SAMPLEBARCODE.SB_QUALITYID = QUALITYMASTER.QUALITY_id LEFT OUTER JOIN COLORMASTER ON SAMPLEBARCODE.SB_COLORID = COLORMASTER.COLOR_id LEFT OUTER JOIN DESIGNMASTER ON SAMPLEBARCODE.SB_DESIGNID = DESIGNMASTER.DESIGN_id  ", " AND SB_BARCODE = '" & TXTBARCODE.Text.Trim & "'")
                If DT.Rows.Count > 0 Then

                    '                    For I As Integer = 0 To GRIDBILL.RowCount - 1
                    '                        Dim ROW As DataRow = GRIDBILL.GetDataRow(I)
                    '                        If ROW("ITEMNAME") = DT.Rows(0).Item("ITEMNAME") And ROW("DESIGNNO") = DT.Rows(0).Item("DESIGNNO") And ROW("COLOR") = DT.Rows(0).Item("COLOR") Then
                    '                            ROW("SAMPLEMATCH") = True
                    '                            GoTo LINE1
                    '                        End If
                    '                    Next


                    'LINE1:


                    If DT.Rows(0).Item("ITEMNAME") <> "" Then GRIDBILL.Columns("ITEMNAME").FilterInfo = New ColumnFilterInfo(DT.Rows(0).Item("ITEMNAME"))
                    If DT.Rows(0).Item("DESIGNNO") <> "" Then GRIDBILL.Columns("DESIGNNO").FilterInfo = New ColumnFilterInfo(DT.Rows(0).Item("DESIGNNO"))
                    If DT.Rows(0).Item("COLOR") <> "" Then GRIDBILL.Columns("COLOR").FilterInfo = New ColumnFilterInfo(DT.Rows(0).Item("COLOR"))

                    TXTBARCODE.Clear()
                    TXTBARCODE.Focus()
                Else
                    MsgBox("Invalid Barcode", MsgBoxStyle.Critical)
                    TXTBARCODE.Clear()
                End If
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub
End Class