
Imports BL
Imports DevExpress.XtraPrinting
Imports DevExpress.XtraPrintingLinks


Public Class GSTR1GridReport
    Public WHERECLAUSE As String = ""
    Public FROMDATE As Date = AccFrom.Date
    Public TODATE As Date = AccTo.Date


    Private Sub GSTR1GridReport_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        Try
            FILLGRID()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Sub FILLGRID()
        Try
            Dim OBJCMN As New ClsCommon

            'B2B
            Dim DTB2B As DataTable = OBJCMN.SEARCH("ISNULL(LEDGERS.ACC_GSTIN, '') AS GSTIN, ISNULL(LEDGERS.ACC_CMPNAME, '') AS NAME, INVOICEMASTER.INVOICE_PRINTINITIALS AS PRINTINITIALS, CAST(INVOICEMASTER.INVOICE_DATE AS VARCHAR(10)) AS DATE, ISNULL(INVOICEMASTER.INVOICE_TOTALWITHGST, 0) AS GRANDTOTAL, UPPER(ISNULL(CAST(STATEMASTER.STATE_REMARK AS VARCHAR(50)), '') + '-' + ISNULL(STATEMASTER.STATE_NAME, '')) AS PLACEOFSUPPLY,  'N' AS REVERSECHARGE, '' AS APPLICABLEPER, 'REGULAR' AS INVOICETYPE, '' AS ECOMMGSTIN, (SELECT TOP 1 (CASE WHEN ISNULL(INVOICEMASTER.INVOICE_EXPORTGST,0) = 'TRUE' THEN ISNULL(HSN_EXPIGST,0) ELSE HSN_IGST END) AS GSTPER FROM  INVOICEMASTER_DESC INNER JOIN HSNMASTER_DESC ON INVOICEMASTER_DESC.INVOICE_HSNCODEID = HSNMASTER_DESC.HSN_ID  INNER JOIN REGISTERMASTER ON REGISTER_ID = INVOICE_REGISTERID INNER JOIN INVOICEMASTER ON INVOICEMASTER.INVOICE_NO = INVOICEMASTER_DESC.INVOICE_NO AND INVOICEMASTER.INVOICE_REGISTERID = INVOICEMASTER_DESC.INVOICE_REGISTERID AND INVOICEMASTER.INVOICE_YEARID = INVOICEMASTER_DESC.INVOICE_YEARID WHERE  HSNMASTER_DESC.HSN_WEFDATE <= INVOICEMASTER.INVOICE_DATE AND INVOICEMASTER.INVOICE_YEARID = " & YearId & " ORDER BY HSNMASTER_DESC.HSN_WEFDATE DESC) AS RATE, (CASE WHEN ISNULL(INVOICEMASTER.INVOICE_SCREENTYPE,'LINE GST') = 'LINE GST' THEN ISNULL(INVOICEMASTER.INVOICE_TOTALTAXABLEAMT, 0) ELSE ISNULL(INVOICE_SUBTOTAL,0) END) AS TAXABLEAMT, 0 AS CESSAMT, ISNULL(INVOICEMASTER.INVOICE_TOTALCGSTAMT, 0) AS CGSTAMT, ISNULL(INVOICEMASTER.INVOICE_TOTALSGSTAMT, 0) AS SGSTAMT, ISNULL(INVOICEMASTER.INVOICE_TOTALIGSTAMT, 0) AS IGSTAMT  ", "", " INVOICEMASTER INNER JOIN LEDGERS ON INVOICEMASTER.INVOICE_LEDGERID = LEDGERS.Acc_id LEFT OUTER JOIN STATEMASTER ON STATE_ID = LEDGERS.ACC_STATEID INNER JOIN REGISTERMASTER ON REGISTER_ID = INVOICE_REGISTERID ", " AND ISNULL(LEDGERS.ACC_GSTIN,'') <> '' " & WHERECLAUSE & "  AND INVOICEMASTER.INVOICE_YEARID = " & YearId & " ORDER BY INVOICEMASTER.INVOICE_DATE, INVOICEMASTER.INVOICE_REGISTERID, INVOICEMASTER.INVOICE_NO ")
            GRIDB2BDETAILS.DataSource = DTB2B

            'B2CL
            Dim DTB2CL As DataTable = OBJCMN.SEARCH(" INVOICEMASTER.INVOICE_PRINTINITIALS AS PRINTINITIALS, INVOICEMASTER.INVOICE_DATE AS DATE, ISNULL(INVOICEMASTER.INVOICE_TOTALWITHGST, 0) AS GRANDTOTAL , UPPER(ISNULL(CAST(STATEMASTER.STATE_REMARK AS VARCHAR(50)), '') + '-' + ISNULL(STATEMASTER.STATE_NAME, '')) AS PLACEOFSUPPLY, 0 AS APPLICABLEPER,  (SELECT TOP 1 (CASE WHEN ISNULL(INVOICEMASTER.INVOICE_EXPORTGST,0) = 'TRUE' THEN ISNULL(HSN_EXPIGST,0) ELSE HSN_IGST END) AS GSTPER FROM  INVOICEMASTER_DESC INNER JOIN HSNMASTER_DESC ON INVOICEMASTER_DESC.INVOICE_HSNCODEID = HSNMASTER_DESC.HSN_ID  INNER JOIN REGISTERMASTER ON REGISTER_ID = INVOICE_REGISTERID INNER JOIN INVOICEMASTER ON INVOICEMASTER.INVOICE_NO = INVOICEMASTER_DESC.INVOICE_NO AND INVOICEMASTER.INVOICE_REGISTERID = INVOICEMASTER_DESC.INVOICE_REGISTERID AND INVOICEMASTER.INVOICE_YEARID = INVOICEMASTER_DESC.INVOICE_YEARID WHERE  HSNMASTER_DESC.HSN_WEFDATE <= INVOICEMASTER.INVOICE_DATE AND INVOICEMASTER.INVOICE_YEARID = " & YearId & " ORDER BY HSNMASTER_DESC.HSN_WEFDATE DESC  ) AS RATE, (CASE WHEN ISNULL(INVOICEMASTER.INVOICE_SCREENTYPE,'LINE GST') = 'LINE GST' THEN ISNULL(INVOICEMASTER.INVOICE_TOTALTAXABLEAMT, 0) ELSE ISNULL(INVOICE_SUBTOTAL,0) END) AS TAXABLEAMT, 0 AS CESSAMT, '' AS ECOMMGSTIN, ISNULL(INVOICEMASTER.INVOICE_TOTALCGSTAMT, 0) AS CGSTAMT, ISNULL(INVOICEMASTER.INVOICE_TOTALSGSTAMT, 0) AS SGSTAMT, ISNULL(INVOICEMASTER.INVOICE_TOTALIGSTAMT, 0) AS IGSTAMT ", "", " INVOICEMASTER INNER JOIN LEDGERS ON INVOICEMASTER.INVOICE_LEDGERID = LEDGERS.Acc_id LEFT OUTER JOIN STATEMASTER ON STATE_ID = LEDGERS.ACC_STATEID  INNER JOIN REGISTERMASTER ON REGISTER_ID = INVOICE_REGISTERID ", " AND ISNULL(ACC_GSTIN,'') = '' AND ISNULL(INVOICEMASTER.INVOICE_TOTALWITHGST, 0) > 100000 " & WHERECLAUSE & "  AND INVOICEMASTER.INVOICE_YEARID = " & YearId & " ORDER BY INVOICEMASTER.INVOICE_DATE, INVOICEMASTER.INVOICE_REGISTERID, INVOICEMASTER.INVOICE_NO ")
            GRIDB2CDETAILS.DataSource = DTB2CL

            'B2CS
            Dim DTB2CS As DataTable = OBJCMN.SEARCH(" 'OE' AS TYPE, UPPER(ISNULL(CAST(STATEMASTER.STATE_REMARK AS VARCHAR(50)), '') + '-' + ISNULL(STATEMASTER.STATE_NAME, '')) AS PLACEOFSUPPLY, 0 AS APPLICABLEPER,  (SELECT TOP 1 (CASE WHEN ISNULL(INVOICEMASTER.INVOICE_EXPORTGST,0) = 'TRUE' THEN ISNULL(HSN_EXPIGST,0) ELSE HSN_IGST END) AS GSTPER FROM  INVOICEMASTER_DESC INNER JOIN HSNMASTER_DESC ON INVOICEMASTER_DESC.INVOICE_HSNCODEID = HSNMASTER_DESC.HSN_ID  INNER JOIN REGISTERMASTER ON REGISTER_ID = INVOICE_REGISTERID INNER JOIN INVOICEMASTER ON INVOICEMASTER.INVOICE_NO = INVOICEMASTER_DESC.INVOICE_NO AND INVOICEMASTER.INVOICE_REGISTERID = INVOICEMASTER_DESC.INVOICE_REGISTERID AND INVOICEMASTER.INVOICE_YEARID = INVOICEMASTER_DESC.INVOICE_YEARID WHERE  HSNMASTER_DESC.HSN_WEFDATE <= INVOICEMASTER.INVOICE_DATE AND INVOICEMASTER.INVOICE_YEARID = " & YearId & " ORDER BY HSNMASTER_DESC.HSN_WEFDATE DESC  ) AS RATE, (CASE WHEN ISNULL(INVOICEMASTER.INVOICE_SCREENTYPE,'LINE GST') = 'LINE GST' THEN ISNULL(INVOICEMASTER.INVOICE_TOTALTAXABLEAMT, 0) ELSE ISNULL(INVOICE_SUBTOTAL,0) END) AS TAXABLEAMT, 0 AS CESSAMT, '' AS ECOMMGSTIN, ISNULL(INVOICEMASTER.INVOICE_TOTALCGSTAMT, 0) AS CGSTAMT, ISNULL(INVOICEMASTER.INVOICE_TOTALSGSTAMT, 0) AS SGSTAMT, ISNULL(INVOICEMASTER.INVOICE_TOTALIGSTAMT, 0) AS IGSTAMT ", "", " INVOICEMASTER INNER JOIN LEDGERS ON INVOICEMASTER.INVOICE_LEDGERID = LEDGERS.Acc_id LEFT OUTER JOIN STATEMASTER ON STATE_ID = LEDGERS.ACC_STATEID  INNER JOIN REGISTERMASTER ON REGISTER_ID = INVOICE_REGISTERID ", " AND ISNULL(ACC_GSTIN,'') = '' AND ISNULL(INVOICEMASTER.INVOICE_TOTALWITHGST, 0) <= 100000 " & WHERECLAUSE & "  AND INVOICEMASTER.INVOICE_YEARID = " & YearId & " ORDER BY INVOICEMASTER.INVOICE_DATE, INVOICEMASTER.INVOICE_REGISTERID, INVOICEMASTER.INVOICE_NO ")
            GRIDB2CSDETAILS.DataSource = DTB2CS

            'CDNR
            Dim DTCDNR As DataTable = OBJCMN.SEARCH(" T.*, 0 as APPLICABLEPER, 0 AS CESSAMT, 'N' AS PREGST", "", " (SELECT ISNULL(LEDGERS.ACC_GSTIN,'') AS GSTIN, ISNULL(LEDGERS.ACC_CMPNAME,'') AS NAME, (CASE WHEN CREDITNOTEMASTER.CN_BILLNO = '' THEN CN_PARTYREFNO ELSE CREDITNOTEMASTER.CN_BILLNO END) AS INVINITIALS, ISNULL((CASE WHEN CN_BILLNO = '' THEN CN_date ELSE COALESCE (INVOICEMASTER.INVOICE_DATE, OPENINGBILL.BILL_DATE) END), GETDATE()) AS INVDATE, CREDITNOTEMASTER.CN_PRINTINITIALS AS CNINITIALS, CREDITNOTEMASTER.CN_date AS CNDATE, 'C' AS DOCTYPE, '01-Sales Return' AS REASON, CREDITNOTEMASTER.CN_cmpid AS CMPID, CREDITNOTEMASTER.CN_yearid AS YEARID, UPPER(ISNULL(CAST(STATEMASTER.STATE_REMARK AS VARCHAR(50)), '') + '-' + ISNULL(STATEMASTER.STATE_NAME, '')) AS PLACEOFSUPPLY, CREDITNOTEMASTER.CN_GTOTAL AS GRANDTOTAL, ISNULL(HSNMASTER_DESC.HSN_IGST,0) AS RATE, CREDITNOTEMASTER.CN_SUBTOTAL AS TAXABLEAMT, (CASE WHEN CREDITNOTEMASTER.CN_BILLNO = '' THEN CN_PARTYREFNO ELSE COALESCE(INVOICEMASTER.INVOICE_PRINTINITIALS, OPENINGBILL.BILL_PRINTINITIALS) END) AS PRINTINITIALS, ISNULL(CREDITNOTEMASTER.CN_CGSTAMT,0) AS CGSTAMT, ISNULL(CREDITNOTEMASTER.CN_SGSTAMT,0) AS SGSTAMT, ISNULL(CREDITNOTEMASTER.CN_IGSTAMT,0) AS IGSTAMT FROM CREDITNOTEMASTER INNER JOIN LEDGERS ON CREDITNOTEMASTER.CN_LEDGERID = LEDGERS.Acc_id CROSS APPLY (SELECT TOP 1 * FROM HSNMASTER_DESC WHERE HSN_WEFDATE <= CREDITNOTEMASTER.CN_DATE AND HSN_YEARID = CREDITNOTEMASTER.CN_yearid AND HSN_ID = CN_HSNCODEID ORDER BY HSN_WEFDATE DESC) AS HSNMASTER_DESC LEFT OUTER JOIN STATEMASTER ON LEDGERS.Acc_stateid = STATEMASTER.state_id LEFT OUTER JOIN INVOICEMASTER ON CREDITNOTEMASTER.CN_yearid = INVOICEMASTER.INVOICE_YEARID AND CREDITNOTEMASTER.CN_BILLNO = INVOICEMASTER.INVOICE_INITIALS LEFT OUTER JOIN OPENINGBILL ON CREDITNOTEMASTER.CN_yearid = OPENINGBILL.BILL_YEARID AND CREDITNOTEMASTER.CN_BILLNO = OPENINGBILL.BILL_INITIALS WHERE ISNULL(CREDITNOTEMASTER.CN_NOGSTR1,'FALSE') = 'FALSE' UNION ALL SELECT ISNULL(LEDGERS.ACC_GSTIN,'') AS GSTIN, ISNULL(LEDGERS.ACC_CMPNAME,'') AS NAME, ISNULL(DEBITNOTEMASTER.DN_SALEREFNO,'') AS INVINITIALS, DN_DATE AS INVDATE, DEBITNOTEMASTER.DN_PRINTINITIALS AS DNINITIALS, DEBITNOTEMASTER.DN_date AS DNDATE, 'D' AS DOCTYPE, '07-Others' AS REASON, DEBITNOTEMASTER.DN_cmpid AS CMPID, DEBITNOTEMASTER.DN_yearid AS YEARID, UPPER(ISNULL(CAST(STATEMASTER.STATE_REMARK AS VARCHAR(50)), '') + '-' + ISNULL(STATEMASTER.STATE_NAME, '')) AS PLACEOFSUPPLY, DEBITNOTEMASTER.DN_GTOTAL AS GRANDTOTAL, ISNULL(HSNMASTER_DESC.HSN_IGST, 0) AS RATE, DEBITNOTEMASTER.DN_SUBTOTAL AS TAXABLEAMT, ISNULL(DEBITNOTEMASTER.DN_SALEREFNO,'') AS PRINTINITIALS, ISNULL(DEBITNOTEMASTER.DN_TOTALCGSTAMT,0) AS CGSTAMT, ISNULL(DEBITNOTEMASTER.DN_TOTALSGSTAMT,0) AS SGSTAMT, ISNULL(DEBITNOTEMASTER.DN_TOTALIGSTAMT,0) AS IGSTAMT FROM DEBITNOTEMASTER INNER JOIN LEDGERS ON DEBITNOTEMASTER.DN_LEDGERID = LEDGERS.Acc_id CROSS APPLY (SELECT TOP 1 * FROM HSNMASTER_DESC WHERE HSN_WEFDATE <= DEBITNOTEMASTER.DN_DATE AND HSN_YEARID = DEBITNOTEMASTER.DN_yearid AND HSN_ID = DN_HSNCODEID ORDER BY HSN_WEFDATE DESC) AS HSNMASTER_DESC LEFT OUTER JOIN STATEMASTER ON LEDGERS.Acc_stateid = STATEMASTER.state_id WHERE ISNULL(DEBITNOTEMASTER.DN_GSTR1,'TRUE') = 'TRUE' UNION ALL SELECT ISNULL(LEDGERS.ACC_GSTIN,'') AS GSTIN, ISNULL(LEDGERS.ACC_CMPNAME,'') AS NAME, (CASE WHEN ISNULL(SALERETURN.SALRET_INVOICENO, '') = '' THEN CAST(SALRET_NO AS VARCHAR(10)) ELSE ISNULL(COALESCE (INVOICEMASTER.INVOICE_INITIALS, OPENINGBILL.BILL_INITIALS), 'SR-' + CAST(SALERETURN.SALRET_NO AS VARCHAR(10))) END) AS INVINITIALS, (CASE WHEN ISNULL(SALRET_INVOICENO, '') = '' THEN SALRET_date ELSE ISNULL(COALESCE (INVOICEMASTER.INVOICE_DATE, OPENINGBILL.BILL_DATE), SALRET_DATE) END) AS INVDATE, CAST(SALERETURN.SALRET_PRINTINITIALS AS VARCHAR(50)) AS CNINITIALS, SALERETURN.SALRET_DATE AS CNDATE, 'C' AS DOCTYPE, '01-Sales Return' AS REASON, SALERETURN.SALRET_cmpid AS CMPID, SALERETURN.SALRET_yearid AS YEARID, UPPER(ISNULL(CAST(STATEMASTER.STATE_REMARK AS VARCHAR(50)), '') + '-' + ISNULL(STATEMASTER.STATE_NAME, '')) AS PLACEOFSUPPLY, SALERETURN.SALRET_GRANDTOTAL AS GRANDTOTAL, CASE WHEN ISNULL(SALRET_IGSTPER, 0) = 0 THEN ISNULL(SALRET_CGSTPER, 0) + ISNULL(SALRET_SGSTPER, 0) ELSE ISNULL(SALRET_IGSTPER, 0) END AS RATE, SALERETURN.SALRET_SUBTOTAL AS TAXABLEAMT, (CASE WHEN ISNULL(SALERETURN.SALRET_INVOICENO, '') = '' THEN CAST(SALRET_NO AS VARCHAR(10)) ELSE ISNULL(COALESCE (INVOICEMASTER.INVOICE_PRINTINITIALS, OPENINGBILL.BILL_PRINTINITIALS), 'SR-' + CAST(SALERETURN.SALRET_NO AS VARCHAR(10))) END) AS PRINTINITIALS, ISNULL(SALERETURN.SALRET_TOTALCGSTAMT,0) AS CGSTAMT, ISNULL(SALERETURN.SALRET_TOTALSGSTAMT,0) AS SGSTAMT, ISNULL(SALERETURN.SALRET_TOTALIGSTAMT,0) AS IGSTAMT  FROM SALERETURN INNER JOIN LEDGERS ON SALERETURN.SALRET_ledgerid = LEDGERS.Acc_id LEFT OUTER JOIN STATEMASTER ON LEDGERS.Acc_stateid = STATEMASTER.state_id LEFT OUTER JOIN OPENINGBILL ON SALERETURN.SALRET_yearid = OPENINGBILL.BILL_YEARID AND CAST(SALERETURN.SALRET_INVOICENO AS INT) = OPENINGBILL.BILL_NO AND SALERETURN.SALRET_INVOICEREGID = OPENINGBILL.BILL_REGISTERID AND SALERETURN.SALRET_INVOICEINITIALS = OPENINGBILL.BILL_INITIALS LEFT OUTER JOIN INVOICEMASTER ON SALERETURN.SALRET_yearid = INVOICEMASTER.INVOICE_YEARID AND CAST(SALERETURN.SALRET_INVOICENO AS INT) = INVOICEMASTER.INVOICE_NO AND SALERETURN.SALRET_INVOICEREGID = INVOICEMASTER.INVOICE_REGISTERID) AS T ", " AND T.CNDATE >= '" & Format(FROMDATE.Date, "MM/dd/yyyy") & "' AND T.CNDATE <= '" & Format(TODATE.Date, "MM/dd/yyyy") & "' AND T.YEARID = " & YearId & " AND T.GSTIN <> '' ORDER BY T.CNDATE ")
            GRIDCDNRDETAILS.DataSource = DTCDNR

            'CDNRUR
            Dim DTCDNRUR As DataTable = OBJCMN.SEARCH(" T.*, '' AS URTYPE, 0 as APPLICABLEPER, 0 AS CESSAMT, 'N' AS PREGST", "", " (SELECT ISNULL(LEDGERS.ACC_GSTIN,'') AS GSTIN, (CASE WHEN CREDITNOTEMASTER.CN_BILLNO = '' THEN CN_PARTYREFNO ELSE CREDITNOTEMASTER.CN_BILLNO END) AS INVINITIALS, (CASE WHEN CN_BILLNO = '' THEN CN_date ELSE COALESCE (INVOICEMASTER.INVOICE_DATE, OPENINGBILL.BILL_DATE) END) AS INVDATE, CREDITNOTEMASTER.CN_PRINTINITIALS AS CNINITIALS, CREDITNOTEMASTER.CN_date AS CNDATE, 'C' AS DOCTYPE, '01-Sales Return' AS REASON, CREDITNOTEMASTER.CN_cmpid AS CMPID, CREDITNOTEMASTER.CN_yearid AS YEARID, UPPER(ISNULL(CAST(STATEMASTER.STATE_REMARK AS VARCHAR(50)), '') + '-' + ISNULL(STATEMASTER.STATE_NAME, '')) AS PLACEOFSUPPLY, CREDITNOTEMASTER.CN_GTOTAL AS GRANDTOTAL, ISNULL(HSNMASTER_DESC.HSN_IGST,0) AS RATE, CREDITNOTEMASTER.CN_SUBTOTAL AS TAXABLEAMT, (CASE WHEN CREDITNOTEMASTER.CN_BILLNO = '' THEN CN_PARTYREFNO ELSE INVOICEMASTER.INVOICE_PRINTINITIALS END) AS PRINTINITIALS, ISNULL(CREDITNOTEMASTER.CN_CGSTAMT,0) AS CGSTAMT, ISNULL(CREDITNOTEMASTER.CN_SGSTAMT,0) AS SGSTAMT, ISNULL(CREDITNOTEMASTER.CN_IGSTAMT,0) AS IGSTAMT FROM CREDITNOTEMASTER INNER JOIN LEDGERS ON CREDITNOTEMASTER.CN_LEDGERID = LEDGERS.Acc_id CROSS APPLY (SELECT TOP 1 * FROM HSNMASTER_DESC WHERE HSN_WEFDATE <= CREDITNOTEMASTER.CN_DATE AND HSN_YEARID = CREDITNOTEMASTER.CN_yearid AND HSN_ID = CN_HSNCODEID ORDER BY HSN_WEFDATE DESC) AS HSNMASTER_DESC LEFT OUTER JOIN STATEMASTER ON LEDGERS.Acc_stateid = STATEMASTER.state_id LEFT OUTER JOIN INVOICEMASTER ON CREDITNOTEMASTER.CN_yearid = INVOICEMASTER.INVOICE_YEARID AND CREDITNOTEMASTER.CN_BILLNO = INVOICEMASTER.INVOICE_INITIALS LEFT OUTER JOIN OPENINGBILL ON CREDITNOTEMASTER.CN_yearid = OPENINGBILL.BILL_YEARID AND CREDITNOTEMASTER.CN_BILLNO = OPENINGBILL.BILL_INITIALS WHERE ISNULL(CREDITNOTEMASTER.CN_NOGSTR1,'FALSE') = 'FALSE' UNION ALL SELECT ISNULL(LEDGERS.ACC_GSTIN,'') AS GSTIN, ISNULL(DEBITNOTEMASTER.DN_SALEREFNO,'') AS INVINITIALS, DEBITNOTEMASTER.DN_date AS INVDATE, DEBITNOTEMASTER.DN_PRINTinitials AS DNINITIALS, DEBITNOTEMASTER.DN_date AS DNDATE, 'D' AS DOCTYPE, '07-Others' AS REASON, DEBITNOTEMASTER.DN_cmpid AS CMPID, DEBITNOTEMASTER.DN_yearid AS YEARID, UPPER(ISNULL(CAST(STATEMASTER.STATE_REMARK AS VARCHAR(50)), '') + '-' + ISNULL(STATEMASTER.STATE_NAME, '')) AS PLACEOFSUPPLY, DEBITNOTEMASTER.DN_GTOTAL AS GRANDTOTAL, ISNULL(HSNMASTER_DESC.HSN_IGST, 0) AS RATE, DEBITNOTEMASTER.DN_SUBTOTAL AS TAXABLEAMT, '' AS PRINTINITIALS, ISNULL(DEBITNOTEMASTER.DN_TOTALCGSTAMT,0) AS CGSTAMT, ISNULL(DEBITNOTEMASTER.DN_TOTALSGSTAMT,0) AS SGSTAMT, ISNULL(DEBITNOTEMASTER.DN_TOTALIGSTAMT,0) AS IGSTAMT FROM DEBITNOTEMASTER INNER JOIN LEDGERS ON DEBITNOTEMASTER.DN_LEDGERID = LEDGERS.Acc_id CROSS APPLY (SELECT TOP 1 * FROM HSNMASTER_DESC WHERE HSN_WEFDATE <= DEBITNOTEMASTER.DN_DATE AND HSN_YEARID = DEBITNOTEMASTER.DN_yearid AND HSN_ID = DN_HSNCODEID ORDER BY HSN_WEFDATE DESC) AS HSNMASTER_DESC LEFT OUTER JOIN STATEMASTER ON LEDGERS.Acc_stateid = STATEMASTER.state_id WHERE (DEBITNOTEMASTER.DN_BILLNO = '')  AND ISNULL(DEBITNOTEMASTER.DN_GSTR1,'TRUE') = 'TRUE'  UNION ALL SELECT ISNULL(LEDGERS.ACC_GSTIN,'') AS GSTIN, (CASE WHEN ISNULL(SALERETURN.SALRET_INVOICENO, '') = '' THEN CAST(SALRET_NO AS VARCHAR(10)) ELSE ISNULL(COALESCE (INVOICEMASTER.INVOICE_INITIALS, OPENINGBILL.BILL_INITIALS), 'SR-' + CAST(SALERETURN.SALRET_NO AS VARCHAR(10))) END) AS INVINITIALS, (CASE WHEN ISNULL(SALRET_INVOICENO, '') = '' THEN SALRET_date ELSE ISNULL(COALESCE (INVOICEMASTER.INVOICE_DATE, OPENINGBILL.BILL_DATE), SALRET_DATE) END) AS INVDATE, 'SR-' + CAST(SALERETURN.SALRET_PRINTINITIALS AS VARCHAR(50)) AS CNINITIALS, SALERETURN.SALRET_DATE AS CNDATE, 'C' AS DOCTYPE, '01-Sales Return' AS REASON, SALERETURN.SALRET_cmpid AS CMPID, SALERETURN.SALRET_yearid AS YEARID, UPPER(ISNULL(CAST(STATEMASTER.STATE_REMARK AS VARCHAR(50)), '') + '-' + ISNULL(STATEMASTER.STATE_NAME, '')) AS PLACEOFSUPPLY, SALERETURN.SALRET_GRANDTOTAL AS GRANDTOTAL, CASE WHEN ISNULL(SALRET_IGSTPER, 0) = 0 THEN ISNULL(SALRET_CGSTPER, 0) + ISNULL(SALRET_SGSTPER, 0) ELSE ISNULL(SALRET_IGSTPER, 0) END AS RATE, SALERETURN.SALRET_SUBTOTAL AS TAXABLEAMT, (CASE WHEN ISNULL(SALERETURN.SALRET_INVOICENO, '') = '' THEN CAST(SALRET_NO AS VARCHAR(10)) ELSE ISNULL(COALESCE (INVOICEMASTER.INVOICE_PRINTINITIALS, OPENINGBILL.BILL_INITIALS), 'SR-' + CAST(SALERETURN.SALRET_NO AS VARCHAR(10))) END) AS PRINTINITIALS, ISNULL(SALERETURN.SALRET_TOTALCGSTAMT,0) AS CGSTAMT, ISNULL(SALERETURN.SALRET_TOTALSGSTAMT,0) AS SGSTAMT, ISNULL(SALERETURN.SALRET_TOTALIGSTAMT,0) AS IGSTAMT FROM SALERETURN INNER JOIN LEDGERS ON SALERETURN.SALRET_ledgerid = LEDGERS.Acc_id LEFT OUTER JOIN STATEMASTER ON LEDGERS.Acc_stateid = STATEMASTER.state_id LEFT OUTER JOIN OPENINGBILL ON SALERETURN.SALRET_yearid = OPENINGBILL.BILL_YEARID AND CAST(SALERETURN.SALRET_INVOICENO AS INT) = OPENINGBILL.BILL_NO AND SALERETURN.SALRET_INVOICEREGID = OPENINGBILL.BILL_REGISTERID LEFT OUTER JOIN INVOICEMASTER ON SALERETURN.SALRET_yearid = INVOICEMASTER.INVOICE_YEARID AND CAST(SALERETURN.SALRET_INVOICENO AS INT) = INVOICEMASTER.INVOICE_NO AND SALERETURN.SALRET_INVOICEREGID = INVOICEMASTER.INVOICE_REGISTERID) AS T ", " AND T.CNDATE >= '" & Format(FROMDATE.Date, "MM/dd/yyyy") & "' AND T.CNDATE <= '" & Format(TODATE.Date, "MM/dd/yyyy") & "' AND T.YEARID = " & YearId & " AND T.GSTIN = '' ORDER BY T.CNDATE ")
            GRIDCDNRURDETAILS.DataSource = DTCDNRUR

            'HSNB2B
            Dim DTHSN As DataTable = OBJCMN.SEARCH(" HSNCODE, HSNDESC, HSNRATE, 'MTR' AS UNIT, SUM(QTY) AS QTY, SUM(GRANDTOTAL) AS GRANDTOTAL, SUM(TAXABLEAMT) AS TAXABLEAMT, SUM(IGSTAMT) AS IGSTAMT, SUM(CGSTAMT) AS CGSTAMT, SUM(SGSTAMT) AS SGSTAMT, CMPID, YEARID ", "", " HSNSUMMARY ", " AND DATE >= '" & Format(FROMDATE.Date, "MM/dd/yyyy") & "' AND DATE <= '" & Format(TODATE.Date, "MM/dd/yyyy") & "' AND YEARID = " & YearId & " GROUP BY HSNCODE, HSNDESC, HSNRATE, CmpId, YearId ")
            GRIDHSNDETAILS.DataSource = DTHSN

            'HSNB2C
            Dim DTHSNB2C As DataTable = OBJCMN.SEARCH(" HSNCODE, HSNDESC, HSNRATE, 'MTR' AS UNIT, SUM(QTY) AS QTY, SUM(GRANDTOTAL) AS GRANDTOTAL, SUM(TAXABLEAMT) AS TAXABLEAMT, SUM(IGSTAMT) AS IGSTAMT, SUM(CGSTAMT) AS CGSTAMT, SUM(SGSTAMT) AS SGSTAMT, CMPID, YEARID ", "", " HSNSUMMARYB2C ", " AND DATE >= '" & Format(FROMDATE.Date, "MM/dd/yyyy") & "' AND DATE <= '" & Format(TODATE.Date, "MM/dd/yyyy") & "' AND YEARID = " & YearId & " GROUP BY HSNCODE, HSNDESC, HSNRATE, CmpId, YearId ")
            GRIDHSNB2CDETAILS.DataSource = DTHSNB2C

            'DOCS
            'Dim DTDOCS As DataTable = OBJCMN.SEARCH(" T.*, '' AS URTYPE, 0 as APPLICABLEPER, 0 AS CESSAMT, 'N' AS PREGST", "", " (SELECT ISNULL(LEDGERS.ACC_GSTIN,'') AS GSTIN, (CASE WHEN CREDITNOTEMASTER.CN_BILLNO = '' THEN CN_PARTYREFNO ELSE CREDITNOTEMASTER.CN_BILLNO END) AS INVINITIALS, (CASE WHEN CN_BILLNO = '' THEN CN_date ELSE COALESCE (INVOICEMASTER.INVOICE_DATE, OPENINGBILL.BILL_DATE) END) AS INVDATE, CREDITNOTEMASTER.CN_PRINTINITIALS AS CNINITIALS, CREDITNOTEMASTER.CN_date AS CNDATE, 'C' AS DOCTYPE, '01-Sales Return' AS REASON, CREDITNOTEMASTER.CN_cmpid AS CMPID, CREDITNOTEMASTER.CN_yearid AS YEARID, UPPER(ISNULL(CAST(STATEMASTER.STATE_REMARK AS VARCHAR(50)), '') + '-' + ISNULL(STATEMASTER.STATE_NAME, '')) AS PLACEOFSUPPLY, CREDITNOTEMASTER.CN_GTOTAL AS GRANDTOTAL, ISNULL(HSNMASTER_DESC.HSN_IGST,0) AS RATE, CREDITNOTEMASTER.CN_SUBTOTAL AS TAXABLEAMT, (CASE WHEN CREDITNOTEMASTER.CN_BILLNO = '' THEN CN_PARTYREFNO ELSE INVOICEMASTER.INVOICE_PRINTINITIALS END) AS PRINTINITIALS, ISNULL(CREDITNOTEMASTER.CN_CGSTAMT,0) AS CGSTAMT, ISNULL(CREDITNOTEMASTER.CN_SGSTAMT,0) AS SGSTAMT, ISNULL(CREDITNOTEMASTER.CN_IGSTAMT,0) AS IGSTAMT FROM CREDITNOTEMASTER INNER JOIN LEDGERS ON CREDITNOTEMASTER.CN_LEDGERID = LEDGERS.Acc_id CROSS APPLY (SELECT TOP 1 * FROM HSNMASTER_DESC WHERE HSN_WEFDATE <= CREDITNOTEMASTER.CN_DATE AND HSN_YEARID = CREDITNOTEMASTER.CN_yearid AND HSN_ID = CN_HSNCODEID ORDER BY HSN_WEFDATE DESC) AS HSNMASTER_DESC LEFT OUTER JOIN STATEMASTER ON LEDGERS.Acc_stateid = STATEMASTER.state_id LEFT OUTER JOIN INVOICEMASTER ON CREDITNOTEMASTER.CN_yearid = INVOICEMASTER.INVOICE_YEARID AND CREDITNOTEMASTER.CN_BILLNO = INVOICEMASTER.INVOICE_INITIALS LEFT OUTER JOIN OPENINGBILL ON CREDITNOTEMASTER.CN_yearid = OPENINGBILL.BILL_YEARID AND CREDITNOTEMASTER.CN_BILLNO = OPENINGBILL.BILL_INITIALS WHERE ISNULL(CREDITNOTEMASTER.CN_NOGSTR1,'FALSE') = 'FALSE' UNION ALL SELECT ISNULL(LEDGERS.ACC_GSTIN,'') AS GSTIN, ISNULL(DEBITNOTEMASTER.DN_SALEREFNO,'') AS INVINITIALS, DEBITNOTEMASTER.DN_date AS INVDATE, DEBITNOTEMASTER.DN_PRINTinitials AS DNINITIALS, DEBITNOTEMASTER.DN_date AS DNDATE, 'D' AS DOCTYPE, '07-Others' AS REASON, DEBITNOTEMASTER.DN_cmpid AS CMPID, DEBITNOTEMASTER.DN_yearid AS YEARID, UPPER(ISNULL(CAST(STATEMASTER.STATE_REMARK AS VARCHAR(50)), '') + '-' + ISNULL(STATEMASTER.STATE_NAME, '')) AS PLACEOFSUPPLY, DEBITNOTEMASTER.DN_GTOTAL AS GRANDTOTAL, ISNULL(HSNMASTER_DESC.HSN_IGST, 0) AS RATE, DEBITNOTEMASTER.DN_SUBTOTAL AS TAXABLEAMT, '' AS PRINTINITIALS FROM DEBITNOTEMASTER INNER JOIN LEDGERS ON DEBITNOTEMASTER.DN_LEDGERID = LEDGERS.Acc_id CROSS APPLY (SELECT TOP 1 * FROM HSNMASTER_DESC WHERE HSN_WEFDATE <= DEBITNOTEMASTER.DN_DATE AND HSN_YEARID = DEBITNOTEMASTER.DN_yearid AND HSN_ID = DN_HSNCODEID ORDER BY HSN_WEFDATE DESC) AS HSNMASTER_DESC LEFT OUTER JOIN STATEMASTER ON LEDGERS.Acc_stateid = STATEMASTER.state_id WHERE (DEBITNOTEMASTER.DN_BILLNO = '')  AND ISNULL(DEBITNOTEMASTER.DN_GSTR1,'TRUE') = 'TRUE'  UNION ALL SELECT ISNULL(LEDGERS.ACC_GSTIN,'') AS GSTIN, (CASE WHEN ISNULL(SALERETURN.SALRET_INVOICENO, '') = '' THEN CAST(SALRET_NO AS VARCHAR(10)) ELSE ISNULL(COALESCE (INVOICEMASTER.INVOICE_INITIALS, OPENINGBILL.BILL_INITIALS), 'SR-' + CAST(SALERETURN.SALRET_NO AS VARCHAR(10))) END) AS INVINITIALS, (CASE WHEN ISNULL(SALRET_INVOICENO, '') = '' THEN SALRET_date ELSE ISNULL(COALESCE (INVOICEMASTER.INVOICE_DATE, OPENINGBILL.BILL_DATE), SALRET_DATE) END) AS INVDATE, 'SR-' + CAST(SALERETURN.SALRET_PRINTINITIALS AS VARCHAR(50)) AS CNINITIALS, SALERETURN.SALRET_DATE AS CNDATE, 'C' AS DOCTYPE, '01-Sales Return' AS REASON, SALERETURN.SALRET_cmpid AS CMPID, SALERETURN.SALRET_yearid AS YEARID, UPPER(ISNULL(CAST(STATEMASTER.STATE_REMARK AS VARCHAR(50)), '') + '-' + ISNULL(STATEMASTER.STATE_NAME, '')) AS PLACEOFSUPPLY, SALERETURN.SALRET_GRANDTOTAL AS GRANDTOTAL, CASE WHEN ISNULL(SALRET_IGSTPER, 0) = 0 THEN ISNULL(SALRET_CGSTPER, 0) + ISNULL(SALRET_SGSTPER, 0) ELSE ISNULL(SALRET_IGSTPER, 0) END AS RATE, SALERETURN.SALRET_SUBTOTAL AS TAXABLEAMT, (CASE WHEN ISNULL(SALERETURN.SALRET_INVOICENO, '') = '' THEN CAST(SALRET_NO AS VARCHAR(10)) ELSE ISNULL(COALESCE (INVOICEMASTER.INVOICE_PRINTINITIALS, OPENINGBILL.BILL_INITIALS), 'SR-' + CAST(SALERETURN.SALRET_NO AS VARCHAR(10))) END) AS PRINTINITIALS FROM SALERETURN INNER JOIN LEDGERS ON SALERETURN.SALRET_ledgerid = LEDGERS.Acc_id LEFT OUTER JOIN STATEMASTER ON LEDGERS.Acc_stateid = STATEMASTER.state_id LEFT OUTER JOIN OPENINGBILL ON SALERETURN.SALRET_yearid = OPENINGBILL.BILL_YEARID AND CAST(SALERETURN.SALRET_INVOICENO AS INT) = OPENINGBILL.BILL_NO AND SALERETURN.SALRET_INVOICEREGID = OPENINGBILL.BILL_REGISTERID LEFT OUTER JOIN INVOICEMASTER ON SALERETURN.SALRET_yearid = INVOICEMASTER.INVOICE_YEARID AND CAST(SALERETURN.SALRET_INVOICENO AS INT) = INVOICEMASTER.INVOICE_NO AND SALERETURN.SALRET_INVOICEREGID = INVOICEMASTER.INVOICE_REGISTERID) AS T ", " AND T.CNDATE >= '" & Format(FROMDATE.Date, "MM/dd/yyyy") & "' AND T.CNDATE <= '" & Format(TODATE.Date, "MM/dd/yyyy") & "' AND T.YEARID = " & YearId & " AND T.GSTIN <> '' ORDER BY T.CNDATE ")
            'GRIDDOCSDETAILS.DataSource = DTDOCS

        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub cmdexit_Click(sender As Object, e As EventArgs) Handles cmdexit.Click
        Me.Close()
    End Sub

    Private Sub CMDREFRESH_Click(sender As Object, e As EventArgs) Handles CMDREFRESH.Click
        Try
            FILLGRID()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub PBEXCEL_Click(sender As Object, e As EventArgs) Handles PBEXCEL.Click
        Try
            Dim PATH As String = Application.StartupPath & "\GSTR1.XLS"
            If FileIO.FileSystem.FileExists(PATH) = True Then FileIO.FileSystem.DeleteFile(PATH)

            'Dim opti As New DevExpress.XtraPrinting.XlsExportOptions
            'opti.ShowGridLines = True
            'opti.SheetName = "B2B"

            'GRIDB2B.ExportToXls(PATH, opti)



            Dim printingSystem = New PrintingSystemBase()
            Dim compositeLink = New CompositeLinkBase()
            compositeLink.PrintingSystemBase = printingSystem
            Dim B2BLINK = New PrintableComponentLinkBase()
            B2BLINK.Component = GRIDB2BDETAILS
            Dim B2CLINK = New PrintableComponentLinkBase()
            B2CLINK.Component = GRIDB2CDETAILS
            Dim B2CSLINK = New PrintableComponentLinkBase()
            B2CSLINK.Component = GRIDB2CSDETAILS
            Dim CDNRLINK = New PrintableComponentLinkBase()
            CDNRLINK.Component = GRIDCDNRDETAILS
            Dim CDNRURLINK = New PrintableComponentLinkBase()
            CDNRURLINK.Component = GRIDCDNRURDETAILS
            Dim HSNLINK = New PrintableComponentLinkBase()
            HSNLINK.Component = GRIDHSNDETAILS
            Dim HSNB2CLINK = New PrintableComponentLinkBase()
            HSNB2CLINK.Component = GRIDHSNB2CDETAILS


            compositeLink.Links.Add(B2BLINK)
            compositeLink.Links.Add(B2CLINK)
            compositeLink.Links.Add(B2CSLINK)
            compositeLink.Links.Add(CDNRLINK)
            compositeLink.Links.Add(CDNRURLINK)
            compositeLink.Links.Add(HSNLINK)
            compositeLink.Links.Add(HSNB2CLINK)

            Dim options = New XlsxExportOptions()
            options.ExportMode = XlsxExportMode.SingleFilePageByPage
            options.ShowGridLines = True
            compositeLink.CreatePageForEachLink()

            compositeLink.ExportToXlsx(PATH, options)


            'SETTING SHEETNAME
            Dim xlApp As New Microsoft.Office.Interop.Excel.Application
            Dim xlWorkBook As Microsoft.Office.Interop.Excel.Workbook
            xlWorkBook = xlApp.Workbooks.Open(PATH)
            For I As Integer = 1 To 6
                Dim xlWorkSheet As New Microsoft.Office.Interop.Excel.Worksheet
                xlWorkSheet = xlWorkBook.Sheets(I)
                xlWorkSheet.Cells.Range("A1:X1").EntireColumn.AutoFit()
                If I = 1 Then
                    xlWorkSheet.Name = "B2B"
                ElseIf I = 2 Then
                    xlWorkSheet.Name = "B2CL"
                ElseIf I = 3 Then
                    xlWorkSheet.Name = "B2CS"
                ElseIf I = 4 Then
                    xlWorkSheet.Name = "CDNR"
                ElseIf I = 5 Then
                    xlWorkSheet.Name = "CDNRUR"
                ElseIf I = 6 Then
                    xlWorkSheet.Name = "HSN"
                ElseIf I = 7 Then
                    xlWorkSheet.Name = "HSNB2C"
                End If
                xlWorkBook.Save()
            Next
            xlApp.Visible = True

        Catch ex As Exception
            MsgBox("GSTR1 Details Excel File is Open, Please Close the File first then try to Export", MsgBoxStyle.Critical)
        End Try
    End Sub

End Class